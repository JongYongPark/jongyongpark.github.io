<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Makefile on RyanLabs</title><link>https://jongyongpark.github.io/tags/makefile/</link><description>Recent content in Makefile on RyanLabs</description><generator>Hugo -- 0.142.0</generator><language>ko-kr</language><lastBuildDate>Mon, 03 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jongyongpark.github.io/tags/makefile/index.xml" rel="self" type="application/rss+xml"/><item><title>Differences, priorities, and Bash equivalents for :=, =, and ?= in Makefiles</title><link>https://jongyongpark.github.io/posts/sdlc/makefile-bash--variable-assignment/</link><pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/makefile-bash--variable-assignment/</guid><description>&lt;p>Differences, priorities, and Bash equivalents for :=, =, and ?= in Makefiles&lt;/p>
&lt;hr>
&lt;p>An Explanation of the differences, priorities, and Bash equivalents for :=, =, and ?= in Makefiles.&lt;/p>
&lt;p>Makefile variable assignment operators:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>:= (Simple expansion):&lt;/p>
&lt;ul>
&lt;li>Expands variables immediately at assignment time.&lt;/li>
&lt;li>Example: FOO := $(BAR)&lt;/li>
&lt;li>If BAR changes later, FOO will not be affected.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>= (Recursive expansion):&lt;/p>
&lt;ul>
&lt;li>Defers expansion until the variable is used.&lt;/li>
&lt;li>Example: FOO = $(BAR)&lt;/li>
&lt;li>If BAR changes later, FOO will reflect the new value when used.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>?= (Conditional assignment):&lt;/p></description></item></channel></rss>