<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Home on RyanLabs</title><link>https://jongyongpark.github.io/</link><description>Recent content in Home on RyanLabs</description><generator>Hugo -- 0.142.0</generator><language>ko</language><lastBuildDate>Tue, 01 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jongyongpark.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>샘플 포스트 1</title><link>https://jongyongpark.github.io/posts/sample-post-1/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sample-post-1/</guid><description>&lt;p>이것은 요약입니다.&lt;/p></description></item><item><title>샘플 포스트 2</title><link>https://jongyongpark.github.io/posts/sample-post-2/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sample-post-2/</guid><description>&lt;p>이것은 샘플 포스트 2의 본문입니다.&lt;br>
Hugo 블로그가 잘 작동하는지 확인하기 위한 글입니다.&lt;/p></description></item><item><title>샘플 포스트 3</title><link>https://jongyongpark.github.io/posts/sample-post-3/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sample-post-3/</guid><description>&lt;p>이것은 샘플 포스트 3의 본문입니다.&lt;br>
Hugo 블로그가 잘 작동하는지 확인하기 위한 글입니다.&lt;/p></description></item><item><title>샘플 포스트 4</title><link>https://jongyongpark.github.io/posts/sample-post-4/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sample-post-4/</guid><description>&lt;p>이것은 샘플 포스트 4의 본문입니다.&lt;br>
Hugo 블로그가 잘 작동하는지 확인하기 위한 글입니다.&lt;/p></description></item><item><title>샘플 포스트 5</title><link>https://jongyongpark.github.io/posts/sample-post-5/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sample-post-5/</guid><description>&lt;p>이것은 샘플 포스트 5의 본문입니다.&lt;br>
Hugo 블로그가 잘 작동하는지 확인하기 위한 글입니다.&lt;/p></description></item><item><title>샘플 포스트 6</title><link>https://jongyongpark.github.io/posts/sample-post-6/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sample-post-6/</guid><description>&lt;p>이것은 샘플 포스트 6의 본문입니다.&lt;br>
Hugo 블로그가 잘 작동하는지 확인하기 위한 글입니다.&lt;/p></description></item><item><title>Apt proxy issue</title><link>https://jongyongpark.github.io/posts/sdlc/apt/</link><pubDate>Fri, 14 Mar 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/apt/</guid><description>&lt;h1 id="apt-proxy-issue">Apt proxy issue&lt;/h1>
&lt;p>Ubuntu에서 발생한 APT 업데이트 문제의 원인과 해결 방법을 정리해드리겠습니다.&lt;/p>
&lt;h2 id="문제-원인">문제 원인&lt;/h2>
&lt;ol>
&lt;li>APT(Advanced Package Tool)가 패키지 정보를 업데이트하려 할 때 프록시 서버(10.4.241.231:3142)를 통해 연결을 시도했습니다.&lt;/li>
&lt;li>해당 프록시 서버에 연결할 수 없어 모든 저장소에 대한 연결이 타임아웃되었습니다.&lt;/li>
&lt;li>문제는 &lt;code>/etc/apt/apt.conf&lt;/code> 파일에 설정된 프록시 설정이었습니다. 이 설정은 APT가 인터넷에 직접 연결하지 않고 프록시 서버를 통해 연결하도록 지시합니다.&lt;/li>
&lt;/ol>
&lt;h2 id="진단-과정">진단 과정&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>프록시 설정 확인:&lt;/p>
&lt;pre tabindex="0">&lt;code>cat /etc/apt/apt.conf.d/* | grep -i proxy
&lt;/code>&lt;/pre>&lt;p>이 명령어로는 apt.conf.d 디렉토리 내의 파일들에서 프록시 설정을 찾을 수 없었습니다.&lt;/p></description></item><item><title>Special characters</title><link>https://jongyongpark.github.io/posts/sdlc/special-chars/</link><pubDate>Fri, 14 Mar 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/special-chars/</guid><description>&lt;h1 id="자주-사용되는-특수-문자-및-설명">&lt;strong>자주 사용되는 특수 문자 및 설명&lt;/strong>&lt;/h1>
&lt;h3 id="1-기본적인-특수-문자">&lt;strong>1. 기본적인 특수 문자&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>기호&lt;/strong>&lt;/th>
&lt;th>&lt;strong>이름 (영어)&lt;/strong>&lt;/th>
&lt;th>&lt;strong>설명 (한국어)&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>_&lt;/code>&lt;/td>
&lt;td>Underscore&lt;/td>
&lt;td>언더스코어 (밑줄)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-&lt;/code>&lt;/td>
&lt;td>Hyphen&lt;/td>
&lt;td>하이픈 (대시, 붙임표)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>–&lt;/code>&lt;/td>
&lt;td>En dash&lt;/td>
&lt;td>엔 대시 (숫자 범위에서 사용, 예: 2020–2025)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>—&lt;/code>&lt;/td>
&lt;td>Em dash&lt;/td>
&lt;td>엠 대시 (긴 대시, 문장 구분에 사용)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>=&lt;/code>&lt;/td>
&lt;td>Equal sign&lt;/td>
&lt;td>등호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>+&lt;/code>&lt;/td>
&lt;td>Plus sign&lt;/td>
&lt;td>더하기 기호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>*&lt;/code>&lt;/td>
&lt;td>Asterisk&lt;/td>
&lt;td>별표, 곱셈 연산자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>/&lt;/code>&lt;/td>
&lt;td>Slash, Forward slash&lt;/td>
&lt;td>슬래시, 경로 구분자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\&lt;/code>&lt;/td>
&lt;td>Backslash&lt;/td>
&lt;td>백슬래시, Windows 경로 구분자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>`&lt;/td>
&lt;td>`&lt;/td>
&lt;td>Vertical bar, Pipe&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>!&lt;/code>&lt;/td>
&lt;td>Exclamation mark&lt;/td>
&lt;td>느낌표&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>@&lt;/code>&lt;/td>
&lt;td>At sign&lt;/td>
&lt;td>골뱅이, 이메일에서 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>#&lt;/code>&lt;/td>
&lt;td>Hash, Pound sign&lt;/td>
&lt;td>해시, 샵 (SNS 태그, 주석 표시)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$&lt;/code>&lt;/td>
&lt;td>Dollar sign&lt;/td>
&lt;td>달러 기호, 변수 기호 (Bash, PHP)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>%&lt;/code>&lt;/td>
&lt;td>Percent sign&lt;/td>
&lt;td>퍼센트 기호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>^&lt;/code>&lt;/td>
&lt;td>Caret&lt;/td>
&lt;td>캐럿 (지수 표현, 텍스트 강조)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;amp;&lt;/code>&lt;/td>
&lt;td>Ampersand&lt;/td>
&lt;td>앰퍼샌드 (AND 연산자)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="2-괄호-및-인용부호">&lt;strong>2. 괄호 및 인용부호&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>기호&lt;/strong>&lt;/th>
&lt;th>&lt;strong>이름 (영어)&lt;/strong>&lt;/th>
&lt;th>&lt;strong>설명 (한국어)&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>()&lt;/code>&lt;/td>
&lt;td>Parentheses&lt;/td>
&lt;td>소괄호 (괄호)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>[]&lt;/code>&lt;/td>
&lt;td>Square brackets&lt;/td>
&lt;td>대괄호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>{}&lt;/code>&lt;/td>
&lt;td>Curly brackets, Braces&lt;/td>
&lt;td>중괄호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;&amp;gt;&lt;/code>&lt;/td>
&lt;td>Angle brackets&lt;/td>
&lt;td>꺾쇠 괄호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>'&lt;/code>&lt;/td>
&lt;td>Single quote, Apostrophe&lt;/td>
&lt;td>작은따옴표, 아포스트로피&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;quot;&lt;/code>&lt;/td>
&lt;td>Double quote&lt;/td>
&lt;td>큰따옴표&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>`&lt;/code>&lt;/td>
&lt;td>Backtick&lt;/td>
&lt;td>백틱 (역따옴표, Markdown, JavaScript 등에서 사용)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="3-프로그래밍-및-명령어에서-자주-사용되는-특수-문자">&lt;strong>3. 프로그래밍 및 명령어에서 자주 사용되는 특수 문자&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>기호&lt;/strong>&lt;/th>
&lt;th>&lt;strong>이름 (영어)&lt;/strong>&lt;/th>
&lt;th>&lt;strong>설명 (한국어)&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>~&lt;/code>&lt;/td>
&lt;td>Tilde&lt;/td>
&lt;td>물결표 (홈 디렉토리 표현, 대략적인 의미)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>:&lt;/code>&lt;/td>
&lt;td>Colon&lt;/td>
&lt;td>콜론 (경로, 시간, 네임스페이스에서 사용)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>;&lt;/code>&lt;/td>
&lt;td>Semicolon&lt;/td>
&lt;td>세미콜론 (문장 구분자)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>.&lt;/code>&lt;/td>
&lt;td>Period, Dot&lt;/td>
&lt;td>마침표 (파일 확장자, 숨김 파일)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>,&lt;/code>&lt;/td>
&lt;td>Comma&lt;/td>
&lt;td>쉼표&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>?&lt;/code>&lt;/td>
&lt;td>Question mark&lt;/td>
&lt;td>물음표 (쿼리스트링, 조건문)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;&lt;/code>&lt;/td>
&lt;td>Less than&lt;/td>
&lt;td>작다 (비교 연산자)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;gt;&lt;/code>&lt;/td>
&lt;td>Greater than&lt;/td>
&lt;td>크다 (비교 연산자)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;&amp;lt;&lt;/code>&lt;/td>
&lt;td>Left shift&lt;/td>
&lt;td>비트 연산자, 리디렉션 (Bash)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;gt;&amp;gt;&lt;/code>&lt;/td>
&lt;td>Right shift&lt;/td>
&lt;td>비트 연산자, 파일 추가 (Bash)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="4-주요-사용-예시">&lt;strong>4. 주요 사용 예시&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>프로그래밍&lt;/strong>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;Hello, World!&amp;#34;&lt;/span>) &lt;span style="color:#75715e"># 큰따옴표 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> x &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;x is greater than or equal to 10&amp;#34;&lt;/span>) &lt;span style="color:#75715e"># 비교 연산자 `&amp;gt;=`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Bash 명령어&lt;/strong>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;Hello, &lt;/span>$USER&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#75715e"># $ (변수)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls -l /home/user &lt;span style="color:#75715e"># - (옵션)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ~/Documents &lt;span style="color:#75715e"># ~ (홈 디렉토리)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Markdown&lt;/strong>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span>**Bold Text** # 굵은 글씨 (별표 사용)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">`Code`&lt;/span> # 인라인 코드 (백틱 사용)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="-결론">&lt;strong>🔹 결론&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>파일명: &lt;code>_&lt;/code>(언더스코어)와 &lt;code>-&lt;/code>(하이픈) 사용 추천&lt;/li>
&lt;li>변수명: &lt;code>_&lt;/code>(언더스코어) 주로 사용&lt;/li>
&lt;li>프로그래밍: &lt;code>;&lt;/code>, &lt;code>:&lt;/code> 등 문법적 기호 많이 사용&lt;/li>
&lt;li>터미널/명령어: &lt;code>$&lt;/code>, &lt;code>~&lt;/code>, &lt;code>|&lt;/code> 등 필수 기호 활용&lt;/li>
&lt;/ul>
&lt;p>📌 &lt;strong>상황에 따라 적절한 특수 문자를 사용하면 코드 가독성과 명령어 실행이 편리해집니다!&lt;/strong> 🚀&lt;/p></description></item><item><title>k9s install</title><link>https://jongyongpark.github.io/posts/k8s_docker/k9s/</link><pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/k8s_docker/k9s/</guid><description>&lt;h1 id="내-작업">내 작업&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 최신 릴리스 버전 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RELEASE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>curl -s https://api.github.com/repos/derailed/k9s/releases/latest | grep &lt;span style="color:#e6db74">&amp;#39;&amp;#34;tag_name&amp;#34;:&amp;#39;&lt;/span> | sed -E &lt;span style="color:#e6db74">&amp;#39;s/.*&amp;#34;([^&amp;#34;]+)&amp;#34;.*/\1/&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 바이너리 다운로드&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -L https://github.com/derailed/k9s/releases/download/&lt;span style="color:#e6db74">${&lt;/span>RELEASE&lt;span style="color:#e6db74">}&lt;/span>/k9s_Linux_amd64.tar.gz -o k9s.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 압축 해제&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p k9s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -xzf k9s.tar.gz -C k9s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실행 파일 이동&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mv k9s/k9s /usr/local/bin/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실행 권한 부여&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod +x /usr/local/bin/k9s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 임시 파일 정리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rf k9s k9s.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h1 id="install-instruction-from-web">install instruction from web&lt;/h1>
&lt;p>K9s is easy to get up and running in Ubuntu with the following:&lt;/p></description></item><item><title>SSHFS Debugging</title><link>https://jongyongpark.github.io/posts/sdlc/sshfs-debug/</link><pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/sshfs-debug/</guid><description>&lt;h1 id="내-작업">내 작업&lt;/h1>
&lt;p>아래 명령어로 중복된 sshfs 가 있다면
mount | grep sshfs&lt;/p>
&lt;p>아래 명령어로 제거하 다시 시도
sudo umount ~/work_jonpark&lt;/p>
&lt;p>mount_jonpark&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@BD-82898:~/workspace/jonpark-work/cnc-umbrella-chart-2025.3.maint/local-dev$ ssh -vvv jonpark@aws-sig-ts-jonpark.aws.internalal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OpenSSH_9.6p1 Ubuntu-3ubuntu13.8, OpenSSL 3.0.13 &lt;span style="color:#ae81ff">30&lt;/span> Jan &lt;span style="color:#ae81ff">2024&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Reading configuration data /home/jonpark/.ssh/config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Reading configuration data /etc/ssh/ssh_config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: /etc/ssh/ssh_config line 19: include /etc/ssh/ssh_config.d/*.conf matched no files
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: /etc/ssh/ssh_config line 21: Applying options &lt;span style="color:#66d9ef">for&lt;/span> *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: expanded UserKnownHostsFile &lt;span style="color:#e6db74">&amp;#39;~/.ssh/known_hosts&amp;#39;&lt;/span> -&amp;gt; &lt;span style="color:#e6db74">&amp;#39;/home/jonpark/.ssh/known_hosts&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: expanded UserKnownHostsFile &lt;span style="color:#e6db74">&amp;#39;~/.ssh/known_hosts2&amp;#39;&lt;/span> -&amp;gt; &lt;span style="color:#e6db74">&amp;#39;/home/jonpark/.ssh/known_hosts2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: resolving &lt;span style="color:#e6db74">&amp;#34;aws-sig-ts-jonpark.aws.internal&amp;#34;&lt;/span> port &lt;span style="color:#ae81ff">22&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: resolve_host: lookup aws-sig-ts-jonpark.aws.internal:22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: channel_clear_timeouts: clearing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: ssh_connect_direct: entering
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Connecting to aws-sig-ts-jonpark.aws.internal &lt;span style="color:#f92672">[&lt;/span>10.230.157.239&lt;span style="color:#f92672">]&lt;/span> port 22.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: set_sock_tos: set socket &lt;span style="color:#ae81ff">3&lt;/span> IP_TOS 0x10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Connection established.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_rsa type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_rsa-cert type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_ecdsa type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_ecdsa-cert type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_ecdsa_sk type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_ecdsa_sk-cert type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_ed25519 type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_ed25519-cert type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_ed25519_sk type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_ed25519_sk-cert type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_xmss type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_xmss-cert type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_dsa type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: identity file /home/jonpark/.ssh/id_dsa-cert type -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Local version string SSH-2.0-OpenSSH_9.6p1 Ubuntu-3ubuntu13.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Remote protocol version 2.0, remote software version OpenSSH_8.9p1 Ubuntu-3ubuntu0.11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: compat_banner: match: OpenSSH_8.9p1 Ubuntu-3ubuntu0.11 pat OpenSSH* compat 0x04000000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: fd &lt;span style="color:#ae81ff">3&lt;/span> setting O_NONBLOCK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Authenticating to aws-sig-ts-jonpark.aws.internal:22 as &lt;span style="color:#e6db74">&amp;#39;jonpark&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: load_hostkeys: fopen /home/jonpark/.ssh/known_hosts2: No such file or directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: load_hostkeys: fopen /etc/ssh/ssh_known_hosts: No such file or directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: load_hostkeys: fopen /etc/ssh/ssh_known_hosts2: No such file or directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: order_hostkeyalgs: no algorithms matched; accept original
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: SSH2_MSG_KEXINIT sent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: receive packet: type &lt;span style="color:#ae81ff">20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: SSH2_MSG_KEXINIT received
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: local client KEXINIT proposal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: KEX algorithms: sntrup761x25519-sha512@openssh.com,curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,ext-info-c,kex-strict-c-v00@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: host key algorithms: ssh-ed25519-cert-v01@openssh.com,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,sk-ecdsa-sha2-nistp256-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ssh-ed25519@openssh.com,sk-ecdsa-sha2-nistp256@openssh.com,rsa-sha2-512,rsa-sha2-256
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: compression ctos: none,zlib@openssh.com,zlib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: compression stoc: none,zlib@openssh.com,zlib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: languages ctos:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: languages stoc:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: first_kex_follows &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: reserved &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: peer server KEXINIT proposal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,kex-strict-s-v00@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: host key algorithms: rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: MACs ctos: umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: MACs stoc: umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: compression ctos: none,zlib@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: compression stoc: none,zlib@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: languages ctos:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: languages stoc:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: first_kex_follows &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: reserved &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: kex_choose_conf: will use strict KEX ordering
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: kex: algorithm: curve25519-sha256
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: kex: host key algorithm: ssh-ed25519
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: kex: server-&amp;gt;client cipher: chacha20-poly1305@openssh.com MAC: &amp;lt;implicit&amp;gt; compression: none
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: kex: client-&amp;gt;server cipher: chacha20-poly1305@openssh.com MAC: &amp;lt;implicit&amp;gt; compression: none
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: receive packet: type &lt;span style="color:#ae81ff">31&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: SSH2_MSG_KEX_ECDH_REPLY received
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Server host key: ssh-ed25519 SHA256:5D1rxgnPZJQM+hxFvUM5lP6+jMATgvQgonw/F8TIRVA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: load_hostkeys: fopen /home/jonpark/.ssh/known_hosts2: No such file or directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: load_hostkeys: fopen /etc/ssh/ssh_known_hosts: No such file or directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: load_hostkeys: fopen /etc/ssh/ssh_known_hosts2: No such file or directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_find_by_key_hostfile: trying user hostfile &lt;span style="color:#e6db74">&amp;#34;/home/jonpark/.ssh/known_hosts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_foreach: reading file &lt;span style="color:#e6db74">&amp;#34;/home/jonpark/.ssh/known_hosts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: hostkeys_find_by_key_cb: found matching key in ~/.ssh/known_hosts:1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_find_by_key_hostfile: trying user hostfile &lt;span style="color:#e6db74">&amp;#34;/home/jonpark/.ssh/known_hosts2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: hostkeys_find_by_key_hostfile: hostkeys file /home/jonpark/.ssh/known_hosts2 does not exist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_find_by_key_hostfile: trying system hostfile &lt;span style="color:#e6db74">&amp;#34;/etc/ssh/ssh_known_hosts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: hostkeys_find_by_key_hostfile: hostkeys file /etc/ssh/ssh_known_hosts does not exist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_find_by_key_hostfile: trying system hostfile &lt;span style="color:#e6db74">&amp;#34;/etc/ssh/ssh_known_hosts2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: hostkeys_find_by_key_hostfile: hostkeys file /etc/ssh/ssh_known_hosts2 does not exist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The authenticity of host &lt;span style="color:#e6db74">&amp;#39;aws-sig-ts-jonpark.aws.internal (10.230.157.239)&amp;#39;&lt;/span> can&lt;span style="color:#e6db74">&amp;#39;t be established.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">ED25519 key fingerprint is SHA256:5D1rxgnPZJQM+hxFvUM5lP6+jMATgvQgonw/F8TIRVA.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">This host key is known by the following other names/addresses:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ~/.ssh/known_hosts:1: us03-sig-ts-jonpark.nprd.sig.synopsys.com
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Warning: Permanently added &amp;#39;&lt;/span>aws-sig-ts-jonpark.aws.internal&lt;span style="color:#e6db74">&amp;#39; (ED25519) to the list of known hosts.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: send packet: type 21
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: ssh_packet_send2_wrapped: resetting send seqnr 3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug2: ssh_set_newkeys: mode 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: rekey out after 134217728 blocks
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: SSH2_MSG_NEWKEYS sent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: expecting SSH2_MSG_NEWKEYS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: receive packet: type 21
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: ssh_packet_read_poll2: resetting read seqnr 3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: SSH2_MSG_NEWKEYS received
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug2: ssh_set_newkeys: mode 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: rekey in after 134217728 blocks
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: send packet: type 5
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: receive packet: type 7
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: SSH2_MSG_EXT_INFO received
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: kex_input_ext_info: extension server-sig-algs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: kex_ext_info_client_parse: server-sig-algs=&amp;lt;ssh-ed25519,sk-ssh-ed25519@openssh.com,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com,webauthn-sk-ecdsa-sha2-nistp256@openssh.com&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: kex_input_ext_info: extension publickey-hostbound@openssh.com
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: kex_ext_info_check_ver: publickey-hostbound@openssh.com=&amp;lt;0&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: receive packet: type 6
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug2: service_accept: ssh-userauth
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: SSH2_MSG_SERVICE_ACCEPT received
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: send packet: type 50
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: receive packet: type 51
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: start over, passed a different list publickey,gssapi-keyex,gssapi-with-mic,password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: preferred gssapi-with-mic,publickey,keyboard-interactive,password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: authmethod_lookup gssapi-with-mic
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: remaining preferred: publickey,keyboard-interactive,password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: authmethod_is_enabled gssapi-with-mic
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Next authentication method: gssapi-with-mic
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: No credentials were supplied, or the credentials were unavailable or inaccessible
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: No credentials were supplied, or the credentials were unavailable or inaccessible
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">No Kerberos credentials available (default cache: FILE:/tmp/krb5cc_1000)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug2: we did not send a packet, disable method
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: authmethod_lookup publickey
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: remaining preferred: keyboard-interactive,password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: authmethod_is_enabled publickey
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Next authentication method: publickey
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Will attempt key: /home/jonpark/.ssh/id_rsa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Will attempt key: /home/jonpark/.ssh/id_ecdsa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Will attempt key: /home/jonpark/.ssh/id_ecdsa_sk
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Will attempt key: /home/jonpark/.ssh/id_ed25519
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Will attempt key: /home/jonpark/.ssh/id_ed25519_sk
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Will attempt key: /home/jonpark/.ssh/id_xmss
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Will attempt key: /home/jonpark/.ssh/id_dsa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug2: pubkey_prepare: done
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Trying private key: /home/jonpark/.ssh/id_rsa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: no such identity: /home/jonpark/.ssh/id_rsa: No such file or directory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Trying private key: /home/jonpark/.ssh/id_ecdsa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: no such identity: /home/jonpark/.ssh/id_ecdsa: No such file or directory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Trying private key: /home/jonpark/.ssh/id_ecdsa_sk
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: no such identity: /home/jonpark/.ssh/id_ecdsa_sk: No such file or directory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Trying private key: /home/jonpark/.ssh/id_ed25519
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: no such identity: /home/jonpark/.ssh/id_ed25519: No such file or directory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Trying private key: /home/jonpark/.ssh/id_ed25519_sk
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: no such identity: /home/jonpark/.ssh/id_ed25519_sk: No such file or directory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Trying private key: /home/jonpark/.ssh/id_xmss
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: no such identity: /home/jonpark/.ssh/id_xmss: No such file or directory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Trying private key: /home/jonpark/.ssh/id_dsa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: no such identity: /home/jonpark/.ssh/id_dsa: No such file or directory
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug2: we did not send a packet, disable method
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: authmethod_lookup password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: remaining preferred: ,password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug3: authmethod_is_enabled password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">debug1: Next authentication method: password
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">jonpark@aws-sig-ts-jonpark.aws.internal&amp;#39;&lt;/span>s password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">50&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: we sent a password packet, wait &lt;span style="color:#66d9ef">for&lt;/span> reply
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: receive packet: type &lt;span style="color:#ae81ff">52&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authenticated to aws-sig-ts-jonpark.aws.internal &lt;span style="color:#f92672">([&lt;/span>10.230.157.239&lt;span style="color:#f92672">]&lt;/span>:22&lt;span style="color:#f92672">)&lt;/span> using &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: channel 0: new session &lt;span style="color:#f92672">[&lt;/span>client-session&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">(&lt;/span>inactive timeout: 0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: ssh_session2_open: channel_new: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel 0: send open
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">90&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Requesting no-more-sessions@openssh.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Entering interactive session.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: pledge: filesystem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: client_repledge: enter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: receive packet: type &lt;span style="color:#ae81ff">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: client_input_hostkeys: received RSA key SHA256:q5fXsdVe64oWpCs4iJ3FZVuPhCc0jVS1eaBnbodu4Ao
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: client_input_hostkeys: received ECDSA key SHA256:2CuF+VWAhjLWVdiq+DHjknUpY/qOCejEphFrHKZ0EUA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: client_input_hostkeys: received ED25519 key SHA256:5D1rxgnPZJQM+hxFvUM5lP6+jMATgvQgonw/F8TIRVA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: client_input_hostkeys: searching /home/jonpark/.ssh/known_hosts &lt;span style="color:#66d9ef">for&lt;/span> aws-sig-ts-jonpark.aws.internal / &lt;span style="color:#f92672">(&lt;/span>none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_foreach: reading file &lt;span style="color:#e6db74">&amp;#34;/home/jonpark/.ssh/known_hosts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_find: found ssh-ed25519 key under different name/addr at /home/jonpark/.ssh/known_hosts:1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_find: found ssh-rsa key under different name/addr at /home/jonpark/.ssh/known_hosts:2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_find: found ecdsa-sha2-nistp256 key under different name/addr at /home/jonpark/.ssh/known_hosts:3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: hostkeys_find: found ssh-ed25519 key at /home/jonpark/.ssh/known_hosts:8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: client_input_hostkeys: searching /home/jonpark/.ssh/known_hosts2 &lt;span style="color:#66d9ef">for&lt;/span> aws-sig-ts-jonpark.aws.internal / &lt;span style="color:#f92672">(&lt;/span>none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: client_input_hostkeys: hostkeys file /home/jonpark/.ssh/known_hosts2 does not exist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: client_input_hostkeys: &lt;span style="color:#ae81ff">3&lt;/span> server keys: &lt;span style="color:#ae81ff">2&lt;/span> new, &lt;span style="color:#ae81ff">18446744073709551615&lt;/span> retained, &lt;span style="color:#ae81ff">2&lt;/span> incomplete match. &lt;span style="color:#ae81ff">0&lt;/span> to remove
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: client_input_hostkeys: host key found matching a different name/address, skipping UserKnownHostsFile update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: client_repledge: enter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: receive packet: type &lt;span style="color:#ae81ff">91&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel_input_open_confirmation: channel 0: callback start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: fd &lt;span style="color:#ae81ff">3&lt;/span> setting TCP_NODELAY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: set_sock_tos: set socket &lt;span style="color:#ae81ff">3&lt;/span> IP_TOS 0x10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: client_session2_setup: id &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel 0: request pty-req confirm &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">98&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: Sending environment.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SHELL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env COLORTERM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CVSROOT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env WSL2_GUI_APPS_ENABLED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env TERM_PROGRAM_VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CONDA_EXE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env _CE_M
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env WSL_DISTRO_NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env IN_PROFILE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env MODULAR_HOME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env DOCKER_SYNOPSYS_USER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SNYK_API_TOKEN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env LANGUAGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SWIP_CLI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env TI_CGT_C6000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env DOTNET_ROOT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env GRADLE_HOME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SNYK_ORG_NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env PYDEVD_DISABLE_FILE_VALIDATION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SDKMAN_CANDIDATES_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env GOBIN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env PWD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env LOGNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CONDA_PREFIX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env BUNDLED_DEBUGPY_PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env VSCODE_GIT_ASKPASS_NODE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SNYK_TOKEN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env HOME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: channel 0: setting env LANG &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;en_US.UTF-8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel 0: request env confirm &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">98&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env WSL_INTEROP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env LS_COLORS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env WAYLAND_DISPLAY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env DOCKER_SYNOPSYS_PASS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CONDA_PROMPT_MODIFIER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env GIT_ASKPASS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env M2_HOME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env GOROOT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env NVM_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env VSCODE_GIT_ASKPASS_EXTRA_ARGS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env LESSCLOSE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env COVERITY_NO_LOG_ENVIRONMENT_VARIABLES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env TERM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env DEBUGPY_ADAPTER_ENDPOINTS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env _CE_CONDA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env LESSOPEN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env USER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env VSCODE_GIT_IPC_HANDLE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CONDA_SHLVL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env MAVEN_HOME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SDKMAN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env DISPLAY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SHLVL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env COV_ROOT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env API_VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SONAR_SCANNER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CVS_RSH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SDKMAN_CANDIDATES_API
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env IN_BASHRC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CONDA_PYTHON_EXE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CSA_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env XDG_RUNTIME_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env CONDA_DEFAULT_ENV
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env ZIPINFO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env UNZIP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env WSLENV
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: channel 0: setting env LC_ALL &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;en_US.UTF-8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel 0: request env confirm &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">98&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env VSCODE_GIT_ASKPASS_MAIN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SONAR_SCANNER_BIN_PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env COV_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env XDG_DATA_DIRS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SRM_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env USING_SRM_VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env USING_CSA_BIN_PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SNYK_API_VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env DBUS_SESSION_BUS_ADDRESS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env SDKMAN_PLATFORM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env HOSTTYPE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env PULSE_SERVER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env OLDPWD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env GOPATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env TERM_PROGRAM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env VSCODE_IPC_HOOK_CLI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: Ignored env _
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel 0: request shell confirm &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: send packet: type &lt;span style="color:#ae81ff">98&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: client_repledge: enter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug1: pledge: fork
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel_input_open_confirmation: channel 0: callback &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel 0: open confirm rwindow &lt;span style="color:#ae81ff">0&lt;/span> rmax &lt;span style="color:#ae81ff">32768&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: receive packet: type &lt;span style="color:#ae81ff">99&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel_input_status_confirm: type &lt;span style="color:#ae81ff">99&lt;/span> id &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: PTY allocation request accepted on channel &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel 0: rcvd adjust &lt;span style="color:#ae81ff">2097152&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug3: receive packet: type &lt;span style="color:#ae81ff">99&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: channel_input_status_confirm: type &lt;span style="color:#ae81ff">99&lt;/span> id &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug2: shell request accepted on channel &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Welcome to Ubuntu 22.04.4 LTS &lt;span style="color:#f92672">(&lt;/span>GNU/Linux 5.15.0-131-generic x86_64&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Documentation: https://help.ubuntu.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Management: https://landscape.canonical.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Support: https://ubuntu.com/pro
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Expanded Security Maintenance &lt;span style="color:#66d9ef">for&lt;/span> Applications is not enabled.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">144&lt;/span> updates can be applied immediately.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>To see these additional updates run: apt list --upgradable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">38&lt;/span> additional security updates can be applied with ESM Apps.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Learn more about enabling ESM Apps service at https://ubuntu.com/esm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The list of available updates is more than a week old.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>To check &lt;span style="color:#66d9ef">for&lt;/span> new updates run: sudo apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*** System restart required ***
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Last login: Sun Mar &lt;span style="color:#ae81ff">9&lt;/span> 19:52:44 &lt;span style="color:#ae81ff">2025&lt;/span> from 10.230.18.206
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~$ hostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aws-sig-ts-jonpark.aws.internal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h1 id="디버깅-방법">디버깅 방법&lt;/h1></description></item><item><title>Windows 에서 WSL을 통해 ec2에 접근하기</title><link>https://jongyongpark.github.io/posts/sdlc/sshfs-win-wsl-ec2/</link><pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/sshfs-win-wsl-ec2/</guid><description>&lt;h1 id="windows-에서-wsl을-통해-ec2-에-접근시-symbol-link에-따른-문제점">Windows 에서 WSL을 통해 ec2 에 접근시 symbol link에 따른 문제점&lt;/h1>
&lt;h2 id="내-작업">내 작업&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">### AWS ec2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Hdd 가 부족해서 하나 더 추가했다 - 이것이 opt/dlami/nvme 임임&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> ubuntu@ip-172-31-26-173:~$ df -Th
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem Type Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/root ext4 117G 69G 48G 60% /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs tmpfs 32G 48M 32G 1% /dev/shm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs tmpfs 13G 1.4M 13G 1% /run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs tmpfs 5.0M &lt;span style="color:#ae81ff">0&lt;/span> 5.0M 0% /run/lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>efivarfs efivarfs 128K 4.1K 119K 4% /sys/firmware/efi/efivars
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/nvme0n1p15 vfat 105M 6.1M 99M 6% /boot/efi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs tmpfs 6.3G 68K 6.3G 1% /run/user/126
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/mapper/vg.01-lv_ephemeral ext4 206G 76G 119G 39% /opt/dlami/nvme
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs tmpfs 6.3G 76K 6.3G 1% /run/user/1000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> ubuntu@ip-172-31-26-173:~$ ll workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> ubuntu ubuntu &lt;span style="color:#ae81ff">15&lt;/span> Jan &lt;span style="color:#ae81ff">24&lt;/span> 09:47 workspace -&amp;gt; /opt/dlami/nvme/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">### WSL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~$ cat .bashrc | grep ec2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias mount_ec2&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;sudo sshfs -o uid=`id -u jonpark` -o gid=`id -g jonpark` -o allow_other ubuntu@jonpark-ec2:/home/ubuntu -o IdentityFile=~/jonpark-ec2.pem ~/work_ec2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 수정 : -o follow_symlinks 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias mount_ec2&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;sudo sshfs -o uid=`id -u jonpark` -o gid=`id -g jonpark` -o allow_other -o follow_symlinks ubuntu@jonpark-ec2:/home/ubuntu -o IdentityFile=~/jonpark-ec2.pem ~/work_ec2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 실행 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~$ sudo umount ~/work_ec2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~$ sudo sshfs -o uid&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>id -u jonpark&lt;span style="color:#e6db74">`&lt;/span> -o gid&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>id -g jonpark&lt;span style="color:#e6db74">`&lt;/span> -o allow_other -o follow_symlinks ubuntu@jonpark-ec2:/home/ubuntu -o IdentityFile&lt;span style="color:#f92672">=&lt;/span>~/jonpark-ec2.pem ~/work_ec2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>sudo&lt;span style="color:#f92672">]&lt;/span> password &lt;span style="color:#66d9ef">for&lt;/span> jonpark:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 결과&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~$ ll -d work_ec2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwx------ &lt;span style="color:#ae81ff">1&lt;/span> jonpark jonpark 4.0K Feb &lt;span style="color:#ae81ff">25&lt;/span> 14:13 work_ec2/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~$ ls work_ec2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>blackduck-oidc LINUX_PACKAGES_LICENSES Public/ THIRD_PARTY_SOURCE_CODE_URLS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BUILD_FROM_SOURCE_PACKAGES_LICENCES LINUX_PACKAGES_LIST PYTHON_PACKAGES_LICENSES Videos/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Desktop/ Music/ srm-2024.12.1-0-linux-x64-installer.run* workspace/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Documents/ nvidia-acknowledgements/ srm-license.txt zed-linux-x86_64.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloads/ OSSNvidiaDriver_v550.90.07_license.txt Templates/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>google-chrome-stable_current_amd64.deb Pictures/ thinclient_drives/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~$ ll -d work_ec2/workspace/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxrwxrwt &lt;span style="color:#ae81ff">1&lt;/span> jonpark jonpark 4.0K Feb &lt;span style="color:#ae81ff">24&lt;/span> 19:20 work_ec2/workspace//
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~$ ls work_ec2/workspace/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ai/ dev_tool/ dockers/ jonpark-work/ lost+found/ miniconda3/ open-webui/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~$
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="답변">답변&lt;/h2>
&lt;p>이제 문제가 더 명확해졌습니다. EC2에서 &lt;code>workspace&lt;/code>는 &lt;code>/opt/dlami/nvme/&lt;/code>를 가리키는 심볼릭 링크입니다. SSHFS를 통한 마운트 시 심볼릭 링크 처리에 문제가 있는 것으로 보입니다.&lt;/p></description></item><item><title>Zone.Identifier</title><link>https://jongyongpark.github.io/posts/sdlc/wsl-zone.identifier/</link><pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/wsl-zone.identifier/</guid><description>&lt;h1 id="windows-에서-wsl로-복사하면-복사한-파일이름-zoneidenifier-파일이-생기지-않게-하는-방법">windows 에서 wsl로 복사하면 &amp;ldquo;복사한 파일이름 zone.idenifier&amp;rdquo; 파일이 생기지 않게 하는 방법.&lt;/h1>
&lt;p>Zone.Identifier 파일은 Windows 시스템에서 외부 출처(인터넷, 이메일 등)에서 다운로드한 파일에 자동으로 추가되는 대체 데이터 스트림(Alternate Data Stream, ADS)입니다. 이 파일에는 원본 파일의 출처와 관련된 보안 정보가 포함되어 있습니다.&lt;/p>
&lt;p>파일을 WSL로 복사할 때 Windows에서는 이 메타데이터를 별도의 Zone.Identifier 파일로 변환합니다. 이는 NTFS 파일 시스템의 기능이지만 Linux 파일 시스템에서는 지원하지 않기 때문입니다.&lt;/p>
&lt;h2 id="zoneidentifier-파일이-생성되지-않게-하는-방법">Zone.Identifier 파일이 생성되지 않게 하는 방법:&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Windows에서 파일 신뢰 설정&lt;/strong>:&lt;/p></description></item><item><title>Gcc Visibility</title><link>https://jongyongpark.github.io/posts/technical-support/coverity/cov-gcc-visibility/</link><pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/cov-gcc-visibility/</guid><description>&lt;h1 id="gcc-visibility">Gcc Visibility&lt;/h1>
&lt;p>전처리된 파일에서 보이는 &lt;code>basic_string&lt;/code> 함수의 속성과 컴파일러 옵션이 CIM 소스 창에서 이 함수들이 보이지 않는 이유에 대해 자세히 설명해 드리겠습니다.&lt;/p>
&lt;h2 id="가시성-속성-상세-설명">가시성 속성 상세 설명&lt;/h2>
&lt;p>다음 코드 라인을 살펴보겠습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">inline&lt;/span> __attribute__ ((__visibility__(&lt;span style="color:#e6db74">&amp;#34;hidden&amp;#34;&lt;/span>))) __attribute__ ((__exclude_from_explicit_instantiation__))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>이것은 함수에 두 가지 중요한 GCC/Clang 속성을 적용하고 있습니다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code>__attribute__ ((__visibility__(&amp;quot;hidden&amp;quot;)))&lt;/code> - 이 속성은 컴파일러에게 함수에 &amp;ldquo;hidden&amp;rdquo; 가시성을 부여하도록 지시합니다:&lt;/p>
&lt;ul>
&lt;li>이 심볼은 공유 라이브러리/실행 파일에서 내보내지지 않습니다&lt;/li>
&lt;li>다른 모듈에서 동적 링크를 통해 접근할 수 없습니다&lt;/li>
&lt;li>정의된 컴파일 단위나 라이브러리 내에서만 접근 가능합니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>__attribute__ ((__exclude_from_explicit_instantiation__))&lt;/code> - 이 속성은 컴파일러에게 이 함수를 어떤 명시적 템플릿 인스턴스화에도 포함시키지 말라고 지시합니다. 이는 코드 크기를 줄이고 중복 정의를 방지하는 데 도움이 됩니다.&lt;/p></description></item><item><title>Deno Install</title><link>https://jongyongpark.github.io/posts/sdlc/deno-install/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/deno-install/</guid><description>&lt;h1 id="install">Install&lt;/h1>
&lt;p>Deno는 JavaScript와 TypeScript를 위한 현대적인 런타임 환경으로, 설치 및 사용이 매우 간단합니다. 아래에 Deno를 설치하고 &amp;ldquo;Hello, World!&amp;rdquo; 프로그램을 작성하여 실행하는 방법을 안내해 드리겠습니다.&lt;/p>
&lt;h3 id="1-deno-설치하기">1. Deno 설치하기&lt;/h3>
&lt;p>&lt;strong>macOS 및 Linux&lt;/strong>:&lt;/p>
&lt;p>터미널을 열고 다음 명령어를 입력하여 Deno를 설치할 수 있습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>curl -fsSL https://deno.land/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>이 명령어는 공식 설치 스크립트를 다운로드하여 실행합니다.&lt;/p>
&lt;p>&lt;strong>Windows&lt;/strong>:&lt;/p>
&lt;p>PowerShell을 관리자 권한으로 열고 다음 명령어를 실행합니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>iwr https&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>//deno.land/install.ps1 -useb | iex
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>또는, Windows에서 &lt;a href="https://chocolatey.org/">Chocolatey&lt;/a> 패키지 관리자를 사용 중이라면, 다음과 같이 설치할 수 있습니다:&lt;/p></description></item><item><title>Go Install</title><link>https://jongyongpark.github.io/posts/sdlc/go-install/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/go-install/</guid><description>&lt;h1 id="go-install">Go Install&lt;/h1>
&lt;p>기존 Go 1.22.2가 &lt;code>/usr/bin/go&lt;/code>로 설치되어 있고, 새롭게 Go 1.23.1 및 Go 1.23.5를 &lt;strong>&lt;code>~/local&lt;/code>&lt;/strong> 폴더에 설치한 후 원하는 버전을 선택해서 사용하는 방법을 정리해 드리겠습니다. 🚀&lt;/p>
&lt;hr>
&lt;h2 id="-1-기존-go-1222-확인">✅ &lt;strong>1. 기존 Go (1.22.2) 확인&lt;/strong>&lt;/h2>
&lt;p>현재 기본 Go(1.22.2)가 &lt;code>/usr/bin/go&lt;/code>에 설치되어 있음.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>/usr/bin/go version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>출력 예시:&lt;/p>
&lt;pre tabindex="0">&lt;code>go version go1.22.2 linux/amd64
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-2-새로운-go-버전-1231--1235-설치">✅ &lt;strong>2. 새로운 Go 버전 (1.23.1 &amp;amp; 1.23.5) 설치&lt;/strong>&lt;/h2>
&lt;p>기존 Go(1.22.2)는 유지하면서, 추가 Go 버전을 설치하겠습니다.&lt;/p>
&lt;h3 id="-go-1231-다운로드-및-설치">🔹 &lt;strong>Go 1.23.1 다운로드 및 설치&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>mkdir -p ~/local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ~/local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://go.dev/dl/go1.23.1.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -xzf go1.23.1.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv go go1.23.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="-go-1235-다운로드-및-설치">🔹 &lt;strong>Go 1.23.5 다운로드 및 설치&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>cd ~/local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://go.dev/dl/go1.23.5.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -xzf go1.23.5.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv go go1.23.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>설치 후 폴더 구조:&lt;/p></description></item><item><title>Mojo Install</title><link>https://jongyongpark.github.io/posts/sdlc/mojo-install/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/mojo-install/</guid><description>&lt;h1 id="mojo-설치">Mojo 설치&lt;/h1>
&lt;p>Mojo는 Modular가 개발한 새로운 프로그래밍 언어로, Python과 유사하지만 더 높은 성능을 제공합니다. WSL (Windows Subsystem for Linux)의 Ubuntu 환경에서 Mojo를 설치하려면 다음과 같은 단계를 따르면 됩니다.&lt;/p>
&lt;hr>
&lt;h3 id="1-wsl-및-ubuntu-확인">&lt;strong>1. WSL 및 Ubuntu 확인&lt;/strong>&lt;/h3>
&lt;p>먼저 WSL이 설치되어 있고 Ubuntu가 실행 중인지 확인하세요.&lt;/p>
&lt;ul>
&lt;li>WSL이 설치되어 있지 않다면 &lt;a href="https://learn.microsoft.com/ko-kr/windows/wsl/install">Microsoft 공식 문서&lt;/a>를 참고하여 설치하세요.&lt;/li>
&lt;li>Ubuntu는 Microsoft Store에서 다운로드하거나 명령줄에서 설치할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;p>WSL Ubuntu가 이미 설치되어 있다면, 터미널을 열고 다음 명령어로 Ubuntu 버전을 확인하세요:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>lsb_release -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="2-mojo-설치-준비">&lt;strong>2. Mojo 설치 준비&lt;/strong>&lt;/h3>
&lt;p>Mojo는 아직 초기 단계의 언어이므로 공식적으로 지원되는 패키지 관리자가 없습니다. 따라서 Modular의 공식 웹사이트나 CLI 도구를 사용하여 설치해야 합니다.&lt;/p></description></item><item><title>Mojo Sample Code like Curl</title><link>https://jongyongpark.github.io/posts/sdlc/mojo-curl/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/mojo-curl/</guid><description>&lt;h2 id="-mojo로-curl과-비슷한-기능-구현하기">&lt;strong>🚀 Mojo로 &lt;code>curl&lt;/code>과 비슷한 기능 구현하기&lt;/strong>&lt;/h2>
&lt;p>Mojo는 Python과 유사한 문법을 가지면서도, 시스템 프로그래밍에 적합한 고성능 언어입니다. 현재 Mojo는 공식적으로 네트워크 라이브러리를 제공하지 않으므로, &lt;strong>소켓을 활용하여 HTTP 요청을 보내는 &lt;code>curl&lt;/code> 대체 기능&lt;/strong>을 직접 구현할 수 있습니다.&lt;/p>
&lt;hr>
&lt;h1 id="-1-mojo에서-http-요청curl-기능-구현하기">&lt;strong>📌 1. Mojo에서 HTTP 요청(&lt;code>curl&lt;/code> 기능) 구현하기&lt;/strong>&lt;/h1>
&lt;p>다음 코드는 &lt;strong>Mojo에서 &lt;code>curl&lt;/code>과 유사한 기능을 수행하는 HTTP GET 요청 함수&lt;/strong>입니다.&lt;/p>
&lt;h3 id="-mojo_curlmojo-파일-생성">&lt;strong>💾 &lt;code>mojo_curl.mojo&lt;/code> 파일 생성&lt;/strong>&lt;/h3>
&lt;p>아래 코드를 &lt;code>mojo_curl.mojo&lt;/code>라는 파일에 저장하세요.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mojo" data-lang="mojo">import sys
import socket
# HTTP GET 요청 함수
fn http_get(url: str) -&amp;gt; str:
# URL 파싱
let parts = url.split(&amp;#34;://&amp;#34;)
if parts.size() != 2 or parts[0] != &amp;#34;http&amp;#34;:
return &amp;#34;❌ 지원되지 않는 URL 형식입니다! (http만 지원)&amp;#34;
let domain_path = parts[1].split(&amp;#34;/&amp;#34;, 1)
let host = domain_path[0]
let path = &amp;#34;/&amp;#34; + domain_path[1] if domain_path.size() &amp;gt; 1 else &amp;#34;/&amp;#34;
# 소켓 생성 및 서버 연결
let sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((host, 80))
# HTTP 요청 작성
let request = &amp;#34;GET &amp;#34; + path + &amp;#34; HTTP/1.1\r\n&amp;#34;
request += &amp;#34;Host: &amp;#34; + host + &amp;#34;\r\n&amp;#34;
request += &amp;#34;User-Agent: Mojo-Curl/1.0\r\n&amp;#34;
request += &amp;#34;Connection: close\r\n\r\n&amp;#34;
# 요청 전송
sock.send(request.encode())
# 응답 수신
let response = &amp;#34;&amp;#34;
while True:
let data = sock.recv(1024)
if not data:
break
response += data.decode()
sock.close()
return response
# 명령줄에서 URL 입력 받기
fn main():
if sys.argv.size() &amp;lt; 2:
print(&amp;#34;🛠 사용법: mojo run mojo_curl.mojo &amp;lt;URL&amp;gt;&amp;#34;)
return
let url = sys.argv[1]
let response = http_get(url)
print(response)
&lt;/code>&lt;/pre>&lt;hr>
&lt;h1 id="-2-mojo-설치-및-실행-방법">&lt;strong>📌 2. Mojo 설치 및 실행 방법&lt;/strong>&lt;/h1>
&lt;p>Mojo는 현재 &lt;strong>Linux 및 macOS에서만 실행 가능&lt;/strong>합니다.&lt;/p></description></item><item><title>SRM Coverity Tool Connector Issues</title><link>https://jongyongpark.github.io/posts/technical-support/srm/srm-coverity-tool-connector/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/srm/srm-coverity-tool-connector/</guid><description>&lt;h1 id="an-unexpected-error-occurred-while-validating-the-connection">An unexpected error occurred while validating the connection&lt;/h1>
&lt;p>01207318&lt;/p>
&lt;h3 id="-문제-요약-및-해결-방법">&lt;strong>🔍 문제 요약 및 해결 방법&lt;/strong>&lt;/h3>
&lt;h4 id="-문제-요약">✅ &lt;strong>문제 요약&lt;/strong>&lt;/h4>
&lt;p>고객이 **Coverity(HTTP, 8080 포트)**에 대한 툴 커넥터 설정 중 &lt;strong>&amp;ldquo;An unexpected error occurred while validating the connection&amp;rdquo;&lt;/strong> 오류가 발생했다고 보고함.&lt;br>
로그를 확인한 결과, 다음과 같은 문제가 발생함:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>오류 메시지:&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>ERROR - Creating a new NewHttpClient instance failed with: Response validation for [Coverity Session Cookie] encountered 1 error:
1. Expected a [COVJSESSIONID-build] cookie in the response, but it was missing.
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Coverity 서버의 응답에서 &lt;strong>&lt;code>COVJSESSIONID-build&lt;/code> 세션 쿠키가 누락됨&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>고객 확인 사항:&lt;/strong>&lt;/p></description></item><item><title>Beyond Compare 4를 리눅스에 설치하기</title><link>https://jongyongpark.github.io/posts/sdlc/beyond-compare-wsl/</link><pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/beyond-compare-wsl/</guid><description>&lt;h1 id="beyond-compare-4를-리눅스에-설치하기">Beyond Compare 4를 리눅스에 설치하기&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bash#:~$ cd ~/Downloads/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~/Downloads$ wget https://www.scootersoftware.com/bcompare-4.4.6.27483_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--2025-02-25 14:58:16-- https://www.scootersoftware.com/bcompare-4.4.6.27483_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Resolving www.scootersoftware.com &lt;span style="color:#f92672">(&lt;/span>www.scootersoftware.com&lt;span style="color:#f92672">)&lt;/span>... 72.32.90.250
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connecting to www.scootersoftware.com &lt;span style="color:#f92672">(&lt;/span>www.scootersoftware.com&lt;span style="color:#f92672">)&lt;/span>|72.32.90.250|:443... connected.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HTTP request sent, awaiting response... &lt;span style="color:#ae81ff">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Length: &lt;span style="color:#ae81ff">20609066&lt;/span> &lt;span style="color:#f92672">(&lt;/span>20M&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">[&lt;/span>application/octet-stream&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Saving to: ‘bcompare-4.4.6.27483_amd64.deb’
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bcompare-4.4.6.27483_amd64.deb 100%&lt;span style="color:#f92672">[=============================================================================&lt;/span>&amp;gt;&lt;span style="color:#f92672">]&lt;/span> 19.65M 3.55MB/s in 6.7s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2025-02-25 14:58:24 &lt;span style="color:#f92672">(&lt;/span>2.93 MB/s&lt;span style="color:#f92672">)&lt;/span> - ‘bcompare-4.4.6.27483_amd64.deb’ saved &lt;span style="color:#f92672">[&lt;/span>20609066/20609066&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~/Downloads$ sudo apt install ./bcompare-4.4.6.27483_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>sudo&lt;span style="color:#f92672">]&lt;/span> password &lt;span style="color:#66d9ef">for&lt;/span> jonpark:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reading package lists... Done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Building dependency tree... Done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reading state information... Done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Note, selecting &lt;span style="color:#e6db74">&amp;#39;bcompare&amp;#39;&lt;/span> instead of &lt;span style="color:#e6db74">&amp;#39;./bcompare-4.4.6.27483_amd64.deb&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The following package was automatically installed and is no longer required:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> libllvm17t64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Use &lt;span style="color:#e6db74">&amp;#39;sudo apt autoremove&amp;#39;&lt;/span> to remove it.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The following NEW packages will be installed:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bcompare
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span> upgraded, &lt;span style="color:#ae81ff">1&lt;/span> newly installed, &lt;span style="color:#ae81ff">0&lt;/span> to remove and &lt;span style="color:#ae81ff">16&lt;/span> not upgraded.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Need to get &lt;span style="color:#ae81ff">0&lt;/span> B/20.6 MB of archives.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After this operation, 60.9 MB of additional disk space will be used.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Get:1 /home/jonpark/Downloads/bcompare-4.4.6.27483_amd64.deb bcompare amd64 4.4.6-27483 &lt;span style="color:#f92672">[&lt;/span>20.6 MB&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Selecting previously unselected package bcompare.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>Reading database ... &lt;span style="color:#ae81ff">130187&lt;/span> files and directories currently installed.&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Preparing to unpack .../bcompare-4.4.6.27483_amd64.deb ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Unpacking bcompare &lt;span style="color:#f92672">(&lt;/span>4.4.6-27483&lt;span style="color:#f92672">)&lt;/span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting up bcompare &lt;span style="color:#f92672">(&lt;/span>4.4.6-27483&lt;span style="color:#f92672">)&lt;/span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp: cannot create regular file &lt;span style="color:#e6db74">&amp;#39;/usr/share/kservices5/&amp;#39;&lt;/span>: Not a directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing triggers &lt;span style="color:#66d9ef">for&lt;/span> bamfdaemon &lt;span style="color:#f92672">(&lt;/span>0.5.6+22.04.20220217-0ubuntu5&lt;span style="color:#f92672">)&lt;/span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Rebuilding /usr/share/applications/bamf-2.index...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing triggers &lt;span style="color:#66d9ef">for&lt;/span> desktop-file-utils &lt;span style="color:#f92672">(&lt;/span>0.27-2build1&lt;span style="color:#f92672">)&lt;/span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing triggers &lt;span style="color:#66d9ef">for&lt;/span> gnome-menus &lt;span style="color:#f92672">(&lt;/span>3.36.0-1.1ubuntu3&lt;span style="color:#f92672">)&lt;/span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing triggers &lt;span style="color:#66d9ef">for&lt;/span> shared-mime-info &lt;span style="color:#f92672">(&lt;/span>2.4-4&lt;span style="color:#f92672">)&lt;/span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing triggers &lt;span style="color:#66d9ef">for&lt;/span> libc-bin &lt;span style="color:#f92672">(&lt;/span>2.39-0ubuntu8.4&lt;span style="color:#f92672">)&lt;/span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/locale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/man
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/tcltk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/cups/templates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/cups/locale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/cups/doc-root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/cups/templates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/cups/locale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/cups/doc-root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localepurge: Disk space freed: &lt;span style="color:#ae81ff">0&lt;/span> KiB in /usr/share/vim/vim91/lang
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total disk space freed by localepurge: &lt;span style="color:#ae81ff">0&lt;/span> KiB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>N: Download is performed unsandboxed as root as file &lt;span style="color:#e6db74">&amp;#39;/home/jonpark/Downloads/bcompare-4.4.6.27483_amd64.deb&amp;#39;&lt;/span> couldn&lt;span style="color:#e6db74">&amp;#39;t be accessed by user &amp;#39;&lt;/span>_apt&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>. - pkgAcquire::Run &lt;span style="color:#f92672">(&lt;/span>13: Permission denied&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">########################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 아래부터는 옵션임.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~/Downloads$ ls ~/.config/bcompare/ -al
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total 28K
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxrwxr-x &lt;span style="color:#ae81ff">2&lt;/span> jonpark jonpark 4.0K Feb &lt;span style="color:#ae81ff">25&lt;/span> 15:05 ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwx------ &lt;span style="color:#ae81ff">23&lt;/span> jonpark jonpark 4.0K Feb &lt;span style="color:#ae81ff">25&lt;/span> 15:05 ../
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-rw-r-- &lt;span style="color:#ae81ff">1&lt;/span> jonpark jonpark &lt;span style="color:#ae81ff">0&lt;/span> Feb &lt;span style="color:#ae81ff">25&lt;/span> 15:05 BCLOCK_11.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-rw-r-- &lt;span style="color:#ae81ff">1&lt;/span> jonpark jonpark &lt;span style="color:#ae81ff">546&lt;/span> Feb &lt;span style="color:#ae81ff">25&lt;/span> 15:05 BCState.xml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-rw-r-- &lt;span style="color:#ae81ff">1&lt;/span> jonpark jonpark &lt;span style="color:#ae81ff">204&lt;/span> Feb &lt;span style="color:#ae81ff">25&lt;/span> 15:05 BCState.xml.bak
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-rw-r-- &lt;span style="color:#ae81ff">1&lt;/span> jonpark jonpark &lt;span style="color:#ae81ff">1&lt;/span> Feb &lt;span style="color:#ae81ff">25&lt;/span> 15:05 IsPro
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-rw-r-- &lt;span style="color:#ae81ff">1&lt;/span> jonpark jonpark &lt;span style="color:#ae81ff">563&lt;/span> Feb &lt;span style="color:#ae81ff">25&lt;/span> 15:05 menu.ini
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-rw-r-- &lt;span style="color:#ae81ff">1&lt;/span> jonpark jonpark &lt;span style="color:#ae81ff">48&lt;/span> Feb &lt;span style="color:#ae81ff">25&lt;/span> 15:07 registry.dat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~/Downloads$ ls /usr/lib/beyondcompare/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bcmount32* bcmount.sh* BCompare.mad GPG-KEY-scootersoftware lib7z.so* libunrar.so* qt4/ scootersoftware.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bcmount64* BCompare* ext/ help/ libQt4Pas.so.5* mime.types scootersoftware-keyring.gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:~/Downloads$ cd /usr/lib/beyondcompare/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:/usr/lib/beyondcompare$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bcmount32* bcmount.sh* BCompare.mad GPG-KEY-scootersoftware lib7z.so* libunrar.so* qt4/ scootersoftware.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bcmount64* BCompare* ext/ help/ libQt4Pas.so.5* mime.types scootersoftware-keyring.gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:/usr/lib/beyondcompare$ sudo cp BCompare BCompare.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:/usr/lib/beyondcompare$ sudo cp -r ~/.config/bcompare ~/.config/bcompare.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:/usr/lib/beyondcompare$ rm -rf ~/.config/bcompare
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:/usr/lib/beyondcompare$ echo &lt;span style="color:#e6db74">&amp;#34;kill BC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kill BC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:/usr/lib/beyondcompare$ sudo rm -rf ~/.config/bcompare &lt;span style="color:#75715e">#thinks bensonkb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sed -i &lt;span style="color:#e6db74">&amp;#34;s/??????????????????????/g&amp;#34;&lt;/span> /usr/lib/beyondcompare/BCompare
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash#:/usr/lib/beyondcompare$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## Start BC&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## Enter license&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## Works&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Coverity API SSL Issue</title><link>https://jongyongpark.github.io/posts/technical-support/coverity/cov-api-ssl/</link><pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/cov-api-ssl/</guid><description>&lt;h1 id="blackduck-api-호출-시-발생하는-ssl-인증서-문제를-해결하는-java-코드---disable-ssl">Blackduck API 호출 시 발생하는 SSL 인증서 문제를 해결하는 Java 코드 - disable SSL&lt;/h1>
&lt;p>Blackduck API 호출 시 발생하는 SSL 인증서 문제를 해결하는 Java 코드를 작성해드리겠습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> javax.net.ssl.*;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.io.*;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.net.HttpURLConnection;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.net.URL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.security.cert.X509Certificate;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.nio.charset.StandardCharsets;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BlackDuckApiClient&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">disableSSLVerification&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TrustManager&lt;span style="color:#f92672">[]&lt;/span> trustAllCerts &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TrustManager&lt;span style="color:#f92672">[]&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> X509TrustManager() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> X509Certificate&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">getAcceptedIssuers&lt;/span>() { &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">checkClientTrusted&lt;/span>(X509Certificate&lt;span style="color:#f92672">[]&lt;/span> certs, String authType) { }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">checkServerTrusted&lt;/span>(X509Certificate&lt;span style="color:#f92672">[]&lt;/span> certs, String authType) { }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SSLContext sc &lt;span style="color:#f92672">=&lt;/span> SSLContext.&lt;span style="color:#a6e22e">getInstance&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SSL&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sc.&lt;span style="color:#a6e22e">init&lt;/span>(&lt;span style="color:#66d9ef">null&lt;/span>, trustAllCerts, &lt;span style="color:#66d9ef">new&lt;/span> java.&lt;span style="color:#a6e22e">security&lt;/span>.&lt;span style="color:#a6e22e">SecureRandom&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpsURLConnection.&lt;span style="color:#a6e22e">setDefaultSSLSocketFactory&lt;/span>(sc.&lt;span style="color:#a6e22e">getSocketFactory&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HostnameVerifier allHostsValid &lt;span style="color:#f92672">=&lt;/span> (hostname, session) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpsURLConnection.&lt;span style="color:#a6e22e">setDefaultHostnameVerifier&lt;/span>(allHostsValid);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String &lt;span style="color:#a6e22e">authenticate&lt;/span>(String baseUrl, String username, String password) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> URL url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL(baseUrl &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/api/tokens/authenticate&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpURLConnection conn &lt;span style="color:#f92672">=&lt;/span> (HttpURLConnection) url.&lt;span style="color:#a6e22e">openConnection&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 요청 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setRequestMethod&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;POST&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setRequestProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Accept&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;application/vnd.blackducksoftware.user-4+json&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setRequestProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Content-Type&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;application/json&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Basic Auth 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String auth &lt;span style="color:#f92672">=&lt;/span> username &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> password;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String encodedAuth &lt;span style="color:#f92672">=&lt;/span> java.&lt;span style="color:#a6e22e">util&lt;/span>.&lt;span style="color:#a6e22e">Base64&lt;/span>.&lt;span style="color:#a6e22e">getEncoder&lt;/span>().&lt;span style="color:#a6e22e">encodeToString&lt;/span>(auth.&lt;span style="color:#a6e22e">getBytes&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setRequestProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Authorization&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Basic &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> encodedAuth);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setDoOutput&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 응답 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> responseCode &lt;span style="color:#f92672">=&lt;/span> conn.&lt;span style="color:#a6e22e">getResponseCode&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (responseCode &lt;span style="color:#f92672">==&lt;/span> HttpURLConnection.&lt;span style="color:#a6e22e">HTTP_OK&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BufferedReader in &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BufferedReader(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> InputStreamReader(conn.&lt;span style="color:#a6e22e">getInputStream&lt;/span>(), StandardCharsets.&lt;span style="color:#a6e22e">UTF_8&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String inputLine;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StringBuilder response &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuilder();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ((inputLine &lt;span style="color:#f92672">=&lt;/span> in.&lt;span style="color:#a6e22e">readLine&lt;/span>()) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response.&lt;span style="color:#a6e22e">append&lt;/span>(inputLine);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> in.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> response.&lt;span style="color:#a6e22e">toString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Response Code: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> responseCode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// SSL 검증 비활성화&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disableSSLVerification();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String baseUrl &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;https://your-blackduck-server&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;your-username&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;your-password&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String response &lt;span style="color:#f92672">=&lt;/span> authenticate(baseUrl, username, password);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Response: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> response);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>안전한 운영 환경을 위한 인증서 설정 방법:&lt;/p></description></item><item><title>MOJO</title><link>https://jongyongpark.github.io/posts/sdlc/mojo/</link><pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/mojo/</guid><description>&lt;h1 id="mojo-사용처">Mojo 사용처&lt;/h1>
&lt;p>Mojo는 2023년에 출시된 비교적 새로운 프로그래밍 언어로, 아직 초기 단계에 있습니다. 따라서 현재까지 Mojo를 사용한 대표적인 오픈소스 프로젝트나 상용 프로젝트는 많지 않습니다. 그러나 Modular(모듈러)가 Mojo를 설계한 목적과 특징을 기반으로, Mojo가 어떤 유형의 프로젝트에 적합할지 예측할 수 있으며, 이미 공개된 몇 가지 실험적 또는 데모 프로젝트를 통해 그 활용 가능성을 확인할 수 있습니다.&lt;/p>
&lt;hr>
&lt;h3 id="1-mojo를-사용한-주요-프로젝트-및-사례">&lt;strong>1. Mojo를 사용한 주요 프로젝트 및 사례&lt;/strong>&lt;/h3>
&lt;h4 id="1-modular-ai-플랫폼">&lt;strong>(1) Modular AI 플랫폼&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>프로젝트 설명&lt;/strong>: Modular는 Mojo를 개발한 회사이며, 이들의 주요 목표는 AI 및 머신러닝 워크플로우를 최적화하는 것입니다. Modular AI 플랫폼은 Mojo를 기반으로 구축되며, 고성능 컴퓨팅과 AI 모델 개발을 지원합니다.&lt;/li>
&lt;li>&lt;strong>왜 Mojo를 사용했는가?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>고성능 요구사항&lt;/strong>: AI 모델 학습 및 추론은 대규모 데이터와 복잡한 계산을 필요로 합니다. Mojo는 LLVM 기반으로 컴파일되며 SIMD(Single Instruction, Multiple Data) 명령어와 병렬 처리를 내장으로 지원하여 Python보다 훨씬 빠른 성능을 제공합니다.&lt;/li>
&lt;li>&lt;strong>Python 호환성&lt;/strong>: 많은 AI/ML 프로젝트는 Python 기반으로 작성되어 있습니다. Mojo는 Python 문법과 생태계를 유지하면서도 성능을 극대화하므로, 기존 코드베이스를 쉽게 마이그레이션하거나 확장할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="2-과학-컴퓨팅-및-시뮬레이션">&lt;strong>(2) 과학 컴퓨팅 및 시뮬레이션&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>프로젝트 설명&lt;/strong>: 일부 연구자들은 Mojo를 사용하여 물리 시뮬레이션, 기상 예측, 분자 동역학 시뮬레이션 등을 구현하고 있습니다. 이러한 작업은 일반적으로 C++ 또는 Fortran으로 작성되었지만, Mojo는 Python의 가독성과 Rust 수준의 성능을 결합하여 더 접근하기 쉬운 솔루션을 제공합니다.&lt;/li>
&lt;li>&lt;strong>왜 Mojo를 사용했는가?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>성능 최적화&lt;/strong>: 과학 컴퓨팅은 높은 계산 성능을 요구하며, Mojo는 이를 위해 SIMD 및 병렬 처리를 내장으로 지원합니다.&lt;/li>
&lt;li>&lt;strong>생산성 향상&lt;/strong>: Python처럼 간결한 문법을 사용하여 코드 작성이 빠르며, 동시에 성능 저하 없이 작업을 완료할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="3-실시간-데이터-처리">&lt;strong>(3) 실시간 데이터 처리&lt;/strong>&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>프로젝트 설명&lt;/strong>: 실시간 스트리밍 데이터를 처리하거나 금융 거래 시스템에서 사용되는 고성능 애플리케이션에서도 Mojo가 활용될 가능성이 큽니다. 예를 들어, 주식 시장 데이터를 실시간으로 분석하고 트레이딩 신호를 생성하는 시스템이 Mojo로 구현될 수 있습니다.&lt;/li>
&lt;li>&lt;strong>왜 Mojo를 사용했는가?&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>저지연(Low Latency)&lt;/strong>: 실시간 데이터 처리는 매우 짧은 시간 내에 데이터를 처리해야 하며, Mojo는 이러한 요구를 충족할 수 있는 성능을 제공합니다.&lt;/li>
&lt;li>&lt;strong>병렬 처리&lt;/strong>: Mojo의 내장된 병렬 처리 기능은 다중 코어를 효율적으로 활용하여 데이터 처리 속도를 극대화합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="2-mojo를-선택한-이유-요약">&lt;strong>2. Mojo를 선택한 이유 요약&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>특징&lt;/strong>&lt;/th>
&lt;th>&lt;strong>왜 Mojo를 선택했는가?&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>고성능&lt;/strong>&lt;/td>
&lt;td>LLVM 기반 컴파일러와 SIMD, 병렬 처리를 통해 Python보다 훨씬 빠른 성능을 제공합니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Python 호환성&lt;/strong>&lt;/td>
&lt;td>Python 문법과 생태계를 유지하므로, 기존 Python 코드를 쉽게 마이그레이션하거나 확장할 수 있습니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>메모리 안전성&lt;/strong>&lt;/td>
&lt;td>Rust와 유사한 메모리 관리 모델을 도입하여 안전하고 효율적인 메모리 사용이 가능합니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>개발 생산성&lt;/strong>&lt;/td>
&lt;td>Python처럼 간결한 문법을 사용하여 개발 속도를 높입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AI/ML 최적화&lt;/strong>&lt;/td>
&lt;td>AI/ML 워크플로우를 위한 고성능 컴퓨팅 환경을 제공합니다.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="3-mojo의-잠재적-활용-분야">&lt;strong>3. Mojo의 잠재적 활용 분야&lt;/strong>&lt;/h3>
&lt;p>현재 Mojo는 초기 단계이지만, 다음과 같은 분야에서 활용될 가능성이 큽니다:&lt;/p></description></item><item><title>Public IP &amp; CIDR</title><link>https://jongyongpark.github.io/posts/sdlc/public-ip-cidr/</link><pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/public-ip-cidr/</guid><description>&lt;h1 id="windows-powershell-에서-public-ip와-cidr-얻기---claude">Windows Powershell 에서 public IP와 CIDR 얻기 - claude&lt;/h1>
&lt;h2 id="테스트">테스트&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>(base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt; &lt;span style="color:#75715e"># 방법 1: ipify API 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt; (Invoke-WebRequest -Uri &lt;span style="color:#e6db74">&amp;#34;https://api.ipify.org&amp;#34;&lt;/span>).Content
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">44.214&lt;/span>.210.109 (base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt; (base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt; &lt;span style="color:#75715e"># 방방법법 2: ifconfig.me 사사용용 (base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt; (Invoke-WebRequest -Uri &amp;#34;https://ifconfig.me/ip&amp;#34;).Content &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt; &lt;span style="color:#75715e"># 방법 3: ipinfo.io 사용 (더 자세한 정보)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt; (Invoke-WebRequest -Uri &lt;span style="color:#e6db74">&amp;#34;https://ipinfo.io/json&amp;#34;&lt;/span>).Content | ConvertFrom-Json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">44.214&lt;/span>.210.109
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hostname &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> vpn-aws.blackduck.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>city &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> Ashburn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>region &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> Virginia
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>country &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> US
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loc &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">39.0437&lt;/span>,&lt;span style="color:#ae81ff">-77.4875&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> AS14618 Amazon.com, Inc.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postal &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">20147&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>timezone &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> America/New_York
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readme &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> https&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>//ipinfo.io/missingauth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(base) PS C:\workspace\blog\ryanpark-devsecops&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Start-Process &lt;span style="color:#e6db74">&amp;#34;https://whois.domaintools.com/&lt;/span>$ip&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Quick Stats
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IP Location United States United States Ashburn Amazon Data Services Nova
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ASN United States AS14618 AMAZON-AES, US (registered Nov &lt;span style="color:#ae81ff">04&lt;/span>, &lt;span style="color:#ae81ff">2005&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Resolve Host vpn-aws.blackduck.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Whois Server whois.arin.net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IP Address &lt;span style="color:#ae81ff">44.214&lt;/span>.210.109
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NetRange&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">44.192&lt;/span>.0.0 - &lt;span style="color:#ae81ff">44.255&lt;/span>.255.255
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CIDR&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">44.192&lt;/span>.0.&lt;span style="color:#ae81ff">0&lt;/span>/&lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="답변">답변&lt;/h2>
&lt;p>PowerShell에서 Public IP와 CIDR를 확인하는 방법을 알려드리겠습니다:&lt;/p></description></item><item><title>Chrome</title><link>https://jongyongpark.github.io/posts/sdlc/chrome/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/chrome/</guid><description>&lt;h1 id="chrome-install-on-ubuntu">Chrome Install on Ubuntu&lt;/h1>
&lt;p>Ubuntu에서 Chrome을 완전히 제거하고 다시 설치하는 명령어 순서입니다:&lt;/p>
&lt;ol>
&lt;li>Chrome 제거:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Chrome 패키지 제거&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge google-chrome-stable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 관련 의존성 패키지 제거&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get autoremove
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Chrome 설정 파일 제거 (선택사항)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rf ~/.config/google-chrome
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Chrome 다시 설치:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Chrome 다운로드를 위한 필요 패키지 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install wget
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Chrome 패키지 다운로드&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 다운로드한 패키지 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i google-chrome-stable_current_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 의존성 문제가 있다면 다음 명령어로 해결&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install -f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 다운로드한 설치 파일 제거 (선택사항)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm google-chrome-stable_current_amd64.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>설치가 완료되면 Applications 메뉴나 터미널에서 &lt;code>google-chrome&lt;/code> 명령어로 Chrome을 실행할 수 있습니다.&lt;/p></description></item><item><title>Coverity Performance</title><link>https://jongyongpark.github.io/posts/technical-support/coverity/cov-performance/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/cov-performance/</guid><description>&lt;h1 id="expected-a-covjsessionid-build-cookie-in-the-response-but-it-was-missing">Expected a [COVJSESSIONID-build] cookie in the response, but it was missing&lt;/h1>
&lt;p>추가 로그 분석을 통해 더 자세한 상황을 파악할 수 있습니다:&lt;/p>
&lt;p>원래 문제:&lt;/p>
&lt;pre tabindex="0">&lt;code>Expected a [COVJSESSIONID-build] cookie in the response, but it was missing
&lt;/code>&lt;/pre>&lt;p>추가 로그 분석:&lt;/p>
&lt;ol>
&lt;li>인증 상태:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>Authentication=CovUsernameAuthenticationToken [
Principal=admin (Admin User),
Authenticated=true,
RemoteIpAddress=10.2.150.57,
SessionId=69FB1C3437377E29D3B887C9FDFA5403,
Granted Authorities=[ROLE_AUTHENTICATED_USER]
]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>서버 측에서는 admin 사용자가 성공적으로 인증됨&lt;/li>
&lt;li>세션이 정상적으로 생성됨&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>백그라운드 프로세스:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>com.coverity.ces.service.GarbageCollectionServiceImpl.runGarbageCollection
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>GarbageCollection 서비스가 정상적으로 동작 중&lt;/li>
&lt;/ul>
&lt;p>수정된 해결 방안:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>세션 관련:&lt;/p></description></item><item><title>Dart</title><link>https://jongyongpark.github.io/posts/developer/dart/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/dart/</guid><description>&lt;h1 id="dart-와-javascript-비교교">Dart 와 JavaScript 비교교&lt;/h1>
&lt;p>Dart와 JavaScript 중 어떤 언어를 배우는 것이 더 좋은지는 &lt;strong>Ryan의 목표와 개발하려는 서비스의 방향&lt;/strong>에 따라 다릅니다.&lt;/p>
&lt;h3 id="-dart를-배우는-것이-좋은-경우">✅ &lt;strong>Dart를 배우는 것이 좋은 경우&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Flutter를 활용한 크로스 플랫폼 앱 개발&lt;/strong>
&lt;ul>
&lt;li>Ryan이 &lt;strong>모바일 앱 개발(특히 iOS &amp;amp; Android)&lt;/strong> 을 목표로 한다면 &lt;strong>Dart + Flutter&lt;/strong> 조합이 유리합니다.&lt;/li>
&lt;li>하나의 코드베이스로 iOS, Android, 웹까지 개발 가능하여 유지보수 비용을 절감할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>안정적이고 타입 안정성이 중요한 경우&lt;/strong>
&lt;ul>
&lt;li>Dart는 정적 타입을 제공하여 코드의 안정성이 높고, 유지보수가 쉬운 편입니다.&lt;/li>
&lt;li>JavaScript보다 더 안전한 프로그래밍이 가능합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Google 생태계에 관심이 있다면&lt;/strong>
&lt;ul>
&lt;li>Dart는 Google이 적극적으로 지원하는 언어이므로, Google 관련 기술과 함께 사용하기 좋습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="-javascript를-배우는-것이-좋은-경우">✅ &lt;strong>JavaScript를 배우는 것이 좋은 경우&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>웹 서비스 개발이 목표라면&lt;/strong>
&lt;ul>
&lt;li>Ryan이 &lt;strong>웹 기반 서비스(프론트엔드 &amp;amp; 백엔드)&lt;/strong> 를 개발하려면 JavaScript가 훨씬 강력한 선택지입니다.&lt;/li>
&lt;li>&lt;strong>React, Vue, Angular&lt;/strong> 등 다양한 웹 프레임워크를 활용할 수 있습니다.&lt;/li>
&lt;li>서버 개발도 &lt;strong>Node.js&lt;/strong> 를 활용해 JavaScript로 가능하므로 전체 개발이 JavaScript로 통일됩니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>더 많은 오픈 소스 및 커뮤니티 지원을 원한다면&lt;/strong>
&lt;ul>
&lt;li>JavaScript는 웹 개발의 표준이며, 가장 많은 라이브러리와 프레임워크가 존재합니다.&lt;/li>
&lt;li>Dart에 비해 커뮤니티가 훨씬 크며, 문제 해결이 빠릅니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>프론트엔드 개발자가 되고 싶다면&lt;/strong>
&lt;ul>
&lt;li>JavaScript는 웹 브라우저에서 기본적으로 실행되는 언어이므로, &lt;strong>프론트엔드 개발자&lt;/strong> 를 목표로 한다면 필수입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="-결론-ryan에게-적합한-선택">⚖️ &lt;strong>결론: Ryan에게 적합한 선택&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>웹 서비스를 중심으로 개발하려면?&lt;/strong> → &lt;strong>JavaScript&lt;/strong>&lt;/li>
&lt;li>&lt;strong>모바일 앱을 중심으로 개발하려면?&lt;/strong> → &lt;strong>Dart + Flutter&lt;/strong>&lt;/li>
&lt;li>&lt;strong>웹과 모바일을 모두 고려한다면?&lt;/strong>
&lt;ul>
&lt;li>웹이 더 중요하면 &lt;strong>JavaScript&lt;/strong>&lt;/li>
&lt;li>모바일이 더 중요하면 &lt;strong>Dart&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Ryan이 만들고 싶은 서비스가 웹 기반이라면 JavaScript가 더 적합할 가능성이 큽니다.&lt;/strong>&lt;br>
어떤 서비스를 만들고 싶은지 더 구체적으로 이야기해주면 더 적합한 선택을 도와줄 수 있어요!&lt;/p></description></item><item><title>Nest.js</title><link>https://jongyongpark.github.io/posts/developer/javascipt/nestjs/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/javascipt/nestjs/</guid><description>&lt;h1 id="nextjs-와와-springboot-비교">Next.js 와와 SpringBoot 비교&lt;/h1>
&lt;h2 id="속도비교">속도비교&lt;/h2>
&lt;p>&lt;strong>NestJS&lt;/strong>와 &lt;strong>Spring Boot&lt;/strong>는 각각의 장단점이 있지만, &lt;strong>개발 속도&lt;/strong> 측면에서 비교할 때는 &lt;strong>NestJS&lt;/strong>가 더 빠를 수 있는 몇 가지 이유가 있습니다. 다만, 최종 선택은 프로젝트의 요구 사항과 팀의 경험에 따라 달라질 수 있습니다. 아래에서 두 프레임워크를 비교해보겠습니다.&lt;/p>
&lt;h3 id="1-nestjs의-빠른-개발-속도">1. &lt;strong>NestJS의 빠른 개발 속도&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>JavaScript/TypeScript 기반&lt;/strong>: NestJS는 &lt;strong>TypeScript&lt;/strong>를 기본으로 사용합니다. TypeScript는 자바스크립트를 확장한 언어로, 컴파일 시 타입 검사를 제공하여 코드 작성 중 버그를 미리 잡을 수 있습니다. 또한, &lt;strong>JavaScript&lt;/strong>와 &lt;strong>TypeScript&lt;/strong>는 웹 프론트엔드 개발에서 널리 사용되기 때문에, 프론트엔드와 백엔드 개발자들이 &lt;strong>같은 언어&lt;/strong>를 사용할 수 있어 통합 개발 속도가 빨라질 수 있습니다.&lt;/p></description></item><item><title>Rust Web</title><link>https://jongyongpark.github.io/posts/developer/rust/rust-web/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/rust/rust-web/</guid><description>&lt;h1 id="heading">&lt;/h1>
&lt;p>&lt;strong>Rust&lt;/strong>는 시스템 프로그래밍 언어로 높은 성능과 안전성을 제공하지만, &lt;strong>웹 프레임워크&lt;/strong> 측면에서는 여전히 &lt;strong>상대적으로 적은 선택지&lt;/strong>가 있습니다. 그럼에도 불구하고 &lt;strong>Spring Boot&lt;/strong>나 &lt;strong>NestJS&lt;/strong>와 비슷한 &lt;strong>구조적 접근&lt;/strong>을 제공하는 Rust 웹 프레임워크들이 있습니다. 이들 프레임워크는 &lt;strong>모듈화&lt;/strong>, &lt;strong>라우팅&lt;/strong>, &lt;strong>미들웨어 지원&lt;/strong> 등을 제공하며, 일반적으로 &lt;strong>백엔드 API 서버&lt;/strong>나 &lt;strong>웹 애플리케이션&lt;/strong>을 구축할 수 있습니다.&lt;/p>
&lt;p>다음은 &lt;strong>Rust&lt;/strong>에서 Spring Boot나 NestJS처럼 &lt;strong>구조적이고 확장 가능한&lt;/strong> 웹 애플리케이션을 구축할 수 있는 프레임워크들입니다:&lt;/p>
&lt;h3 id="1-actix-web">&lt;strong>1. Actix Web&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>특징&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Actix Web&lt;/strong>은 &lt;strong>고성능&lt;/strong>과 &lt;strong>비동기 처리&lt;/strong>를 지원하는 Rust의 가장 인기 있는 웹 프레임워크입니다. &lt;strong>Spring Boot&lt;/strong>와 비슷하게, 매우 높은 성능을 자랑하면서도 유연한 미들웨어 및 라우팅 기능을 제공합니다.&lt;/li>
&lt;li>&lt;strong>모듈화&lt;/strong>된 &lt;strong>라우팅&lt;/strong>과 &lt;strong>미들웨어&lt;/strong>를 지원하며, &lt;strong>웹 소켓&lt;/strong>, &lt;strong>API 서버&lt;/strong> 등 다양한 서버 애플리케이션을 구현할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>Actors&lt;/strong> 모델을 기반으로 한 &lt;strong>Actix 시스템&lt;/strong>을 제공하여, 복잡한 상태 관리 및 비동기 처리를 유연하게 처리할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>Spring Boot&lt;/strong>와 비슷한 방식으로 &lt;strong>동시성&lt;/strong>을 처리하며, &lt;strong>REST API 서버&lt;/strong>로 매우 적합합니다.&lt;/li>
&lt;li>&lt;strong>타입 안전성&lt;/strong>과 &lt;strong>비동기 I/O&lt;/strong>를 지원하여, 성능과 안정성에서 우수한 결과를 도출할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>장점&lt;/strong>:&lt;/p></description></item><item><title>OpenCV compile on Windows</title><link>https://jongyongpark.github.io/posts/developer/opencv-win/</link><pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/opencv-win/</guid><description>&lt;h1 id="claude">Claude&lt;/h1>
&lt;p>이 오류는 ARM64 플랫폼을 위한 CMake 구성 과정에서 발생한 문제입니다. 주요 오류는 프로젝트 설정이 제대로 되지 않았고, ARM64 플랫폼 구성이 올바르지 않다는 것입니다.&lt;/p>
&lt;p>PowerShell 스크립트를 다음과 같이 수정하여 해결할 수 있습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># OpenCV Windows Build Script for x64 and ARM64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Prerequisites: Visual Studio 2022, CMake, Git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$OPENCV_VERSION = &lt;span style="color:#e6db74">&amp;#34;4.9.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$SOURCE_DIR = &lt;span style="color:#e6db74">&amp;#34;C:\workspace\jonpark-work\opencv_source&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$BUILD_BASE_DIR = &lt;span style="color:#e6db74">&amp;#34;C:\workspace\jonpark-work\opencv_build&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$INSTALL_BASE_DIR = &lt;span style="color:#e6db74">&amp;#34;C:\workspace\jonpark-work\opencv_install&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Common CMake parameters&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$CMAKE_COMMON_PARAMS = @(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DCMAKE_MINIMUM_REQUIRED_VERSION=3.10&amp;#34;&lt;/span>, &lt;span style="color:#75715e"># 최소 CMake 버전 지정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DBUILD_SHARED_LIBS=ON&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DBUILD_TESTS=OFF&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DBUILD_PERF_TESTS=OFF&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DBUILD_EXAMPLES=OFF&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DWITH_CUDA=OFF&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DBUILD_opencv_world=ON&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DBUILD_opencv_python2=OFF&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DBUILD_opencv_python3=OFF&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DWITH_IPP=ON&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DENABLE_CXX11=ON&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DOPENCV_ENABLE_NONFREE=ON&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-DBUILD_WITH_STATIC_CRT=OFF&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Download OpenCV source&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">-not&lt;/span> (Test-Path $SOURCE_DIR)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git clone https&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>//github.com/opencv/opencv.git $SOURCE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Push-Location $SOURCE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git checkout $OPENCV_VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pop-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Function to build OpenCV for specific architecture&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> Build-OpenCV {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#66d9ef">string&lt;/span>]$arch,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#66d9ef">string&lt;/span>]$generator,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#66d9ef">string&lt;/span>]$platform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $BUILD_DIR = &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$BUILD_BASE_DIR&lt;span style="color:#e6db74">\&lt;/span>$arch&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $INSTALL_DIR = &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$INSTALL_BASE_DIR&lt;span style="color:#e6db74">\&lt;/span>$arch&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Remove existing build directory to ensure clean build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (Test-Path $BUILD_DIR) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Remove-Item -Path $BUILD_DIR -Recurse -Force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Create build directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> New-Item -ItemType Directory -Force -Path $BUILD_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Push-Location $BUILD_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Configure CMake with explicit project name and build type&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmake -G $generator -A $platform `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DCMAKE_INSTALL_PREFIX=&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$INSTALL_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DCMAKE_BUILD_TYPE=Release `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DOpenCV_ARCH=$platform `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DOpenCV_RUNTIME=vc17 `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CMAKE_COMMON_PARAMS `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -S $SOURCE_DIR -B $BUILD_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ($LASTEXITCODE &lt;span style="color:#f92672">-ne&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Error &lt;span style="color:#e6db74">&amp;#34;CMake configuration failed for &lt;/span>$arch&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pop-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Build and install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmake --build $BUILD_DIR --config Release --target INSTALL --parallel &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ($LASTEXITCODE &lt;span style="color:#f92672">-ne&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Error &lt;span style="color:#e6db74">&amp;#34;Build failed for &lt;/span>$arch&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pop-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pop-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 빌드 전 Visual Studio 환경 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$VS_PATH = &lt;span style="color:#e6db74">&amp;#34;C:\Program Files\Microsoft Visual Studio\2022\Community&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$VS_TOOLS = &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$VS_PATH&lt;span style="color:#e6db74">\VC\Auxiliary\Build&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (Test-Path &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$VS_TOOLS&lt;span style="color:#e6db74">\vcvarsall.bat&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host &lt;span style="color:#e6db74">&amp;#34;Setting up Visual Studio environment...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># x64 환경 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd.exe /c &lt;span style="color:#e6db74">&amp;#34;call &lt;/span>&lt;span style="color:#ae81ff">`&amp;#34;&lt;/span>$VS_TOOLS&lt;span style="color:#e6db74">\vcvarsall.bat&lt;/span>&lt;span style="color:#ae81ff">`&amp;#34;&lt;/span>&lt;span style="color:#e6db74"> x64 &amp;amp;&amp;amp; set &amp;gt; %temp%\vcvars.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-Content &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$env:temp&lt;span style="color:#e6db74">\vcvars.txt&amp;#34;&lt;/span> | foreach-object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ($_ &lt;span style="color:#f92672">-match&lt;/span> &lt;span style="color:#e6db74">&amp;#34;^(.*?)=(.*)$&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-Content &lt;span style="color:#e6db74">&amp;#34;env:\&lt;/span>$($matches[&lt;span style="color:#ae81ff">1&lt;/span>])&lt;span style="color:#e6db74">&amp;#34;&lt;/span> $matches[&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Error &lt;span style="color:#e6db74">&amp;#34;Visual Studio environment setup failed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Build for x64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Write-Host &lt;span style="color:#e6db74">&amp;#34;Building for x64...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Build-OpenCV -arch &lt;span style="color:#e6db74">&amp;#34;x64&amp;#34;&lt;/span> -generator &lt;span style="color:#e6db74">&amp;#34;Visual Studio 17 2022&amp;#34;&lt;/span> -platform &lt;span style="color:#e6db74">&amp;#34;x64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ARM64 빌드 전 환경 재설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (Test-Path &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$VS_TOOLS&lt;span style="color:#e6db74">\vcvarsall.bat&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host &lt;span style="color:#e6db74">&amp;#34;Setting up Visual Studio environment for ARM64...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd.exe /c &lt;span style="color:#e6db74">&amp;#34;call &lt;/span>&lt;span style="color:#ae81ff">`&amp;#34;&lt;/span>$VS_TOOLS&lt;span style="color:#e6db74">\vcvarsall.bat&lt;/span>&lt;span style="color:#ae81ff">`&amp;#34;&lt;/span>&lt;span style="color:#e6db74"> x64_arm64 &amp;amp;&amp;amp; set &amp;gt; %temp%\vcvars.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-Content &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$env:temp&lt;span style="color:#e6db74">\vcvars.txt&amp;#34;&lt;/span> | foreach-object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ($_ &lt;span style="color:#f92672">-match&lt;/span> &lt;span style="color:#e6db74">&amp;#34;^(.*?)=(.*)$&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-Content &lt;span style="color:#e6db74">&amp;#34;env:\&lt;/span>$($matches[&lt;span style="color:#ae81ff">1&lt;/span>])&lt;span style="color:#e6db74">&amp;#34;&lt;/span> $matches[&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Build for ARM64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Write-Host &lt;span style="color:#e6db74">&amp;#34;Building for ARM64...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Build-OpenCV -arch &lt;span style="color:#e6db74">&amp;#34;arm64&amp;#34;&lt;/span> -generator &lt;span style="color:#e6db74">&amp;#34;Visual Studio 17 2022&amp;#34;&lt;/span> -platform &lt;span style="color:#e6db74">&amp;#34;ARM64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>주요 변경사항과 해결방법:&lt;/p></description></item><item><title>Bash &amp; PowerShell Script Comparison</title><link>https://jongyongpark.github.io/posts/sdlc/bash-powershell/</link><pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/bash-powershell/</guid><description/></item><item><title>MobaXterm Usage</title><link>https://jongyongpark.github.io/posts/sdlc/mobaxterm/</link><pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/mobaxterm/</guid><description>&lt;h1 id="issue">Issue&lt;/h1>
&lt;p>Remote side unexpectedly closed network connection&lt;/p>
&lt;p>────&lt;/p>
&lt;p>Session stopped
- Press &lt;!-- raw HTML omitted --> to exit tab
- Press R to restart session
- Press S to save terminal output to file&lt;/p>
&lt;h2 id="fix">Fix&lt;/h2>
&lt;h3 id="remove-saved-password">Remove saved password&lt;/h3>
&lt;p>&lt;img alt="alt text" loading="lazy" src=".md/mobaxterm/password-settings.png">&lt;/p>
&lt;p>It does not fix issue.&lt;/p></description></item><item><title>OpenWebUI</title><link>https://jongyongpark.github.io/posts/ai/openwebui/</link><pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/ai/openwebui/</guid><description>&lt;h1 id="내가-설치한-방법">내가 설치한 방법&lt;/h1>
&lt;p>pip install open-webui
open-webui serve &amp;ndash;port 8180&lt;/p>
&lt;h1 id="openwebui-내-설정">OpenWebUI 내 설정&lt;/h1>
&lt;p>Web browser URL: http://jonpark-ec2:8180/admin/settings
OpenWebUI 는 ec2에 설치되어 있으므로 http://localhost:11434 를 사용한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>OpenAI API
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Manage OpenAI API Connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://api.openai.com/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>API Key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ollama API
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Manage Ollama API Connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://localhost:11434
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Trouble accessing Ollama? Click here for help.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Direct Connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Direct Connections allow users to connect to their own OpenAI compatible API endpoints.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h1 id="msty-에서-ec2-에-설치된-ollama-접속하기">Msty 에서 ec2 에 설치된 Ollama 접속하기&lt;/h1>
&lt;p>사용하지 말것것.
모든 것을 API key를 통해 처리함.
ChatGPT 경우에도 API key 를 사용하면 별도의 요금이 차감됨.&lt;/p></description></item><item><title>AUTOSAR C++ A2-10-5</title><link>https://jongyongpark.github.io/posts/checker/autosar-a2-10-5/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/checker/autosar-a2-10-5/</guid><description>&lt;h1 id="autosar-c-a2-10-5-규칙-가이드">AUTOSAR C++ A2-10-5 규칙 가이드&lt;/h1>
&lt;h2 id="목차">목차&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="#%EA%B7%9C%EC%B9%99-%EA%B0%9C%EC%9A%94">규칙 개요&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%ED%95%B5%EC%8B%AC-%EA%B0%9C%EB%85%90">핵심 개념&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%EC%9C%84%EB%B0%98-%EC%82%AC%EB%A1%80">위반 사례&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95">해결 방법&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%EC%83%81%EC%84%B8-%EC%84%A4%EB%AA%85">상세 설명&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%EC%B0%B8%EA%B3%A0-%EC%82%AC%ED%95%AD">참고 사항&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="규칙-개요">규칙 개요&lt;/h2>
&lt;p>AUTOSAR C++ A2-10-5 규칙은 다음과 같이 정의됩니다:&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;정적 저장 기간을 가진 함수 또는 외부/내부 연결을 가진 비멤버 객체의 식별자 이름은 재사용되어서는 안 된다.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;h3 id="규칙의-목적">규칙의 목적&lt;/h3>
&lt;ul>
&lt;li>코드의 명확성과 가독성 향상&lt;/li>
&lt;li>유지보수성 개선&lt;/li>
&lt;li>모호성과 오류 가능성 감소&lt;/li>
&lt;li>자동차 소프트웨어의 안전성 강화&lt;/li>
&lt;/ul>
&lt;h2 id="핵심-개념">핵심 개념&lt;/h2>
&lt;h3 id="1-static-storage-duration-정적-저장-기간">1. Static Storage Duration (정적 저장 기간)&lt;/h3>
&lt;ul>
&lt;li>C++에서 모든 함수는 기본적으로 정적 저장 기간을 가짐&lt;/li>
&lt;li>프로그램 시작부터 종료까지 메모리에 존재&lt;/li>
&lt;li>&lt;code>static&lt;/code> 키워드는 함수의 저장 기간이 아닌 링키지(linkage)를 변경&lt;/li>
&lt;/ul>
&lt;h3 id="2-non-member-object-비멤버-객체">2. Non-member Object (비멤버 객체)&lt;/h3>
&lt;ul>
&lt;li>클래스나 구조체의 멤버가 아닌 변수나 객체&lt;/li>
&lt;li>전역 변수, 네임스페이스 범위 변수, 블록 범위의 정적 변수 등&lt;/li>
&lt;/ul>
&lt;h3 id="3-linkage-연결">3. Linkage (연결)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>External Linkage&lt;/strong>: 다른 번역 단위에서도 참조 가능&lt;/li>
&lt;li>&lt;strong>Internal Linkage&lt;/strong>: 같은 번역 단위 내에서만 참조 가능&lt;/li>
&lt;/ul>
&lt;h2 id="위반-사례">위반 사례&lt;/h2>
&lt;h3 id="1-함수-오버로딩">1. 함수 오버로딩&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 위반 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int32_t&lt;/span> &lt;span style="color:#a6e22e">my_printf&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span>&lt;span style="color:#f92672">*&lt;/span> msg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> printf(&lt;span style="color:#e6db74">&amp;#34;char: %s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int32_t&lt;/span> &lt;span style="color:#a6e22e">my_printf&lt;/span>(std&lt;span style="color:#f92672">::&lt;/span>string &lt;span style="color:#66d9ef">const&lt;/span>&lt;span style="color:#f92672">&amp;amp;&lt;/span> msg) { &lt;span style="color:#75715e">// 위반: 동일 식별자 재사용
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> printf(&lt;span style="color:#e6db74">&amp;#34;string: %s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, msg.c_str());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-다른-범위에서-식별자-재사용">2. 다른 범위에서 식별자 재사용&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 위반 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> globalVar; &lt;span style="color:#75715e">// 외부 링키지를 가진 전역 변수
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">func&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> globalVar &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>; &lt;span style="color:#75715e">// 위반: 외부 링키지를 가진 식별자 재사용
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="해결-방법">해결 방법&lt;/h2>
&lt;h3 id="1-함수-이름-구분">1. 함수 이름 구분&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 올바른 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int32_t&lt;/span> &lt;span style="color:#a6e22e">my_printf_c_string&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span>&lt;span style="color:#f92672">*&lt;/span> msg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> printf(&lt;span style="color:#e6db74">&amp;#34;char: %s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int32_t&lt;/span> &lt;span style="color:#a6e22e">my_printf_cpp_string&lt;/span>(std&lt;span style="color:#f92672">::&lt;/span>string &lt;span style="color:#66d9ef">const&lt;/span>&lt;span style="color:#f92672">&amp;amp;&lt;/span> msg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> printf(&lt;span style="color:#e6db74">&amp;#34;string: %s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, msg.c_str());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-변수-이름-구분">2. 변수 이름 구분&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 올바른 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> globalVar;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">func&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> localGlobalVar &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>; &lt;span style="color:#75715e">// 명확한 이름 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="상세-설명">상세 설명&lt;/h2>
&lt;h3 id="static-storage-duration-vs-automatic-storage-duration">Static Storage Duration vs Automatic Storage Duration&lt;/h3>
&lt;h4 id="static-storage-duration">Static Storage Duration&lt;/h4>
&lt;ul>
&lt;li>프로그램 시작 시점에 생성&lt;/li>
&lt;li>프로그램 종료까지 존재&lt;/li>
&lt;li>초기화되지 않으면 0 또는 nullptr로 자동 초기화&lt;/li>
&lt;/ul>
&lt;h4 id="automatic-storage-duration">Automatic Storage Duration&lt;/h4>
&lt;ul>
&lt;li>선언된 블록 진입 시 생성&lt;/li>
&lt;li>블록 종료 시 파괴&lt;/li>
&lt;li>초기화되지 않으면 값이 불확정 상태&lt;/li>
&lt;/ul>
&lt;h3 id="예시-코드">예시 코드&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 정적 저장 기간
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> globalStaticVar &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">staticFunction&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Static function is called&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">exampleFunction&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 자동 저장 기간
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> localAutoVar &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 정적 저장 기간
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> localStaticVar &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localAutoVar&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localStaticVar&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;localAutoVar: &amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> localAutoVar &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;localStaticVar: &amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> localStaticVar &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="참고-사항">참고 사항&lt;/h2>
&lt;h3 id="오해-해소">오해 해소&lt;/h3>
&lt;ul>
&lt;li>함수에 &lt;code>static&lt;/code> 키워드가 없더라도 모든 함수는 기본적으로 정적 저장 기간을 가짐&lt;/li>
&lt;li>C++에서는 함수 오버로딩이 합법적이지만, AUTOSAR C++14는 더 엄격한 안전 기준을 적용&lt;/li>
&lt;/ul>
&lt;h3 id="컴파일-및-검증">컴파일 및 검증&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 일반 컴파일&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g++ -std&lt;span style="color:#f92672">=&lt;/span>c++14 -o test_a2_10_5 test_a2_10_5.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># AUTOSAR 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coverity scan --checker&lt;span style="color:#f92672">=&lt;/span>AUTOSAR test_a2_10_5.cpp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="결론">결론&lt;/h3>
&lt;p>AUTOSAR C++14 Rule A2-10-5는 자동차 소프트웨어의 안전성과 신뢰성을 위해 코드의 명확성을 강조하는 규칙입니다. 식별자의 재사용을 금지함으로써 코드의 가독성과 유지보수성을 향상시킵니다.&lt;/p></description></item><item><title>CERT Cpp Checker</title><link>https://jongyongpark.github.io/posts/checker/cert-cpp-checker/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/checker/cert-cpp-checker/</guid><description>&lt;hr></description></item><item><title>CERT Java Checker</title><link>https://jongyongpark.github.io/posts/checker/cert-java-checker/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/checker/cert-java-checker/</guid><description>&lt;h1 id="cert-ser03-j--do-not-serialize-unencrypted-sensitive-data">CERT SER03-J : Do not serialize unencrypted sensitive data.&lt;/h1>
&lt;p>죄송합니다. 이전에 제공된 정보에서 혼란을 드려 죄송합니다. CERT Java 보안 코딩 표준에서 &lt;strong>SER03-J: 민감한 데이터를 암호화하지 않고 직렬화하지 마십시오&lt;/strong>라는 규칙은 민감한 정보가 직렬화 과정에서 노출되지 않도록 보호하기 위한 지침을 제공합니다.&lt;/p>
&lt;h3 id="취약한-코드-예시">취약한 코드 예시&lt;/h3>
&lt;p>아래 코드는 사용자의 비밀번호를 평문으로 직렬화하여 파일에 저장하는 취약한 예제입니다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.io.*;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">UserInfo&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Serializable {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> serialVersionUID &lt;span style="color:#f92672">=&lt;/span> 1L;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String username;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String password; &lt;span style="color:#75715e">// 민감한 데이터&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">UserInfo&lt;/span>(String username, String password) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">username&lt;/span> &lt;span style="color:#f92672">=&lt;/span> username;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">password&lt;/span> &lt;span style="color:#f92672">=&lt;/span> password;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// getter 및 setter 생략&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UserInfo user &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UserInfo(&lt;span style="color:#e6db74">&amp;#34;user1&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;password123&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 객체를 파일에 직렬화&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> (ObjectOutputStream oos &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ObjectOutputStream(&lt;span style="color:#66d9ef">new&lt;/span> FileOutputStream(&lt;span style="color:#e6db74">&amp;#34;user.ser&amp;#34;&lt;/span>))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> oos.&lt;span style="color:#a6e22e">writeObject&lt;/span>(user);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (IOException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위 코드에서는 &lt;code>UserInfo&lt;/code> 객체를 직렬화하여 &lt;code>user.ser&lt;/code> 파일에 저장합니다. 그러나 &lt;code>password&lt;/code> 필드는 암호화되지 않은 상태로 저장되므로, 파일이 유출되면 비밀번호가 노출될 수 있습니다.&lt;/p></description></item><item><title>Cpp Lamda</title><link>https://jongyongpark.github.io/posts/developer/cpp-lamda/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/cpp-lamda/</guid><description>&lt;h1 id="cpp-lamda-variable-is-private">Cpp Lamda Variable is Private&lt;/h1>
&lt;p>C++에서 람다 함수는 외부 변수들을 캡처하여 내부에서 사용할 수 있습니다. 이때, 캡처된 변수들은 람다 객체의 멤버 변수로 저장되며, 이러한 멤버 변수들은 &lt;strong>컴파일러에 의해 &lt;code>private&lt;/code> 접근 지정자로 선언됩니다&lt;/strong>. 따라서, 람다 객체 외부에서는 이들 멤버 변수에 직접 접근할 수 없습니다.&lt;/p>
&lt;h3 id="예제-코드">예제 코드&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;functional&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> x &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// x를 값으로 캡처하는 람다 함수
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">auto&lt;/span> lambda &lt;span style="color:#f92672">=&lt;/span> [x]() &lt;span style="color:#66d9ef">mutable&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Captured x: &amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> x &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lambda(); &lt;span style="color:#75715e">// Captured x: 10
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> lambda(); &lt;span style="color:#75715e">// Captured x: 11
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 람다 객체의 멤버 변수 x에 직접 접근하려는 시도
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// std::cout &amp;lt;&amp;lt; &amp;#34;Internal x: &amp;#34; &amp;lt;&amp;lt; lambda.x &amp;lt;&amp;lt; std::endl; // 오류: &amp;#39;lambda&amp;#39;의 &amp;#39;x&amp;#39;에 접근할 수 없음
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="분석">분석&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>캡처된 변수의 저장&lt;/strong>: 람다 함수 &lt;code>[x]&lt;/code>는 외부 변수 &lt;code>x&lt;/code>를 값으로 캡처하여 람다 객체의 멤버 변수로 저장합니다.&lt;/p></description></item><item><title>Git - Change Branch</title><link>https://jongyongpark.github.io/posts/sdlc/git-branch/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/git-branch/</guid><description>&lt;h1 id="clone-with-branch">Clone with branch&lt;/h1>
&lt;p>특정 브랜치를 바로 클론하려면 다음 명령어를 사용하시면 됩니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone -b 2025.3.maint https://gitlab.host_name/group_name/repo_name.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>이 명령어는 지정된 URL에서 2025.3.maint 브랜치를 클론합니다. 기본적으로 로컬 디렉토리 이름은 저장소 이름(cnc-umbrella-chart)으로 생성됩니다.&lt;/p>
&lt;p>다른 디렉토리 이름을 지정하고 싶다면 URL 뒤에 원하는 디렉토리 이름을 추가하면 됩니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone -b 2025.3.maint https://gitlab.host_name/group_name/repo_name.git custom-directory-name
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>이 명령어를 실행하면 2025.3.maint 브랜치만 가져오게 됩니다. 더 빠른 클론을 원한다면 &lt;code>--single-branch&lt;/code> 옵션을 추가할 수 있습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone -b 2025.3.maint --single-branch https://gitlab.host_name/group_name/repo_name.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="change-branch">Change branch&lt;/h1>
&lt;p>이미 main 브랜치를 clone하였다. 2025.3.maint 브랜치를 가져오는 방법은?&lt;/p></description></item><item><title>Git Usage</title><link>https://jongyongpark.github.io/posts/sdlc/git/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/git/</guid><description>&lt;hr>
&lt;hr>
&lt;h1 id="github에서-새로운-repository저장소를-생성하는-방법">&lt;strong>GitHub에서 새로운 Repository(저장소)를 생성하는 방법&lt;/strong>&lt;/h1>
&lt;h2 id="github에서-새로운-repository저장소를-생성하는-방법-1">&lt;strong>GitHub에서 새로운 Repository(저장소)를 생성하는 방법&lt;/strong>&lt;/h2>
&lt;p>GitHub에서 새로운 **Repository(저장소)**를 생성하는 방법을 단계별로 설명하겠습니다.&lt;br>
&lt;strong>방법 1:&lt;/strong> GitHub 웹사이트에서 직접 생성하는 방법&lt;br>
&lt;strong>방법 2:&lt;/strong> Git CLI를 사용하여 터미널에서 생성하는 방법&lt;/p>
&lt;hr>
&lt;h2 id="-방법-1-github-웹사이트에서-직접-생성하기">&lt;strong>📝 방법 1: GitHub 웹사이트에서 직접 생성하기&lt;/strong>&lt;/h2>
&lt;h3 id="1-github에-로그인">&lt;strong>1️⃣ GitHub에 로그인&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/">GitHub 홈페이지&lt;/a>에 접속 후 로그인합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="2-새-저장소-생성-페이지-이동">&lt;strong>2️⃣ 새 저장소 생성 페이지 이동&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>우측 상단의 &lt;strong>&lt;code>+&lt;/code> 버튼&lt;/strong>을 클릭한 후 &lt;strong>&amp;ldquo;New repository&amp;rdquo;&lt;/strong> 선택&lt;/li>
&lt;li>또는 직접 &lt;a href="https://github.com/new">새 저장소 생성 페이지&lt;/a>로 이동&lt;/li>
&lt;/ul>
&lt;h3 id="3-저장소-정보-입력">&lt;strong>3️⃣ 저장소 정보 입력&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Repository name (필수):&lt;/strong> 저장소 이름을 입력합니다. (예: &lt;code>my-new-repo&lt;/code>)&lt;/li>
&lt;li>&lt;strong>Description (선택):&lt;/strong> 저장소에 대한 설명을 입력합니다.&lt;/li>
&lt;li>&lt;strong>Visibility 선택:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>Public&lt;/code>(공개) → 누구나 볼 수 있음.&lt;/li>
&lt;li>&lt;code>Private&lt;/code>(비공개) → 본인과 초대한 사용자만 접근 가능.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="4-추가-설정">&lt;strong>4️⃣ 추가 설정&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>✅ &lt;code>Initialize this repository with a README&lt;/code> (선택)
&lt;ul>
&lt;li>체크하면 기본적인 &lt;code>README.md&lt;/code> 파일이 생성됨.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>✅ &lt;code>.gitignore&lt;/code> (선택)
&lt;ul>
&lt;li>특정 파일을 Git에서 무시하도록 설정 (예: Python, Node.js 등).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>✅ &lt;code>License&lt;/code> (선택)
&lt;ul>
&lt;li>오픈소스 라이선스를 설정 (예: MIT, Apache 2.0 등).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="5-저장소-생성">&lt;strong>5️⃣ 저장소 생성&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&amp;ldquo;Create repository&amp;rdquo;&lt;/strong> 버튼을 클릭하면 저장소가 생성됩니다.&lt;/li>
&lt;/ul>
&lt;h3 id="6-로컬-프로젝트와-연결">&lt;strong>6️⃣ 로컬 프로젝트와 연결&lt;/strong>&lt;/h3>
&lt;p>이제 로컬에서 작업 중인 프로젝트를 GitHub 저장소에 연결할 수 있습니다.&lt;/p></description></item><item><title>Hyundai Cpp Checker</title><link>https://jongyongpark.github.io/posts/checker/hyundai-cpp-checker/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/checker/hyundai-cpp-checker/</guid><description>&lt;h1 id="hyundai-mp-oop-011">HYUNDAI MP-OOP-011&lt;/h1>
&lt;p>HYUNDAI MP-OOP-011 룰은 C++ 프로그래밍에서 &lt;strong>클래스의 멤버 변수를 직접적으로 노출하지 말고, 적절한 접근 제어를 통해 캡슐화(encapsulation)를 유지하라&lt;/strong>는 원칙을 강조합니다.&lt;/p>
&lt;h3 id="1-룰의-목적">&lt;strong>1. 룰의 목적&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>데이터 보호&lt;/strong>: 클래스 내부의 데이터가 외부 코드에 의해 직접 수정되는 것을 방지하여 무결성을 유지합니다.&lt;/li>
&lt;li>&lt;strong>유지보수성 향상&lt;/strong>: 데이터 접근을 메서드를 통해 제어함으로써 코드 변경 시 영향 범위를 최소화합니다.&lt;/li>
&lt;li>&lt;strong>캡슐화 준수&lt;/strong>: 객체 지향 프로그래밍의 기본 원칙인 캡슐화를 통해 데이터와 메서드를 하나의 단위로 묶어 관리합니다.&lt;/li>
&lt;/ul>
&lt;h3 id="2-권장-사항">&lt;strong>2. 권장 사항&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>멤버 변수의 접근 제어&lt;/strong>: 모든 멤버 변수를 &lt;code>private&lt;/code> 또는 &lt;code>protected&lt;/code>로 선언하여 외부에서 직접 접근하지 못하도록 합니다.&lt;/li>
&lt;li>&lt;strong>접근자 메서드 제공&lt;/strong>: 필요한 경우, 멤버 변수에 접근하기 위한 &lt;code>getter&lt;/code> 및 &lt;code>setter&lt;/code> 메서드를 제공합니다.&lt;/li>
&lt;li>&lt;strong>불필요한 공개 멤버 제거&lt;/strong>: 외부에서 직접 접근할 필요가 없는 멤버는 공개하지 않습니다.&lt;/li>
&lt;/ul>
&lt;h3 id="3-예시">&lt;strong>3. 예시&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>잘못된 예:&lt;/strong>&lt;/p></description></item><item><title>Hyundai Java Checker</title><link>https://jongyongpark.github.io/posts/checker/hyundai-java-checker/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/checker/hyundai-java-checker/</guid><description>&lt;h1 id="mj-ser-002--do-not-serialize-unencrypted-sensitive-data">MJ-SER-002 : Do not serialize unencrypted sensitive data.&lt;/h1>
&lt;p>CERT SER03-J 에 매핑됨&lt;/p>
&lt;p>&lt;a href="https://documentation.blackduck.com/bundle/coverity-docs-2023.12/page/checker-ref/tables/hyundai-java.html">https://documentation.blackduck.com/bundle/coverity-docs-2023.12/page/checker-ref/tables/hyundai-java.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://documentation.blackduck.com/bundle/coverity-docs/page/checker-ref/tables/sei-cert-java-coding-standard.html">https://documentation.blackduck.com/bundle/coverity-docs/page/checker-ref/tables/sei-cert-java-coding-standard.html&lt;/a>&lt;/p></description></item><item><title>Kiwoom</title><link>https://jongyongpark.github.io/posts/ai/kiwoon/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/ai/kiwoon/</guid><description/></item><item><title>Ollama</title><link>https://jongyongpark.github.io/posts/ai/ollama/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/ai/ollama/</guid><description>&lt;h1 id="ec2의-ubuntu-인스턴스에서-ollama를-설치하고-사용하는-방법">EC2의 Ubuntu 인스턴스에서 Ollama를 설치하고 사용하는 방법&lt;/h1>
&lt;p>EC2의 Ubuntu 인스턴스에서 Ollama를 설치하고 사용하는 방법을 안내해드리겠습니다.&lt;/p>
&lt;h3 id="1-ollama-설치">1. Ollama 설치&lt;/h3>
&lt;p>Ollama는 로컬 환경에서 대규모 언어 모델(LLM)을 실행할 수 있게 해주는 오픈 소스 프레임워크입니다. Ubuntu에서 Ollama를 설치하려면 다음 단계를 따르세요.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>시스템 업데이트 및 필수 패키지 설치:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt update &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> sudo apt upgrade -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install -y curl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ollama 설치 스크립트 실행:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -fsSL https://ollama.com/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>설치 확인:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ollama --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위 명령어를 실행하여 Ollama가 정상적으로 설치되었는지 확인합니다.&lt;/p></description></item><item><title>React Hook</title><link>https://jongyongpark.github.io/posts/developer/javascipt/react-hook/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/javascipt/react-hook/</guid><description>&lt;h1 id="react-hook">React Hook&lt;/h1>
&lt;p>React의 함수형 컴포넌트는 매 렌더링마다 컴포넌트 함수를 호출합니다. 이때 React는 내부적으로 **hook 체인(혹은 hook 리스트)**를 유지하며, 각 hook 호출마다 고유한 상태(예: useState의 상태, useEffect의 효과 정보 등)를 저장합니다. 이 구조와 재호출 과정을 자세히 설명하면 다음과 같습니다.&lt;/p>
&lt;hr>
&lt;h3 id="1-hook-체인의-기본-구조">1. Hook 체인의 기본 구조&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Fiber와 Hook 리스트:&lt;/strong>&lt;br>
React는 각 컴포넌트 인스턴스(실제로는 Fiber 노드)에 hook 정보를 저장합니다. 이 정보는 hook들이 호출된 순서대로 배열(혹은 연결 리스트)로 관리되며, 각 hook은 해당 컴포넌트의 렌더링 상태와 관련된 데이터를 보관합니다.&lt;/p></description></item><item><title>React Native</title><link>https://jongyongpark.github.io/posts/developer/javascipt/react-native/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/javascipt/react-native/</guid><description>&lt;h1 id="react-native-와-react-의-차이">React Native 와 React 의 차이&lt;/h1>
&lt;p>React Native는 React의 개념과 철학을 기반으로 하지만, 주로 모바일 앱 개발(안드로이드와 iOS)을 위해 설계된 프레임워크입니다. 아래에서는 React Native의 주요 특징과 React(Web)와의 차이점을 자세히 설명합니다.&lt;/p>
&lt;hr>
&lt;h2 id="1-react-native란">1. React Native란?&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>목적:&lt;/strong>&lt;br>
React Native는 JavaScript와 React의 컴포넌트 기반 아키텍처를 활용하여 네이티브 모바일 앱(안드로이드, iOS)을 개발할 수 있도록 해줍니다.&lt;br>
웹 브라우저가 아닌, 모바일 기기의 네이티브 UI 컴포넌트(예: &lt;code>View&lt;/code>, &lt;code>Text&lt;/code>, &lt;code>Image&lt;/code>)를 사용하여 사용자 인터페이스를 구성합니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>구조 및 실행 방식:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>JS 코드와 네이티브 브리지:&lt;/strong>&lt;br>
React Native 앱은 JavaScript 코드로 작성되며, 이 코드는 JavaScript 엔진(V8, Hermes 등)에서 실행됩니다.&lt;br>
JavaScript와 네이티브 플랫폼 간의 통신은 &amp;ldquo;브리지(Bridge)&amp;ldquo;를 통해 이뤄지며, 이로 인해 JavaScript 코드에서 네이티브 UI 컴포넌트나 기능을 호출할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>플랫폼별 네이티브 컴포넌트:&lt;/strong>&lt;br>
React Native는 플랫폼에 최적화된 네이티브 UI 컴포넌트를 사용하여, 높은 성능과 원활한 사용자 경험을 제공합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="2-react-web와-react-native의-차이점">2. React (Web)와 React Native의 차이점&lt;/h2>
&lt;h3 id="21-렌더링-대상">2.1 렌더링 대상&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>React (Web):&lt;/strong>&lt;/p></description></item><item><title>Different URL Formats for Accessing a Git Repository</title><link>https://jongyongpark.github.io/posts/technical-support/git--repo-access-url-formats/</link><pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/git--repo-access-url-formats/</guid><description>&lt;h2 id="-different-url-formats-for-accessing-a-git-repository">&lt;strong>🔹 Different URL Formats for Accessing a Git Repository&lt;/strong>&lt;/h2>
&lt;p>Git supports multiple protocols for accessing repositories, each with its own advantages and disadvantages in terms of authentication, security, and ease of use. Below is a summary of the common URL formats, their corresponding protocols, authentication methods, and a comparison of their pros and cons.&lt;/p>
&lt;hr>
&lt;h3 id="-git-repository-url-formats-and-their-characteristics">&lt;strong>📌 Git Repository URL Formats and Their Characteristics&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Git URL Format&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Protocol Used&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Authentication Method&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Pros&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Cons&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git@host:path/repo.git&lt;/code>&lt;/td>
&lt;td>&lt;strong>SSH&lt;/strong>&lt;/td>
&lt;td>SSH key authentication (Private/Public key pair)&lt;/td>
&lt;td>✅ Secure authentication without storing passwords ✅ Supports read &amp;amp; write access ✅ Works well in automation (CI/CD)&lt;/td>
&lt;td>❌ Requires setting up SSH keys ❌ Firewalls may block SSH (port 22)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ssh://git@host/path/repo.git&lt;/code>&lt;/td>
&lt;td>&lt;strong>SSH&lt;/strong>&lt;/td>
&lt;td>SSH key authentication&lt;/td>
&lt;td>✅ Same as &lt;code>git@host:path/repo.git&lt;/code>, but with explicit protocol ✅ More readable for some users&lt;/td>
&lt;td>❌ Identical disadvantages as the &lt;code>git@&lt;/code> format&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>https://host/path/repo.git&lt;/code>&lt;/td>
&lt;td>&lt;strong>HTTPS&lt;/strong>&lt;/td>
&lt;td>Username + Password, or Personal Access Token (PAT)&lt;/td>
&lt;td>✅ Works without additional setup ✅ Usually allowed through firewalls ✅ Supports 2FA via PAT&lt;/td>
&lt;td>❌ Requires entering credentials or setting up a credential manager ❌ PATs need to be managed securely&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git://host/path/repo.git&lt;/code>&lt;/td>
&lt;td>&lt;strong>Git Daemon (read-only)&lt;/strong>&lt;/td>
&lt;td>No authentication required&lt;/td>
&lt;td>✅ Fast and lightweight ✅ Ideal for public repositories&lt;/td>
&lt;td>❌ No authentication, security risk ❌ Only supports read access&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>/path/to/repo.git&lt;/code>&lt;/td>
&lt;td>&lt;strong>Local File System&lt;/strong>&lt;/td>
&lt;td>No authentication needed (local access)&lt;/td>
&lt;td>✅ Fastest access (no network latency) ✅ No need for authentication&lt;/td>
&lt;td>❌ Only works on the local machine ❌ Cannot be used for remote access&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-pros-and-cons-of-each-git-access-method">&lt;strong>📌 Pros and Cons of Each Git Access Method&lt;/strong>&lt;/h3>
&lt;h4 id="1-ssh-githostpathrepogit-or-sshgithostpathrepogit">&lt;strong>1️⃣ SSH (&lt;code>git@host:path/repo.git&lt;/code> or &lt;code>ssh://git@host/path/repo.git&lt;/code>)&lt;/strong>&lt;/h4>
&lt;p>✅ &lt;strong>Pros:&lt;/strong>&lt;/p></description></item><item><title>Github Pages with Hugo</title><link>https://jongyongpark.github.io/posts/creator/github-page-with-hugo/</link><pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/creator/github-page-with-hugo/</guid><description>&lt;h1 id="github-pages">Github Pages&lt;/h1>
&lt;p>GitHub Pages는 GitHub 저장소를 사용하여 정적 웹사이트를 쉽게 배포할 수 있는 기능입니다.&lt;br>
다음은 &lt;strong>GitHub Pages를 설정하고 사용하는 방법&lt;/strong>을 단계별로 설명합니다.&lt;/p>
&lt;hr>
&lt;h2 id="1-github-pages-활성화하기">&lt;strong>1. GitHub Pages 활성화하기&lt;/strong>&lt;/h2>
&lt;h3 id="1-github-저장소-생성">&lt;strong>(1) GitHub 저장소 생성&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>GitHub에 로그인하고 &lt;strong>새로운 저장소(New Repository)&lt;/strong> 생성&lt;/p>
&lt;/li>
&lt;li>
&lt;p>저장소 이름을 설정 (예: &lt;code>my-blog&lt;/code>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>Public&lt;/code>(공개) 저장소로 설정해야 GitHub Pages에서 무료로 사용할 수 있음&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>README.md&lt;/code> 파일을 추가하는 것이 좋음&lt;/p>
&lt;/li>
&lt;li>
&lt;p>저장소 생성 후 &lt;code>git clone&lt;/code>으로 로컬에 다운로드&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone https://github.com/your-username/my-blog.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd my-blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="2-github-pages-활성화">&lt;strong>2. GitHub Pages 활성화&lt;/strong>&lt;/h2>
&lt;ol>
&lt;li>GitHub 저장소로 이동&lt;/li>
&lt;li>&lt;strong>Settings &amp;gt; Pages&lt;/strong> 탭으로 이동&lt;/li>
&lt;li>&lt;strong>Branch 선택&lt;/strong>: &lt;code>main&lt;/code> 또는 &lt;code>gh-pages&lt;/code> 브랜치를 선택하여 배포할 수 있음&lt;/li>
&lt;li>저장 후 몇 분 내로 GitHub Pages가 활성화됨&lt;/li>
&lt;li>배포된 사이트 URL 확인 (&lt;code>https://your-username.github.io/my-blog/&lt;/code>)&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="3-htmlcss-파일-추가하여-웹사이트-배포">&lt;strong>3. HTML/CSS 파일 추가하여 웹사이트 배포&lt;/strong>&lt;/h2>
&lt;ol>
&lt;li>로컬 저장소에서 기본 웹페이지 생성:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;&amp;lt;h1&amp;gt;Welcome to My GitHub Page&amp;lt;/h1&amp;gt;&amp;#34;&lt;/span> &amp;gt; index.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>변경 사항을 커밋하고 푸시:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git add index.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#e6db74">&amp;#34;Add main page&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>GitHub Pages가 자동으로 &lt;code>index.html&lt;/code>을 인식하여 배포함&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="4-jekyll을-이용한-블로그-만들기">&lt;strong>4. Jekyll을 이용한 블로그 만들기&lt;/strong>&lt;/h2>
&lt;p>GitHub Pages는 Jekyll을 지원하므로, Jekyll을 활용하여 정적 블로그를 쉽게 만들 수 있음.&lt;/p></description></item><item><title>KinD for k8s</title><link>https://jongyongpark.github.io/posts/k8s_docker/k8s-kind/</link><pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/k8s_docker/k8s-kind/</guid><description>&lt;hr>
&lt;h1 id="kind로-3개의-worker-node를-포함한-클러스터를-만드는-bash-스크립트">KinD로 3개의 worker node를 포함한 클러스터를 만드는 Bash 스크립트&lt;/h1>
&lt;p>다음은 &lt;code>KinD&lt;/code>(Kubernetes in Docker)를 사용하여 프라이빗 클라우드를 생성하고, 3개의 worker node를 포함한 클러스터를 만드는 Bash 스크립트입니다. 이 스크립트는 필요한 유틸리티를 다운로드하고 설치하며, &lt;code>kind&lt;/code> 클러스터를 구성합니다.&lt;/p>
&lt;h3 id="bash-script-setup_kind_clustersh">&lt;strong>Bash Script: &lt;code>setup_kind_cluster.sh&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 스크립트 실행 중 오류 발생 시 중단&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 변수 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KIND_VERSION&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;v0.20.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KUBECTL_VERSION&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;v1.28.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DOCKER_COMPOSE_VERSION&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;v2.22.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 필요한 유틸리티 다운로드 및 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>install_utilities&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Docker 설치 (Docker가 설치되어 있지 않을 경우)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ! command -v docker &amp;amp;&amp;gt; /dev/null; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker를 설치 중입니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -fsSL https://get.docker.com | bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo usermod -aG docker $USER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker 설치 완료. 사용하려면 로그아웃 후 다시 로그인하세요.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker가 이미 설치되어 있습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># kind 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ! command -v kind &amp;amp;&amp;gt; /dev/null; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind를 설치 중입니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -Lo ./kind https://kind.sigs.k8s.io/dl/&lt;span style="color:#e6db74">${&lt;/span>KIND_VERSION&lt;span style="color:#e6db74">}&lt;/span>/kind-linux-amd64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chmod +x ./kind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo mv ./kind /usr/local/bin/kind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 설치 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind가 이미 설치되어 있습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># kubectl 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ! command -v kubectl &amp;amp;&amp;gt; /dev/null; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kubectl을 설치 중입니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -LO &lt;span style="color:#e6db74">&amp;#34;https://dl.k8s.io/release/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>KUBECTL_VERSION&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/bin/linux/amd64/kubectl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chmod +x ./kubectl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo mv ./kubectl /usr/local/bin/kubectl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kubectl 설치 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kubectl이 이미 설치되어 있습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Docker Compose 설치 (필요한 경우)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ! command -v docker-compose &amp;amp;&amp;gt; /dev/null; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker Compose를 설치 중입니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -L &lt;span style="color:#e6db74">&amp;#34;https://github.com/docker/compose/releases/download/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>DOCKER_COMPOSE_VERSION&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/docker-compose-&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>uname -s&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">-&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>uname -m&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -o /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chmod +x /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker Compose 설치 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker Compose가 이미 설치되어 있습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Kind 클러스터 설정 파일 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_kind_cluster_config&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 클러스터 설정 파일을 생성합니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF &amp;gt; kind-cluster-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">kind: Cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">apiVersion: kind.x-k8s.io/v1alpha4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">nodes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - role: control-plane
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - role: worker
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - role: worker
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - role: worker
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 클러스터 설정 파일 생성 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Kind 클러스터 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_kind_cluster&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 클러스터를 생성합니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind create cluster --config kind-cluster-config.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 클러스터 생성 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 주요 함수 호출&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>install_utilities
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_kind_cluster_config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_kind_cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 클러스터 정보 출력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl get nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;3개의 worker 노드를 포함한 Kind 클러스터가 성공적으로 생성되었습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="스크립트-설명">&lt;strong>스크립트 설명&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>필수 유틸리티 설치&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>Docker&lt;/code>, &lt;code>kind&lt;/code>, &lt;code>kubectl&lt;/code>, &lt;code>docker-compose&lt;/code>가 설치되지 않은 경우 자동으로 다운로드하고 설치합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>클러스터 구성 파일&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>kind-cluster-config.yaml&lt;/code> 파일을 생성하며, 하나의 control-plane 노드와 3개의 worker 노드를 포함합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>클러스터 생성&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>kind&lt;/code>를 이용해 클러스터를 생성합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>kubectl로 클러스터 상태 확인&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>kubectl&lt;/code> 명령어를 통해 생성된 클러스터의 노드 상태를 확인할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="사용-방법">&lt;strong>사용 방법&lt;/strong>:&lt;/h3>
&lt;ol>
&lt;li>스크립트를 파일로 저장 (예: &lt;code>setup_kind_cluster.sh&lt;/code>).&lt;/li>
&lt;li>파일에 실행 권한을 부여:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chmod +x setup_kind_cluster.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>스크립트 실행:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./setup_kind_cluster.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>클러스터가 성공적으로 생성되면 &lt;code>kubectl get nodes&lt;/code> 명령을 통해 노드 상태를 확인할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;p>이 스크립트는 &lt;code>KinD&lt;/code>를 활용하여 간단하게 3개의 worker 노드가 있는 클러스터를 설정할 수 있도록 도와줍니다.&lt;/p></description></item><item><title>Differences, priorities, and Bash equivalents for :=, =, and ?= in Makefiles</title><link>https://jongyongpark.github.io/posts/sdlc/makefile-bash--variable-assignment/</link><pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/makefile-bash--variable-assignment/</guid><description>&lt;p>Differences, priorities, and Bash equivalents for :=, =, and ?= in Makefiles&lt;/p>
&lt;hr>
&lt;p>An Explanation of the differences, priorities, and Bash equivalents for :=, =, and ?= in Makefiles.&lt;/p>
&lt;p>Makefile variable assignment operators:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>:= (Simple expansion):&lt;/p>
&lt;ul>
&lt;li>Expands variables immediately at assignment time.&lt;/li>
&lt;li>Example: FOO := $(BAR)&lt;/li>
&lt;li>If BAR changes later, FOO will not be affected.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>= (Recursive expansion):&lt;/p>
&lt;ul>
&lt;li>Defers expansion until the variable is used.&lt;/li>
&lt;li>Example: FOO = $(BAR)&lt;/li>
&lt;li>If BAR changes later, FOO will reflect the new value when used.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>?= (Conditional assignment):&lt;/p></description></item><item><title>SRM : Reset Admin Password on MariaDB</title><link>https://jongyongpark.github.io/posts/technical-support/srm/srm-reset-mariadb-admin-password/</link><pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/srm/srm-reset-mariadb-admin-password/</guid><description>&lt;p>How to reset admin password on MariaDB from SRM (Softeware Risk Manager).&lt;/p>
&lt;hr>
&lt;p>This script recovers from a lost or forgotten super-admin password. It resets both the super-admin password and the database root user password to the provided value By SRM&lt;/p>
&lt;hr>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># This script recovers from a lost or forgotten super-admin password.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># It resets both the super-admin password and the database root user password to the provided value.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># By SRM&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> admin-password-recover-script&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Validate input and set SRM installation path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$#&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -ne &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$#&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -ne &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Usage: &lt;/span>$0&lt;span style="color:#e6db74"> [path to SRM installation folder]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;If path contains spaces, wrap it in double quotes.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Example:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34; &lt;/span>$0&lt;span style="color:#e6db74"> /opt/srm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local SRM_PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$#&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -eq &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SRM_PATH&lt;span style="color:#f92672">=&lt;/span>$1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Enter path to SRM installation folder:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> read -r SRM_PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Remove trailing slash from the input path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SRM_PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>SRM_PATH%/&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Check for MariaDB binary file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> ! -f &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRM_PATH&lt;span style="color:#e6db74">/mysql/bin/mysqld&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The given SRM directory does not appear to have appropriate mysql files&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Get new password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Enter new administrator password:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> read -rs NEW_PASSWORD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Create temporary initialization file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TEMP_INIT_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>mktemp&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Check MariaDB configuration file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Looking for MariaDB configuration file...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DB_CONFIG&lt;span style="color:#f92672">=&lt;/span>$SRM_PATH/mysql/my.cnf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> ! -f &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DB_CONFIG&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DB_CONFIG&lt;span style="color:#e6db74"> not found. Aborting&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Check MariaDB data directory from SRM properties file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Found MariaDB configuration at &lt;/span>$DB_CONFIG&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Looking for SRM database...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DB_DATA&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>grep &lt;span style="color:#e6db74">&amp;#34;mysql_data_directory&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRM_PATH&lt;span style="color:#e6db74">/properties.ini&amp;#34;&lt;/span> | cut -d&lt;span style="color:#e6db74">&amp;#39;=&amp;#39;&lt;/span> -f2&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> ! -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DB_DATA&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;MariaDB data directory not found (looked at &lt;/span>$DB_DATA&lt;span style="color:#e6db74">). Aborting&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Verify SRM database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Found MariaDB data directory at &lt;/span>$DB_DATA&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DB_NAME&lt;span style="color:#f92672">=&lt;/span>srm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> ! -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DB_DATA&lt;span style="color:#e6db74">/&lt;/span>$DB_NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DB_NAME&lt;span style="color:#f92672">=&lt;/span>bitnami_srm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> ! -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DB_DATA&lt;span style="color:#e6db74">/&lt;/span>$DB_NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;SRM database not found. Aborting&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Found SRM database &lt;/span>$DB_NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Generate MariaDB initialization file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Generating MariaDB recovery init file...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;SET PASSWORD FOR &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; = PASSWORD(&amp;#39;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NEW_PASSWORD//&lt;span style="color:#ae81ff">\&amp;#39;&lt;/span>/&lt;span style="color:#ae81ff">\&amp;#39;\&amp;#39;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;);&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;UPDATE \`&lt;/span>$DB_NAME&lt;span style="color:#e6db74">\`.\`LOCAL_USERS\` SET \`PASSWORD\`=SHA2(&amp;#39;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NEW_PASSWORD//&lt;span style="color:#ae81ff">\&amp;#39;&lt;/span>/&lt;span style="color:#ae81ff">\&amp;#39;\&amp;#39;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;, 256) WHERE \`ID\`=1;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;SHUTDOWN;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TEMP_INIT_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Stop SRM services&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Shutting down SRM services&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRM_PATH&lt;span style="color:#e6db74">/ctlscript.sh&amp;#34;&lt;/span> stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Reset passwords&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Resetting passwords...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># If root user, set file permissions and run as mysql user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">((&lt;/span> EUID &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">))&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chown mysql &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TEMP_INIT_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRM_PATH&lt;span style="color:#e6db74">/mysql/bin/mysqld&amp;#34;&lt;/span> --defaults-file&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DB_CONFIG&lt;span style="color:#e6db74">&amp;#34;&lt;/span> --init-file&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TEMP_INIT_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> --console --user&lt;span style="color:#f92672">=&lt;/span>mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRM_PATH&lt;span style="color:#e6db74">/mysql/bin/mysqld&amp;#34;&lt;/span> --defaults-file&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DB_CONFIG&lt;span style="color:#e6db74">&amp;#34;&lt;/span> --init-file&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TEMP_INIT_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> --console
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">### Clean up and display completion message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Removing recovery init file...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rm -f &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TEMP_INIT_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Done! You may start SRM again.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Execute the function&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>admin-password-recover-script &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$@&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ex&lt;span style="color:#f92672">)&lt;/span> admin-password-recover-script ~/workspace/dev_tool/codedx/srm-2024.12.1/srm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Azure DevOps API Rate Limits</title><link>https://jongyongpark.github.io/posts/technical-support/azure--devops-api-rate-limits/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/azure--devops-api-rate-limits/</guid><description>&lt;h2 id="azure-devops-api-rate-limits">&lt;strong>Azure DevOps API Rate Limits&lt;/strong>&lt;/h2>
&lt;p>Azure DevOps imposes &lt;strong>rate limits&lt;/strong> on its REST API to ensure fair usage and prevent abuse. If you exceed these limits, your API requests may be throttled, resulting in HTTP &lt;code>429 Too Many Requests&lt;/code> responses. To avoid this, it&amp;rsquo;s important to monitor and manage your API usage.&lt;/p>
&lt;p>Here’s how you can check and handle Azure DevOps Work Items API rate limits:&lt;/p>
&lt;hr>
&lt;h3 id="1-understanding-azure-devops-api-rate-limits">&lt;strong>1. Understanding Azure DevOps API Rate Limits&lt;/strong>&lt;/h3>
&lt;p>Azure DevOps API rate limits are based on:&lt;/p></description></item><item><title>Cyclomatic Complexity in C++ Code</title><link>https://jongyongpark.github.io/posts/developer/cyclomatic-complexity-in-c++-code/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/cyclomatic-complexity-in-c++-code/</guid><description>&lt;h1 id="cyclomatic-complexity-in-c-code">Cyclomatic Complexity in C++ Code&lt;/h1>
&lt;p>Cyclomatic Complexity (CCM) is a software metric used to indicate the complexity of a program. It directly measures the number of linearly independent paths through a program&amp;rsquo;s source code. Higher CCM values suggest more complex and potentially less maintainable code.&lt;/p>
&lt;h2 id="ccm-calculation-rules">CCM Calculation Rules&lt;/h2>
&lt;p>Cyclomatic Complexity is calculated based on the control flow graph of the program using the following rules:&lt;/p>
&lt;ol>
&lt;li>Basic Complexity: The simplest program has a CCM of 1.&lt;/li>
&lt;li>Control Flow Branches: Each if, for, while, case, and other control flow statements add to the CCM.&lt;/li>
&lt;li>Logical Operators: Logical operators like &amp;amp;&amp;amp; and || can also increase CCM by introducing additional paths.&lt;/li>
&lt;/ol>
&lt;h2 id="example-c-code-with-ccm-calculation">Example C++ Code with CCM Calculation&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> &lt;span style="color:#66d9ef">namespace&lt;/span> std;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Function declaration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">calculate&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> a, &lt;span style="color:#66d9ef">int&lt;/span> b, &lt;span style="color:#66d9ef">int&lt;/span> c);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> x &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> y &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> z &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> result &lt;span style="color:#f92672">=&lt;/span> calculate(x, y, z);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Result: &amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> result &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Function with high Cyclomatic Complexity
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">calculate&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> a, &lt;span style="color:#66d9ef">int&lt;/span> b, &lt;span style="color:#66d9ef">int&lt;/span> c) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> CCM &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>; &lt;span style="color:#75715e">// Basic complexity
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// If statement 1: CCM += 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (a &lt;span style="color:#f92672">&amp;gt;&lt;/span> b) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;a is greater than b&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// If-else statement: CCM += 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (b &lt;span style="color:#f92672">&amp;gt;&lt;/span> c) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;b is greater than c&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;c is greater than or equal to b&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// For loop: CCM += 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Iteration: &amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// While loop: CCM += 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> count &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span>(count &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Count: &amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> count &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Switch-case statement: Each case adds to CCM
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> option &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span>(option) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Option 1 selected&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Option 2 selected&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Option 3 selected&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Default option selected&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Logical operators: Each &amp;#39;&amp;amp;&amp;amp;&amp;#39; or &amp;#39;||&amp;#39; adds to CCM
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (a &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> b &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) { &lt;span style="color:#75715e">// &amp;#39;&amp;amp;&amp;amp;&amp;#39; adds 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Both a and b are positive&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (a &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> c &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) { &lt;span style="color:#75715e">// &amp;#39;||&amp;#39; adds 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> CCM&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Either a or c is positive&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> CCM;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="code-explanation-and-ccm-calculation">Code Explanation and CCM Calculation&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Basic Complexity:&lt;/p></description></item><item><title>DevSecOps 블로그를 시작하며</title><link>https://jongyongpark.github.io/posts/welcome-to-my-blog/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/welcome-to-my-blog/</guid><description>&lt;p>안녕하세요, RyanPark의 DevSecOps 블로그입니다&amp;hellip;&lt;/p></description></item><item><title>How to send findings from SRM (Software Risk Management) to Azure DevOps Work Items</title><link>https://jongyongpark.github.io/posts/technical-support/srm/srm-findings-to-azure-devops-work/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/srm/srm-findings-to-azure-devops-work/</guid><description>&lt;p>how to check Azure DevOps Work Items API rate limit&lt;/p>
&lt;h2 id="how-to-send-findings-from-srm-software-risk-management-to-azure-devops-work-items">How to send findings from SRM (Software Risk Management) to Azure DevOps Work Items&lt;/h2>
&lt;p>To send findings from &lt;strong>SRM (Software Risk Management)&lt;/strong> to &lt;strong>Azure DevOps Work Items&lt;/strong>, you can follow the steps outlined below. This process involves using the Azure DevOps REST API to create or update work items based on the SRM findings. Here&amp;rsquo;s a detailed guide:&lt;/p>
&lt;hr>
&lt;h3 id="1-prerequisites">&lt;strong>1. Prerequisites&lt;/strong>&lt;/h3>
&lt;p>Before starting, ensure the following:&lt;/p></description></item><item><title>Next.js - JWT</title><link>https://jongyongpark.github.io/posts/developer/javascipt/nextjs-jwt/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/javascipt/nextjs-jwt/</guid><description>&lt;h1 id="nextjs-app-with-jwt-based-authentication-and-a-basic-security-setup">Next.js app with JWT-based authentication and a basic security setup&lt;/h1>
&lt;p>Here&amp;rsquo;s how you can create a simple &lt;strong>Next.js&lt;/strong> app with &lt;strong>JWT-based authentication&lt;/strong> and a basic security setup.&lt;/p>
&lt;h3 id="steps-overview">Steps Overview:&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Initialize a Next.js app&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Set up authentication with JWT&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Create login and protected routes&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Add security features&lt;/strong>&lt;/li>
&lt;/ol>
&lt;h3 id="1-initialize-nextjs-app">1. Initialize Next.js App&lt;/h3>
&lt;p>Run the following commands to initialize a Next.js app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npx create-next-app@latest my-nextjs-jwt-app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd my-nextjs-jwt-app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-install-dependencies">2. Install Dependencies&lt;/h3>
&lt;p>You need additional packages for handling JWT, user authentication, and securing the app:&lt;/p></description></item><item><title>Python Basic Grammar</title><link>https://jongyongpark.github.io/posts/developer/python-basics/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/python-basics/</guid><description>&lt;h1 id="heading">&lt;/h1>
&lt;p>&lt;strong>FastAPI&lt;/strong>, &lt;strong>Flask&lt;/strong>, &lt;strong>Django&lt;/strong>는 모두 &lt;strong>Python&lt;/strong>으로 개발된 인기 있는 웹 프레임워크입니다. 이들 각각은 사용 사례와 목적이 다르며, 성능, 확장성, 사용 편의성 등에서 차이가 있습니다. 각 프레임워크의 특징과 장단점을 비교하여, 어떤 상황에서 어떤 프레임워크가 적합할지 알아보겠습니다.&lt;/p>
&lt;h3 id="1-fastapi">&lt;strong>1. FastAPI&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>특징&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>비동기 처리&lt;/strong>와 &lt;strong>자동화된 데이터 검증&lt;/strong>을 기본으로 지원합니다.&lt;/li>
&lt;li>&lt;strong>Python 3.7+&lt;/strong> 이상에서 사용하는 &lt;strong>type hints&lt;/strong>를 기반으로, &lt;strong>자동 API 문서화&lt;/strong>(Swagger, ReDoc)를 제공합니다.&lt;/li>
&lt;li>&lt;strong>성능&lt;/strong>이 매우 뛰어나며, 특히 &lt;strong>REST API&lt;/strong>나 &lt;strong>GraphQL&lt;/strong> 서버 구축에 적합합니다. &lt;strong>Starlette&lt;/strong>을 기반으로 하여 높은 성능을 자랑합니다.&lt;/li>
&lt;li>&lt;strong>Pydantic&lt;/strong>을 사용한 &lt;strong>데이터 검증&lt;/strong>이 매우 강력하고, 코드의 오류를 컴파일 시점에 잡을 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>장점&lt;/strong>:&lt;/p></description></item><item><title>Review of a bus trip in Korea</title><link>https://jongyongpark.github.io/posts/travel/korean-trip/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/travel/korean-trip/</guid><description>&lt;p>A review of a bus trip in Korea is written here.&lt;/p></description></item><item><title>AUTOSAR</title><link>https://jongyongpark.github.io/posts/checker/autosar/</link><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/checker/autosar/</guid><description>&lt;h1 id="autosar-automotive-open-system-architecture">AUTOSAR (Automotive Open System Architecture)&lt;/h1>
&lt;h2 id="목차">목차&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#autosar-automotive-open-system-architecture">AUTOSAR (Automotive Open System Architecture)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#%EB%AA%A9%EC%B0%A8">목차&lt;/a>&lt;/li>
&lt;li>&lt;a href="#autosar-classic-platform">AUTOSAR Classic Platform&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#%EB%B2%84%EC%A0%84-%ED%9E%88%EC%8A%A4%ED%86%A0%EB%A6%AC">버전 히스토리&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#autosar-adaptive-platform">AUTOSAR Adaptive Platform&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#%EB%B2%84%EC%A0%84-%ED%9E%88%EC%8A%A4%ED%86%A0%EB%A6%AC-1">버전 히스토리&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#autosar-c-%EA%B0%80%EC%9D%B4%EB%93%9C%EB%9D%BC%EC%9D%B8">AUTOSAR C++ 가이드라인&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#%EC%A3%BC%EC%9A%94-%EB%B2%84%EC%A0%84">주요 버전&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%EA%B0%80%EC%9D%B4%EB%93%9C%EB%9D%BC%EC%9D%B8-%ED%8A%B9%EC%A7%95">가이드라인 특징&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%EC%A3%BC%EC%9A%94-%EB%AA%A9%EC%A0%81">주요 목적&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="autosar-classic-platform">AUTOSAR Classic Platform&lt;/h2>
&lt;p>AUTOSAR Classic Platform은 자동차의 기본적인 전자 제어 시스템을 위한 표준입니다.&lt;/p>
&lt;h3 id="버전-히스토리">버전 히스토리&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>버전&lt;/th>
&lt;th>발표 연도&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AUTOSAR 1.0&lt;/td>
&lt;td>2005&lt;/td>
&lt;td>초기 버전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 2.0&lt;/td>
&lt;td>2006&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 2.1&lt;/td>
&lt;td>2007&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 3.0&lt;/td>
&lt;td>2008&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 3.1&lt;/td>
&lt;td>2008&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 3.2&lt;/td>
&lt;td>2011&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 4.0&lt;/td>
&lt;td>2009&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 4.1&lt;/td>
&lt;td>2013&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 4.2&lt;/td>
&lt;td>2014&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 4.3&lt;/td>
&lt;td>2016&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 4.4&lt;/td>
&lt;td>2018&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 4.5&lt;/td>
&lt;td>2018&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 4.6&lt;/td>
&lt;td>2020&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AUTOSAR 4.7&lt;/td>
&lt;td>2021&lt;/td>
&lt;td>최신 버전&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="autosar-adaptive-platform">AUTOSAR Adaptive Platform&lt;/h2>
&lt;p>AUTOSAR Adaptive Platform은 고성능 컴퓨팅과 자동화된 운전을 위한 표준입니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/ai/claude-prompt-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/ai/claude-prompt-guide/</guid><description>&lt;h1 id="claude-prompting-guide">Claude prompting guide&lt;/h1>
&lt;h2 id="general-tips-for-effective-prompting">General tips for effective prompting&lt;/h2>
&lt;h3 id="1-be-clear-and-specific">1. Be clear and specific&lt;/h3>
&lt;ul>
&lt;li>Clearly state your task or question at the beginning of your message.&lt;/li>
&lt;li>Provide context and details to help Claude understand your needs.&lt;/li>
&lt;li>Break complex tasks into smaller, manageable steps.&lt;/li>
&lt;/ul>
&lt;p>Bad prompt:
&lt;!-- raw HTML omitted -->
&amp;ldquo;Help me with a presentation.&amp;rdquo;
&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>Good prompt:
&lt;!-- raw HTML omitted -->
&amp;ldquo;I need help creating a 10-slide presentation for our quarterly sales meeting. The presentation should cover our Q2 sales performance, top-selling products, and sales targets for Q3. Please provide an outline with key points for each slide.&amp;rdquo;
&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/ai/cov-ai-hallucinations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/ai/cov-ai-hallucinations/</guid><description>&lt;h1 id="perplexity">perplexity&lt;/h1>
&lt;h1 id="comprehensive-guide-to-managing-multiple-projects-in-coverity-with-stream-optimization-and-component-based-analysis">Comprehensive Guide to Managing Multiple Projects in Coverity with Stream Optimization and Component-Based Analysis&lt;/h1>
&lt;p>Modern software development workflows increasingly rely on sophisticated static analysis tools like Coverity to maintain code quality across complex, branching codebases. For teams managing multiple projects within a single repository, Coverity offers powerful features to streamline analysis while maintaining granular defect tracking. This report synthesizes best practices for configuring streams, implementing component-based analysis, and optimizing performance based on industry-proven methodologies and Coverity&amp;rsquo;s technical documentation[2][11].&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/creator/github-page-update/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/creator/github-page-update/</guid><description>&lt;h1 id="테디노트-스타일과-비슷하게-설정">테디노트 스타일과 비슷하게 설정&lt;/h1>
&lt;p>테디노트 스타일과 비슷하게 설정하기 위해 config.toml 파일을 수정하겠습니다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml:config.toml" data-lang="toml:config.toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">baseURL&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;https://jongyongpark.github.io/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">languageCode&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;ko-kr&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;RyanPark&amp;#39;s DevSecOps&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">theme&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;PaperMod&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">params&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">defaultTheme&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ShowReadingTime&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ShowShareButtons&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ShowPostNavLinks&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ShowBreadCrumbs&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ShowCodeCopyButtons&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mainSections&lt;/span> = [&lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">params&lt;/span>.&lt;span style="color:#a6e22e">profileMode&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">enabled&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">title&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;RyanPark&amp;#39;s DevSecOps&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">subtitle&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;Security &amp;amp; DevOps Engineering Blog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">imageUrl&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;profile.jpg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">imageTitle&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;profile&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">params&lt;/span>.&lt;span style="color:#a6e22e">homeInfoParams&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Title&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;RyanPark&amp;#39;s DevSecOps Blog 👋&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Content&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;Security &amp;amp; DevOps Engineering Blog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">params&lt;/span>.&lt;span style="color:#a6e22e">assets&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">favicon&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;favicon.ico&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">favicon16x16&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;favicon-16x16.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">favicon32x32&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;favicon-32x32.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">apple_touch_icon&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;apple-touch-icon.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">taxonomies&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">category&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;categories&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tag&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">series&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;series&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">menu&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [[&lt;span style="color:#a6e22e">menu&lt;/span>.&lt;span style="color:#a6e22e">main&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">identifier&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;search&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;검색&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">url&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;/search/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">weight&lt;/span> = &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [[&lt;span style="color:#a6e22e">menu&lt;/span>.&lt;span style="color:#a6e22e">main&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">identifier&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;categories&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;카테고리&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">url&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;/categories/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">weight&lt;/span> = &lt;span style="color:#ae81ff">20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [[&lt;span style="color:#a6e22e">menu&lt;/span>.&lt;span style="color:#a6e22e">main&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">identifier&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;태그&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">url&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;/tags/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">weight&lt;/span> = &lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [[&lt;span style="color:#a6e22e">menu&lt;/span>.&lt;span style="color:#a6e22e">main&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">identifier&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;archives&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;연도&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">url&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;/archives/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">weight&lt;/span> = &lt;span style="color:#ae81ff">40&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [[&lt;span style="color:#a6e22e">menu&lt;/span>.&lt;span style="color:#a6e22e">main&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">identifier&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;about&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;어바웃미&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">url&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;/about/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">weight&lt;/span> = &lt;span style="color:#ae81ff">50&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">outputs&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">home&lt;/span> = [&lt;span style="color:#e6db74">&amp;#34;HTML&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;RSS&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;JSON&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>주요 변경사항:&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/creator/hugo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/creator/hugo/</guid><description>&lt;h1 id="카테고리에-게시물을-할당하는-방법">카테고리에 게시물을 할당하는 방법&lt;/h1>
&lt;p>물론입니다! Hugo에서 블로그를 만들 때 특정 카테고리에 게시물을 할당하는 방법에 대해 단계별로 안내해드리겠습니다. Hugo는 &lt;strong>Taxonomies&lt;/strong>라는 개념을 사용하여 카테고리와 태그를 관리합니다. 아래는 Hugo에서 카테고리를 설정하고 게시물에 할당하는 방법입니다.&lt;/p>
&lt;hr>
&lt;h2 id="1-taxonomies-설정하기">1. Taxonomies 설정하기&lt;/h2>
&lt;p>먼저, Hugo 사이트의 설정 파일(&lt;code>config.toml&lt;/code>, &lt;code>config.yaml&lt;/code>, 또는 &lt;code>config.json&lt;/code>)에 Taxonomies를 정의해야 합니다. 일반적으로 카테고리와 태그를 사용하므로 이를 설정합니다.&lt;/p>
&lt;h3 id="configtoml-예시">&lt;code>config.toml&lt;/code> 예시&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">taxonomies&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">category&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;categories&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tag&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configyaml-예시">&lt;code>config.yaml&lt;/code> 예시&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">taxonomies&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">category&lt;/span>: &lt;span style="color:#ae81ff">categories&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tag&lt;/span>: &lt;span style="color:#ae81ff">tags&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configjson-예시">&lt;code>config.json&lt;/code> 예시&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;taxonomies&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;category&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;categories&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;tag&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="2-게시물에-카테고리-할당하기">2. 게시물에 카테고리 할당하기&lt;/h2>
&lt;p>게시물의 메타데이터(front matter)에 카테고리를 지정하여 특정 카테고리에 게시물을 할당할 수 있습니다. Hugo는 기본적으로 Markdown 파일을 사용합니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/developer/chrome-dev-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/chrome-dev-tool/</guid><description>&lt;h1 id="크롬-브라우저에서-특정-웹사이트의-문서가-보이지-않는-문제">크롬 브라우저에서 특정 웹사이트의 문서가 보이지 않는 문제&lt;/h1>
&lt;p>크롬 브라우저에서 특정 웹사이트의 문서가 보이지 않는 문제는 다양한 원인으로 발생할 수 있습니다. 주요 원인과 해결 방법은 다음과 같습니다:&lt;/p>
&lt;hr>
&lt;h3 id="1-사이트-렌더링-이슈-cssjavascript-관련">&lt;strong>1. 사이트 렌더링 이슈 (CSS/JavaScript 관련)&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>원인&lt;/strong>: 사이트의 CSS 또는 JavaScript가 제대로 로드되지 않아 텍스트가 숨겨지거나 보이지 않을 수 있습니다.&lt;/li>
&lt;li>&lt;strong>해결 방법&lt;/strong>:
&lt;ol>
&lt;li>&lt;strong>새로고침&lt;/strong>: &lt;code>Ctrl + F5&lt;/code> 또는 &lt;code>Cmd + Shift + R&lt;/code>로 강력 새로고침을 시도하세요.&lt;/li>
&lt;li>&lt;strong>캐시 삭제&lt;/strong>:
&lt;ul>
&lt;li>크롬 설정 → &lt;code>기록&lt;/code> → &lt;code>인터넷 사용 기록 삭제&lt;/code>에서 캐시를 삭제하세요.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>확장 프로그램 비활성화&lt;/strong>:
&lt;ul>
&lt;li>브라우저 확장 프로그램이 사이트 렌더링을 방해할 수 있습니다. 익명 모드에서 열거나 확장 프로그램을 비활성화 후 다시 시도하세요.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="2-브라우저-호환성-문제">&lt;strong>2. 브라우저 호환성 문제&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>원인&lt;/strong>: 해당 사이트가 크롬 브라우저와 완전히 호환되지 않을 수 있습니다.&lt;/li>
&lt;li>&lt;strong>해결 방법&lt;/strong>:
&lt;ol>
&lt;li>다른 브라우저(예: Firefox, Edge)를 사용해 확인하세요.&lt;/li>
&lt;li>크롬의 최신 버전을 사용하는지 확인하고, 업데이트하세요:
&lt;ul>
&lt;li>설정 → &lt;code>Chrome 정보&lt;/code>에서 최신 버전 확인.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="3-사이트의-동적-콘텐츠-로드-문제">&lt;strong>3. 사이트의 동적 콘텐츠 로드 문제&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>원인&lt;/strong>: 일부 사이트는 JavaScript를 사용해 동적으로 콘텐츠를 로드합니다. 크롬 설정에서 JavaScript가 비활성화되었거나, 네트워크가 문제일 수 있습니다.&lt;/li>
&lt;li>&lt;strong>해결 방법&lt;/strong>:
&lt;ol>
&lt;li>&lt;strong>JavaScript 활성화&lt;/strong>:
&lt;ul>
&lt;li>크롬 설정 → &lt;code>개인정보 및 보안&lt;/code> → &lt;code>사이트 설정&lt;/code> → &lt;code>JavaScript 허용&lt;/code>을 확인하세요.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>VPN 또는 네트워크 변경&lt;/strong>:
&lt;ul>
&lt;li>VPN이나 네트워크 설정이 콘텐츠 로딩을 방해할 수 있습니다. 다른 네트워크에서 접속을 시도하세요.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="4-브라우저-보안-설정">&lt;strong>4. 브라우저 보안 설정&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>원인&lt;/strong>: 사이트에서 텍스트를 숨기는 방식으로 보안 기능을 사용할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>해결 방법&lt;/strong>:
&lt;ol>
&lt;li>&lt;code>개발자 도구(F12)&lt;/code> → &lt;code>Elements&lt;/code> 탭에서 텍스트가 HTML 구조 내에서 숨겨져 있는지 확인하세요.&lt;/li>
&lt;li>&lt;strong>광고 차단기(Anti-Adblock) 감지&lt;/strong>:
&lt;ul>
&lt;li>광고 차단기를 사용 중이라면 해당 사이트에서 차단 해제 후 새로고침하세요.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="5-사이트-내부-문제">&lt;strong>5. 사이트 내부 문제&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>원인&lt;/strong>: 해당 사이트의 서버나 코드 문제가 있을 수 있습니다.&lt;/li>
&lt;li>&lt;strong>해결 방법&lt;/strong>:
&lt;ul>
&lt;li>사이트 관리자에게 문제를 보고하거나, &lt;a href="https://www.synopsys.com/software-integrity/support.html">Black Duck Support&lt;/a>에 문의하세요.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>문제 해결을 위해 위 단계를 하나씩 시도해보세요. 추가적으로 확인이 필요하면 어떤 상황인지 구체적으로 말씀해 주시면 도와드리겠습니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/developer/ontology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/ontology/</guid><description>&lt;h1 id="heading">&lt;/h1>
&lt;h3 id="온톨로지-ontology란">&lt;strong>온톨로지 (Ontology)란?&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>온톨로지&lt;/strong>는 특정 분야나 주제에 대해 &lt;strong>개념들&lt;/strong>과 그들 간의 관계를 체계적으로 정의한 &lt;strong>지식 모델&lt;/strong>입니다. 주로 &lt;strong>정보 과학&lt;/strong>과 &lt;strong>인공지능(AI)&lt;/strong> 분야에서 사용됩니다. 쉽게 말해, 온톨로지는 &lt;strong>&amp;lsquo;어떤 것들이 있고&amp;rsquo;&lt;/strong>, **&amp;lsquo;그것들이 서로 어떻게 연결되어 있는지&amp;rsquo;**를 정의하는 구조입니다.&lt;/p>
&lt;p>온톨로지는 &lt;strong>개념&lt;/strong>과 &lt;strong>속성&lt;/strong> 및 &lt;strong>관계&lt;/strong>를 정의하며, 이를 통해 &lt;strong>정보를 체계적으로 구조화&lt;/strong>할 수 있습니다. 온톨로지를 사용하면 데이터를 &lt;strong>정확하게 이해&lt;/strong>하고 &lt;strong>유의미한 상호작용&lt;/strong>을 할 수 있습니다.&lt;/p>
&lt;h4 id="온톨로지의-주요-구성-요소">온톨로지의 주요 구성 요소:&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>클래스 (Class)&lt;/strong>: 해당 분야에서 중요한 개념이나 카테고리 (예: &lt;code>사람&lt;/code>, &lt;code>기업&lt;/code>, &lt;code>제품&lt;/code> 등)&lt;/li>
&lt;li>&lt;strong>속성 (Property)&lt;/strong>: 클래스의 특성 (예: &lt;code>사람&lt;/code> 클래스의 속성은 &lt;code>이름&lt;/code>, &lt;code>나이&lt;/code> 등이 될 수 있음)&lt;/li>
&lt;li>&lt;strong>관계 (Relationship)&lt;/strong>: 클래스 간의 연결 (예: &lt;code>사람&lt;/code>은 &lt;code>기업&lt;/code>과 &lt;code>일한다&lt;/code> 관계로 연결될 수 있음)&lt;/li>
&lt;li>&lt;strong>인스턴스 (Instance)&lt;/strong>: 클래스의 구체적인 예 (예: &lt;code>홍길동&lt;/code>은 &lt;code>사람&lt;/code> 클래스의 인스턴스)&lt;/li>
&lt;/ul>
&lt;h3 id="팔란티어palantir에서의-온톨로지-활용">&lt;strong>팔란티어(Palantir)에서의 온톨로지 활용&lt;/strong>&lt;/h3>
&lt;p>팔란티어(Palantir)는 &lt;strong>데이터 분석&lt;/strong>, &lt;strong>빅 데이터 처리&lt;/strong>, &lt;strong>의사 결정 지원&lt;/strong>을 제공하는 플랫폼으로, 특히 복잡한 데이터 집합을 이해하고 활용하는 데 강력한 도구입니다. 팔란티어는 온톨로지를 활용하여 복잡한 데이터에서 유용한 정보를 추출하고, 관계를 명확히 하여 문제 해결을 돕습니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/developer/rust/rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/developer/rust/rust/</guid><description>&lt;h1 id="heading">&lt;/h1>
&lt;p>Rust에서 변수의 메모리 저장 위치는 **스택(stack)**과 **힙(heap)**으로 나뉩니다. 각 변수의 저장 위치는 그 &lt;strong>타입&lt;/strong>과 &lt;strong>사용 방식&lt;/strong>에 따라 결정됩니다.&lt;/p>
&lt;h3 id="스택stack">스택(Stack)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>특징&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>고정된 크기의 데이터를 저장합니다.&lt;/li>
&lt;li>함수 호출 시 할당되고, 함수 종료 시 자동으로 해제됩니다.&lt;/li>
&lt;li>메모리 할당과 해제가 빠릅니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>저장되는 데이터&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>정수형(&lt;code>i32&lt;/code>, &lt;code>u64&lt;/code> 등), 부동소수점형(&lt;code>f32&lt;/code>, &lt;code>f64&lt;/code>), 불리언(&lt;code>bool&lt;/code>), 문자(&lt;code>char&lt;/code>) 등 &lt;strong>크기가 컴파일 시에 결정되는 기본 타입&lt;/strong>.&lt;/li>
&lt;li>배열(&lt;code>[T; N]&lt;/code>), 튜플(&lt;code>(T1, T2, ...)&lt;/code>) 등 &lt;strong>고정 크기의 컬렉션 타입&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>예를 들어, 다음과 같은 코드는 스택에 데이터를 저장합니다:&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/k8s_docker/cfssl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/k8s_docker/cfssl/</guid><description>&lt;h1 id="설치">설치&lt;/h1>
&lt;p>WSL(Ubuntu)에서 &lt;code>cfssl&lt;/code> 및 &lt;code>cfssljson&lt;/code>을 설치하는 방법을 단계별로 설명하겠습니다.&lt;/p>
&lt;hr>
&lt;h2 id="내-작업">내 작업&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> cfssl_install&lt;span style="color:#f92672">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># # https://coffeewhale.com/kubernetes/authentication/x509/2020/05/02/auth01/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># wget -q --show-progress --https-only --timestamping \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/linux/cfssl \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/linux/cfssljson&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># chmod +x cfssl cfssljson&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># sudo mv cfssl cfssljson /usr/local/bin/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># https://gist.github.com/guoyoujin/376bda5323b1d718d8d582f2efa5a8e6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo curl -s -L -o /bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo curl -s -L -o /bin/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo curl -s -L -o /bin/cfssl-certinfo https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo chmod +x /bin/cfssl*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="1-cfssl-및-cfssljson-다운로드-및-설치">&lt;strong>1. cfssl 및 cfssljson 다운로드 및 설치&lt;/strong>&lt;/h2>
&lt;p>&lt;code>cfssl&lt;/code>과 &lt;code>cfssljson&lt;/code>은 &lt;code>cloudflare/cfssl&lt;/code> 프로젝트에서 제공하는 인증서 관리 도구입니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/k8s_docker/docker-registry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/k8s_docker/docker-registry/</guid><description>&lt;h1 id="get-image-list-from-the-docker-registry">Get image list from the docker registry&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export KIND_CREATE_CLUSTER&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>KIND_CREATE_CLUSTER&lt;span style="color:#66d9ef">:-&lt;/span>true&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ export KIND_CREATE_CLUSTER&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ KIND_CREATE_CLUSTER&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export KIND_NODE_IMAGE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>KIND_NODE_IMAGE&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;kindest/node:v1.25.2&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ export KIND_NODE_IMAGE&lt;span style="color:#f92672">=&lt;/span>kindest/node:v1.25.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ KIND_NODE_IMAGE&lt;span style="color:#f92672">=&lt;/span>kindest/node:v1.25.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export REGISTRY_IMAGE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>REGISTRY_IMAGE&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;docker.io/library/registry:2&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ export REGISTRY_IMAGE&lt;span style="color:#f92672">=&lt;/span>docker.io/library/registry:2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ REGISTRY_IMAGE&lt;span style="color:#f92672">=&lt;/span>docker.io/library/registry:2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export REGISTRY_NAME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>REGISTRY_NAME&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#39;kind-registry&amp;#39;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ export REGISTRY_NAME&lt;span style="color:#f92672">=&lt;/span>kind-registry
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ REGISTRY_NAME&lt;span style="color:#f92672">=&lt;/span>kind-registry
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export REGISTRY_PORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>REGISTRY_PORT&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#39;5000&amp;#39;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ export REGISTRY_PORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ REGISTRY_PORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>WSL Ubuntu에서 설정된 로컬 Registry에서 이미지 리스트를 출력하는 방법을 알려드리겠습니다.&lt;/p>
&lt;p>제공하신 환경 변수를 보니 &lt;code>kind-registry&lt;/code>라는 이름의 로컬 레지스트리가 포트 5000에서 실행 중인 것 같습니다. 이 레지스트리에 등록된 이미지 리스트를 출력하는 방법은 다음과 같습니다:&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/k8s_docker/k8s-network-debug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/k8s_docker/k8s-network-debug/</guid><description>&lt;h1 id="cnc-debug">CNC debug&lt;/h1>
&lt;h2 id="access-host">Access host&lt;/h2>
&lt;p>&lt;a href="https://aws-sig-ts-jonpark.aws.internal/">https://aws-sig-ts-jonpark.aws.internal/&lt;/a>&lt;/p>
&lt;h3 id="return">Return&lt;/h3>
&lt;p>This site can’t be reached
aws-sig-ts-jonpark.aws.internal refused to connect.
Try:&lt;/p>
&lt;p>Checking the connection
Checking the proxy and the firewall
ERR_CONNECTION_REFUSED&lt;/p>
&lt;h3 id="k9s--ingress--cnc-cim--describe">k9s &amp;gt; ingress &amp;gt; cnc-cim &amp;gt; Describe&lt;/h3>
&lt;h3 id="kubernetes-ingress-cnc-cim">Kubernetes Ingress: cnc-cim&lt;/h3>
&lt;h4 id="basic-information">Basic Information&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Name&lt;/strong>&lt;/td>
&lt;td>cnc-cim&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Namespace&lt;/strong>&lt;/td>
&lt;td>cnc&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Address&lt;/strong>&lt;/td>
&lt;td>10.96.104.21&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Default backend&lt;/strong>&lt;/td>
&lt;td>default-http-backend:80 (&amp;lt;error: endpoints &amp;ldquo;default-http-backend&amp;rdquo; not found&amp;gt;)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="tls-configuration">TLS Configuration&lt;/h4>
&lt;p>cnc-cim-tls-nginx terminates aws-sig-ts-jonpark.aws.internal&lt;/p>
&lt;h4 id="routing-rules">Routing Rules&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Host&lt;/th>
&lt;th>Path&lt;/th>
&lt;th>Backend&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>aws-sig-ts-jonpark.aws.internal&lt;/td>
&lt;td>/&lt;/td>
&lt;td>cnc-cim-cim:8443 (172.16.1.33:8443)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="annotations">Annotations&lt;/h4>
&lt;ul>
&lt;li>meta.helm.sh/release-name: cnc-cim&lt;/li>
&lt;li>meta.helm.sh/release-namespace: cnc&lt;/li>
&lt;li>nginx.ingress.kubernetes.io/backend-protocol: HTTPS&lt;/li>
&lt;/ul>
&lt;h4 id="events">Events&lt;/h4>
&lt;p>&amp;lt;none&amp;gt;&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/k8s_docker/kind-k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/k8s_docker/kind-k8s/</guid><description>&lt;h1 id="issue-1">issue 1&lt;/h1>
&lt;h2 id="error">error&lt;/h2>
&lt;p>현재 다른 cluster 에 있어서 발생하는 문제임&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>+ &lt;span style="color:#f92672">[[&lt;/span> true &lt;span style="color:#f92672">==&lt;/span> true &lt;span style="color:#f92672">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ CNC_INSTALL_MINIO&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>++ kubectl get nodes &lt;span style="color:#e6db74">&amp;#39;-o=jsonpath={.items[0].metadata.labels.pool-type}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ pool_type&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ &lt;span style="color:#e6db74">&amp;#39;[&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;!=&amp;#39;&lt;/span> cnc-custom-node-pool-label &lt;span style="color:#e6db74">&amp;#39;]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ kubectl label nodes --overwrite kind-control-plane pool-type&lt;span style="color:#f92672">=&lt;/span>cnc-custom-node-pool-label
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Error from server &lt;span style="color:#f92672">(&lt;/span>NotFound&lt;span style="color:#f92672">)&lt;/span>: nodes &lt;span style="color:#e6db74">&amp;#34;kind-control-plane&amp;#34;&lt;/span> not found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work/cnc-umbrella-chart-2025.3.maint/local-dev$ ^C
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work/cnc-umbrella-chart-20 &lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work/cnc-umbrella-chart-2025.3.maint/local-dev$ kubectl get nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS ROLES AGE VERSION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gke-jonpark-poc-clus-jonpark-poc-prim-6e8a38c0-nihf Ready &amp;lt;none&amp;gt; 8d v1.30.9-gke.1127000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gke-jonpark-poc-clus-jonpark-poc-prim-6e8a38c0-tbzg Ready &amp;lt;none&amp;gt; 8d v1.30.9-gke.1127000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fix">fix&lt;/h2>
&lt;hr>
&lt;h1 id="issue-2">issue #2&lt;/h1>
&lt;h2 id="error-1">error&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work$ kind get clusters
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work$ docker ps | grep kind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d14a3e645595 kindest/node:v1.25.2 &lt;span style="color:#e6db74">&amp;#34;/usr/local/bin/entr…&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> minutes ago Up &lt;span style="color:#ae81ff">8&lt;/span> minutes kind-worker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5b1fa9e58560 kindest/node:v1.25.2 &lt;span style="color:#e6db74">&amp;#34;/usr/local/bin/entr…&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> minutes ago Up &lt;span style="color:#ae81ff">8&lt;/span> minutes 0.0.0.0:80-&amp;gt;80/tcp, 0.0.0.0:443-&amp;gt;443/tcp, 0.0.0.0:9090-&amp;gt;9090/tcp, 127.0.0.1:33693-&amp;gt;6443/tcp, 0.0.0.0:18080-&amp;gt;8080/tcp kind-control-plane
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a6b81d3559cd kindest/node:v1.25.2 &lt;span style="color:#e6db74">&amp;#34;/usr/local/bin/entr…&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> minutes ago Up &lt;span style="color:#ae81ff">8&lt;/span> minutes kind-worker2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work$ kubectl cluster-info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>E0310 06:34:49.335293 &lt;span style="color:#ae81ff">1159663&lt;/span> memcache.go:265&lt;span style="color:#f92672">]&lt;/span> couldn&lt;span style="color:#e6db74">&amp;#39;t get current server API group list: Get &amp;#34;https://127.0.0.1:44491/api?timeout=32s&amp;#34;: dial tcp 127.0.0.1:44491: connect: connection refused
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">E0310 06:34:49.335525 1159663 memcache.go:265] couldn&amp;#39;&lt;/span>t get current server API group list: Get &lt;span style="color:#e6db74">&amp;#34;https://127.0.0.1:44491/api?timeout=32s&amp;#34;&lt;/span>: dial tcp 127.0.0.1:44491: connect: connection refused
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>E0310 06:34:49.336818 &lt;span style="color:#ae81ff">1159663&lt;/span> memcache.go:265&lt;span style="color:#f92672">]&lt;/span> couldn&lt;span style="color:#e6db74">&amp;#39;t get current server API group list: Get &amp;#34;https://127.0.0.1:44491/api?timeout=32s&amp;#34;: dial tcp 127.0.0.1:44491: connect: connection refused
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">E0310 06:34:49.337043 1159663 memcache.go:265] couldn&amp;#39;&lt;/span>t get current server API group list: Get &lt;span style="color:#e6db74">&amp;#34;https://127.0.0.1:44491/api?timeout=32s&amp;#34;&lt;/span>: dial tcp 127.0.0.1:44491: connect: connection refused
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>E0310 06:34:49.338289 &lt;span style="color:#ae81ff">1159663&lt;/span> memcache.go:265&lt;span style="color:#f92672">]&lt;/span> couldn&lt;span style="color:#e6db74">&amp;#39;t get current server API group list: Get &amp;#34;https://127.0.0.1:44491/api?timeout=32s&amp;#34;: dial tcp 127.0.0.1:44491: connect: connection refused
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">To further debug and diagnose cluster problems, use &amp;#39;&lt;/span>kubectl cluster-info dump&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The connection to the server 127.0.0.1:44491 was refused - did you specify the right host or port?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work$ kubectl cluster-info dump
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The connection to the server 127.0.0.1:44491 was refused - did you specify the right host or port?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work$ netstat -tulpn | grep &lt;span style="color:#ae81ff">44491&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>Not all processes could be identified, non-owned process info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> will not be shown, you would have to be root to see it all.&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> jonpark@aws-sig-ts-jonpark:~/workspace/jonpark-work$ kind get clusters
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fix-1">fix&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kind export kubeconfig --name kind
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="issue-2---doc">issue #2 - doc&lt;/h1>
&lt;p>kind 클러스터는 실행 중이지만, kubectl이 클러스터에 연결할 수 없는 상황입니다. 이는 일반적으로 kubeconfig 설정이 잘못되었거나 다른 포트를 가리키고 있는 경우에 발생합니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/sdlc/filename-convention/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/filename-convention/</guid><description>&lt;h1 id="_-와--">_ 와 -&lt;/h1>
&lt;p>Ubuntu(또는 Linux)에서 파일 이름에 &lt;code>_&lt;/code>(언더스코어)와 &lt;code>-&lt;/code>(하이픈)를 사용할 때, 어떤 것을 선택할지 고민할 수 있습니다. &lt;strong>가독성, 일관성, 그리고 명령줄 사용 편의성&lt;/strong>을 고려하여 다음과 같이 정리할 수 있습니다.&lt;/p>
&lt;hr>
&lt;h2 id="-_언더스코어-vs--하이픈-비교">&lt;strong>🔹 &lt;code>_&lt;/code>(언더스코어) vs &lt;code>-&lt;/code>(하이픈) 비교&lt;/strong>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>구분&lt;/strong>&lt;/th>
&lt;th>&lt;strong>언더스코어 (&lt;code>_&lt;/code>)&lt;/strong>&lt;/th>
&lt;th>&lt;strong>하이픈 (&lt;code>-&lt;/code>)&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>가독성&lt;/strong>&lt;/td>
&lt;td>일반적으로 더 눈에 띄고 가독성이 좋음&lt;/td>
&lt;td>단어를 구분할 때 직관적이나 길게 사용하면 가독성이 떨어질 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>터미널 사용 편의성&lt;/strong>&lt;/td>
&lt;td>자동완성(Tab)에서 문제가 없음&lt;/td>
&lt;td>&lt;code>cd&lt;/code>나 &lt;code>ls&lt;/code> 등에서 자동완성 시 &lt;code>_&lt;/code>보다 편리함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>스크립트 호환성&lt;/strong>&lt;/td>
&lt;td>변수명과 동일하게 사용 가능 (ex: &lt;code>my_file.txt&lt;/code>)&lt;/td>
&lt;td>일부 명령어에서 &lt;code>-&lt;/code>를 옵션과 혼동할 수 있음 (ex: &lt;code>rm -rf my-file&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>웹 URL 호환성&lt;/strong>&lt;/td>
&lt;td>웹 URL에서 잘 쓰이지 않음 (&lt;code>%5F&lt;/code>로 변환됨)&lt;/td>
&lt;td>URL에서도 표준적으로 사용됨 (&lt;code>my-file&lt;/code> 형태 유지)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>POSIX 규칙 준수&lt;/strong>&lt;/td>
&lt;td>POSIX 표준이 아님 (일부 시스템에서 비권장)&lt;/td>
&lt;td>POSIX 파일명 표준 준수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Unix/Linux 전통&lt;/strong>&lt;/td>
&lt;td>내부적으로 변수명처럼 쓰일 때 좋음 (ex: &lt;code>my_var_name&lt;/code>)&lt;/td>
&lt;td>Unix/Linux 파일 및 디렉터리명에서 더 많이 사용됨&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-추천-방법">&lt;strong>🔹 추천 방법&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>✅ &lt;strong>파일명에는 하이픈(&lt;code>-&lt;/code>)을 추천&lt;/strong>&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/sdlc/makefile-debug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/makefile-debug/</guid><description>&lt;h1 id="make-실행-시-환경-변수-추적-예제">make 실행 시 환경 변수 추적 예제&lt;/h1>
&lt;p>다음은 make 실행 시 환경 변수를 추적하는 다양한 방법에 대한 자세한 예제입니다:&lt;/p>
&lt;h2 id="1-makefile에서-환경-변수-출력하기">1. Makefile에서 환경 변수 출력하기&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-makefile" data-lang="makefile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 파일명: Makefile
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 기본 타겟
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">all&lt;/span>&lt;span style="color:#f92672">:&lt;/span> show-env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 환경 변수 표시 타겟
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">show-env&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;===== 현재 환경 변수 =====&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;HOME: &lt;/span>$$&lt;span style="color:#e6db74">{HOME}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;PATH: &lt;/span>$$&lt;span style="color:#e6db74">{PATH}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;USER: &lt;/span>$$&lt;span style="color:#e6db74">{USER}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;CUSTOM_VAR: &lt;/span>$$&lt;span style="color:#e6db74">{CUSTOM_VAR}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;==========================&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 특정 환경 변수만 사용하는 타겟
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">use-env&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;CUSTOM_VAR 값을 사용합니다: &lt;/span>$$&lt;span style="color:#e6db74">{CUSTOM_VAR}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @if &lt;span style="color:#f92672">[&lt;/span> -z &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$$&lt;span style="color:#e6db74">{CUSTOM_VAR}&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;경고: CUSTOM_VAR이 설정되지 않았습니다&amp;#34;&lt;/span>; &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 모든 환경 변수 출력
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">show-all-env&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;===== 모든 환경 변수 =====&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @env | sort
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @echo &lt;span style="color:#e6db74">&amp;#34;==========================&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>실행 방법:&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/sdlc/powershell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/powershell/</guid><description>&lt;h1 id="내-작업">내 작업&lt;/h1>
&lt;p>notepad $PROFILE.CurrentUserAllHosts&lt;/p>
&lt;h1 id="v1">v1&lt;/h1>
&lt;p>PowerShell 프로필 파일은 PowerShell 세션이 시작될 때 자동으로 로드되는 스크립트입니다. 두 파일의 차이점은 적용 범위에 있습니다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Profile.ps1&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>경로: &lt;code>C:\Users\RyanPark\OneDrive - Black Duck Software\Documents\WindowsPowerShell\profile.ps1&lt;/code>&lt;/li>
&lt;li>적용 범위: 시스템의 모든 사용자와 모든 PowerShell 호스트(콘솔, ISE 등)에 적용됩니다&lt;/li>
&lt;li>이 파일은 &amp;ldquo;AllUsersAllHosts&amp;rdquo; 프로필에 해당합니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Microsoft.PowerShell_profile.ps1&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>경로: &lt;code>C:\Users\RyanPark\OneDrive - Black Duck Software\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1&lt;/code>&lt;/li>
&lt;li>적용 범위: 현재 사용자(RyanPark)와 PowerShell 콘솔 호스트에만 적용됩니다&lt;/li>
&lt;li>이 파일은 &amp;ldquo;CurrentUserCurrentHost&amp;rdquo; 프로필에 해당합니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>주요 차이점:&lt;/p>
&lt;ul>
&lt;li>&lt;code>profile.ps1&lt;/code>은 더 일반적인 프로필로, 모든 PowerShell 환경에 적용됩니다&lt;/li>
&lt;li>&lt;code>Microsoft.PowerShell_profile.ps1&lt;/code>은 PowerShell 콘솔에서만 적용되며, Visual Studio Code의 PowerShell 터미널이나 PowerShell ISE에는 적용되지 않습니다&lt;/li>
&lt;/ul>
&lt;p>PowerShell에는 다음과 같은 4가지 프로필 범위가 있습니다:&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/sdlc/win-time-measure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/sdlc/win-time-measure/</guid><description>&lt;h1 id="걸린-시간-측정">걸린 시간 측정&lt;/h1>
&lt;p>Windows CMD 명령어를 실행할 때 걸리는 시간을 측정하는 방법은 몇 가지가 있습니다. PowerShell에서는 더 강력한 방법을 제공합니다:&lt;/p>
&lt;h2 id="powershell에서-명령어-실행-시간-측정하기">PowerShell에서 명령어 실행 시간 측정하기&lt;/h2>
&lt;h3 id="1-measure-command-사용하기">1. Measure-Command 사용하기&lt;/h3>
&lt;p>PowerShell의 &lt;code>Measure-Command&lt;/code> cmdlet을 사용하면 명령어 실행 시간을 정확하게 측정할 수 있습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Measure-Command { Get-ChildItem }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>이 명령어는 &lt;code>Get-ChildItem&lt;/code>(ls와 동일) 실행에 걸린 시간을 상세히 보여줍니다.&lt;/p>
&lt;h3 id="2-시작종료-시간-기록하기">2. 시작/종료 시간 기록하기&lt;/h3>
&lt;p>&lt;code>Stopwatch&lt;/code> 객체를 사용하여 시간을 측정할 수도 있습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>$stopwatch = [&lt;span style="color:#66d9ef">System.Diagnostics.Stopwatch&lt;/span>]::StartNew()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Get-ChildItem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$stopwatch.Stop()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$stopwatch.Elapsed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-cmd-명령어-실행-시간-측정하기">3. CMD 명령어 실행 시간 측정하기&lt;/h3>
&lt;p>CMD 명령어의 실행 시간을 측정하려면:&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/cnc/cnc-jonpark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/cnc/cnc-jonpark/</guid><description>&lt;h1 id="find-out-the-items-of-vpc_private_subnets">find out the items of vpc_private_subnets&lt;/h1>
&lt;h2 id="입력">입력&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> cluster_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;cnc-test-cluster&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cluster_region &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;ap-northeast-2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vpc_cidr_block &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;10.0.0.0/16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vpc_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;vpc-0ee6ce9b74a82d087&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vpc_nat_public_ips &lt;span style="color:#f92672">=&lt;/span> tolist&lt;span style="color:#f92672">([&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;3.35.204.211&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vpc_private_subnets &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;subnet-0329309bce8fe3cd7&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;subnet-0a3426c348f958ac0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vpc_public_subnets &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;subnet-0a042f89e148e823e&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;subnet-0035ab195d22e6cd0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the following &lt;code>sed&lt;/code> command to find out the items of &lt;code>vpc_private_subnets&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>sed -n &amp;#39;s/.*vpc_private_subnets = \[\(.*\)\].*/\1/p&amp;#39; &amp;lt;filename&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Replace &lt;code>&amp;lt;filename&amp;gt;&lt;/code> with the name of the file containing the above configuration. The &lt;code>sed&lt;/code> command will extract the contents of &lt;code>vpc_private_subnets&lt;/code> and print them out.&lt;/p>
&lt;p>Here&amp;rsquo;s an explanation of the command:&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/cnc/cnc-wsl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/cnc/cnc-wsl/</guid><description>&lt;h1 id="curl--k--vvv-httpsbd-82898local-실패">curl -k -vvv &lt;a href="https://bd-82898.local">https://bd-82898.local&lt;/a> 실패&lt;/h1>
&lt;h3 id="-문제-분석-curl--k--vvv-httpsbd-82898local-실패-ssl_error_syscall">&lt;strong>🔍 문제 분석: &lt;code>curl -k -vvv https://bd-82898.local&lt;/code> 실패 (SSL_ERROR_SYSCALL)&lt;/strong>&lt;/h3>
&lt;h4 id="-문제-요약">&lt;strong>🚨 문제 요약&lt;/strong>&lt;/h4>
&lt;ol>
&lt;li>&lt;code>curl -k -vvv https://bd-82898.local&lt;/code> 실행 시 &lt;strong>TLS 핸드셰이크 실패&lt;/strong> (&lt;code>SSL_ERROR_SYSCALL&lt;/code>).&lt;/li>
&lt;li>&lt;code>curl&lt;/code> 로그:
&lt;pre tabindex="0">&lt;code>* OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to bd-82898.local:443
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;code>bd-82898.local&lt;/code>의 IP 주소는 &lt;code>127.0.0.1&lt;/code>로 해석됨 (로컬 호스트에서 실행 중).&lt;/li>
&lt;li>&lt;code>kubectl&lt;/code> 로그에서 &lt;strong>Ingress Nginx 컨트롤러가 정상적으로 실행되지 않음&lt;/strong> (&lt;code>Deployment is not ready: 0 out of 1 expected pods are ready&lt;/code>).&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="-원인-분석">&lt;strong>🔎 원인 분석&lt;/strong>&lt;/h2>
&lt;h3 id="1-ingress-nginx가-정상적으로-실행되지-않음">&lt;strong>1️⃣ Ingress Nginx가 정상적으로 실행되지 않음&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>로그에서 Ingress Nginx 컨트롤러가 정상적으로 기동되지 않았다는 메시지가 반복됨:
&lt;pre tabindex="0">&lt;code>Deployment is not ready: ingress-nginx/my-nginx-ingress-nginx-controller. 0 out of 1 expected pods are ready
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;code>kubectl get pods -n ingress-nginx&lt;/code> 명령어를 실행하여 Ingress Controller Pod 상태를 확인해야 함.&lt;/li>
&lt;/ul>
&lt;p>✅ &lt;strong>해결 방법&lt;/strong>&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/coverity/cov-triage-store/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/cov-triage-store/</guid><description>&lt;h1 id="move-triage-store-to-other">Move Triage Store to Other&lt;/h1>
&lt;h2 id="my-work">My Work&lt;/h2>
&lt;p>test-cpp-10 stream의 triage store를 ts-test 에서 ts-test-new 로 변경한 경우 triage data 는 모두 사라진다.&lt;/p>
&lt;p>export 한 후 새로운 triage store 이름으로 json 파일을 변경후 해당 stream을 새 triage store를 가지도록 하면 문제 해결.&lt;/p>
&lt;p>&lt;a href="https://documentation.blackduck.com/bundle/coverity-docs/page/coverity-platform/topics/managing_triage_stores.html">https://documentation.blackduck.com/bundle/coverity-docs/page/coverity-platform/topics/managing_triage_stores.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://documentation.blackduck.com/bundle/coverity-docs/page/coverity-platform/topics/exported_triage_store_json_elements.html">https://documentation.blackduck.com/bundle/coverity-docs/page/coverity-platform/topics/exported_triage_store_json_elements.html&lt;/a>&lt;/p>
&lt;p>==== Test&lt;/p>
&lt;ul>
&lt;li>test-cpp-10 stream has ts-test-cpp triage store&lt;/li>
&lt;/ul>
&lt;p>&lt;img alt="alt text" loading="lazy" src=".md/cov-triage-store/image-11.png">
&lt;img alt="alt text" loading="lazy" src=".md/cov-triage-store/image-10.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Create ts-test-new&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Export ts-test-cpp triage store&lt;/p>
&lt;/li>
&lt;li>
&lt;p>test-cpp-10 stream has ts-test-new triage store&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img alt="alt text" loading="lazy" src=".md/cov-triage-store/image-12.png">&lt;/p>
&lt;ul>
&lt;li>All triage data is reset&lt;/li>
&lt;/ul>
&lt;p>&lt;img alt="alt text" loading="lazy" src=".md/cov-triage-store/image-13.png">&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/coverity/g++/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/g++/</guid><description>&lt;h1 id="g--preprocessed">g++ : preprocessed&lt;/h1>
&lt;h3 id="c에서-preprocessed-file-생성-방법">&lt;strong>C++에서 Preprocessed File 생성 방법&lt;/strong>&lt;/h3>
&lt;p>C++ 코드를 전처리(preprocessing) 단계까지 실행하면, 컴파일러는 &lt;strong>헤더 파일 확장&lt;/strong>, 매크로 대체, 조건부 컴파일 처리 등의 작업을 수행한 결과를 담은 **전처리된 파일(preprocessed file)**을 생성합니다.&lt;/p>
&lt;hr>
&lt;h3 id="1-전처리-파일-생성">1. &lt;strong>전처리 파일 생성&lt;/strong>&lt;/h3>
&lt;h4 id="1-gcc-또는-clang-사용">(1) GCC 또는 Clang 사용&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>g++ -E source.cpp -o preprocessed.cpp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>-E&lt;/code>: 컴파일러가 전처리만 수행하고 결과를 출력합니다.&lt;/li>
&lt;li>&lt;code>source.cpp&lt;/code>: 전처리할 소스 파일.&lt;/li>
&lt;li>&lt;code>-o preprocessed.cpp&lt;/code>: 출력 파일 이름 지정.&lt;/li>
&lt;/ul>
&lt;h4 id="2-msvc-microsoft-c-compiler-사용">(2) MSVC (Microsoft C++ Compiler) 사용&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cmd" data-lang="cmd">&lt;span style="display:flex;">&lt;span>cl /P source.cpp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>/P&lt;/code>: 전처리된 출력 파일 생성.&lt;/li>
&lt;li>&lt;code>source.cpp&lt;/code>: 전처리할 소스 파일.&lt;/li>
&lt;li>결과 파일은 &lt;code>source.i&lt;/code>로 저장됩니다.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="2-전처리-파일의-내용">2. &lt;strong>전처리 파일의 내용&lt;/strong>&lt;/h3>
&lt;p>전처리 파일은 컴파일러가 &lt;strong>모든 헤더 파일 확장&lt;/strong> 및 &lt;strong>매크로 치환&lt;/strong>을 완료한 코드입니다. 이를 통해 컴파일러는 소스 코드를 직접 컴파일할 준비를 합니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/coverity/msvc-clangcl-repro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/msvc-clangcl-repro/</guid><description>&lt;h1 id="내-작업">내 작업&lt;/h1>
&lt;h1 id="v1">v1&lt;/h1>
&lt;p>Visual Studio에서 clang-cl.exe 컴파일러를 사용한 샘플 코드를 작성해 드리겠습니다. 제공해주신 로그를 살펴보니 nlohmann::json 라이브러리를 사용하는 C++ 코드에서 컴파일 오류가 발생했습니다. 특히 C++20 개념(concepts)과 관련된 오류가 보입니다.&lt;/p>
&lt;p>Visual Studio에서 clang-cl.exe 컴파일러를 사용하는 샘플 프로젝트를 만들었습니다. 제공해주신 로그를 분석한 결과, nlohmann::json 라이브러리와 C++20 기능을 사용할 때 발생하는 문제를 해결하는 코드를 작성했습니다.&lt;/p>
&lt;h2 id="주요-구성-요소">주요 구성 요소&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>샘플 코드 (main.cpp)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>API 스펙을 정의하고 관리하는 클래스&lt;/li>
&lt;li>nlohmann::json을 사용한 JSON 직렬화/역직렬화 기능&lt;/li>
&lt;li>컴파일러 오류를 피하기 위한 적절한 C++ 문법 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Visual Studio Clang-cl 설정 방법&lt;/strong>&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/coverity/sast/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/sast/</guid><description>&lt;h1 id="코드-품질을-향상시키고-보안-결함을-찾기-위해-몇-가지-일반적인-조언">코드 품질을 향상시키고 보안 결함을 찾기 위해 몇 가지 일반적인 조언&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>정적 분석 도구 사용&lt;/strong>: 현재 많은 정적 분석 도구가 개발자에게 코드 품질 및 보안 측면에서의 문제를 식별해주고 권장 사항을 제시합니다. Clang Static Analyzer, cppcheck, PVS-Studio 등이 있습니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>코드 리뷰&lt;/strong>: 동료 개발자 또는 커뮤니티의 도움을 받아 코드 리뷰를 수행하세요. 다른 사람의 시각은 새로운 인사이트를 제공할 수 있습니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>보안 가이드라인 준수&lt;/strong>: 프로그래밍 언어 및 프레임워크의 보안 가이드라인을 준수하고, 사용 중인 함수 및 라이브러리의 보안 취약점에 대해 인식하세요.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/ec2-setting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/ec2-setting/</guid><description>&lt;h1 id="to-create-an-ec2-instance">To create an EC2 instance&lt;/h1>
&lt;p>To create an EC2 instance for machine learning using a GPU, follow these steps:&lt;/p>
&lt;h3 id="1-sign-in-to-aws-console">1. &lt;strong>Sign in to AWS Console&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>Go to the &lt;a href="https://aws.amazon.com/console/">AWS Management Console&lt;/a>, and sign in with your credentials.&lt;/li>
&lt;/ul>
&lt;h3 id="2-open-ec2-dashboard">2. &lt;strong>Open EC2 Dashboard&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>From the AWS Management Console, type &lt;strong>EC2&lt;/strong> in the search bar and click on &lt;strong>EC2&lt;/strong> to open the EC2 dashboard.&lt;/li>
&lt;/ul>
&lt;h3 id="3-launch-an-ec2-instance">3. &lt;strong>Launch an EC2 Instance&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>In the EC2 Dashboard, click &lt;strong>Launch Instance&lt;/strong>.&lt;/li>
&lt;li>Give your instance a name, for example, &amp;ldquo;ML-GPU-Instance&amp;rdquo;.&lt;/li>
&lt;/ul>
&lt;h3 id="4-select-an-amazon-machine-image-ami">4. &lt;strong>Select an Amazon Machine Image (AMI)&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>AWS provides deep learning AMIs that come with machine learning libraries pre-installed.&lt;/li>
&lt;li>In the &lt;strong>Choose AMI&lt;/strong> section, search for “&lt;strong>Deep Learning AMI&lt;/strong>” and select a version that is compatible with your needs (e.g., Ubuntu or Amazon Linux).&lt;/li>
&lt;li>These AMIs come pre-installed with frameworks like TensorFlow, PyTorch, and MXNet.&lt;/li>
&lt;/ul>
&lt;h3 id="5-choose-an-instance-type">5. &lt;strong>Choose an Instance Type&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>Select an instance type that has a GPU.&lt;/li>
&lt;li>&lt;strong>P-Series (e.g., p2.xlarge, p3.xlarge)&lt;/strong>: These instances are optimized for machine learning and provide NVIDIA GPUs.&lt;/li>
&lt;li>&lt;strong>G-Series (e.g., g4dn.xlarge)&lt;/strong>: These instances are also suitable for ML tasks and offer GPUs with a better price-performance ratio.&lt;/li>
&lt;li>If you&amp;rsquo;re starting with lighter tasks, the &lt;strong>g4dn.xlarge&lt;/strong> instance is a good choice. For more intense workloads, consider the &lt;strong>p3.2xlarge&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3 id="6-configure-instance-details">6. &lt;strong>Configure Instance Details&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>Configure the instance as per your requirement. Usually, the defaults work fine for individual or smaller-scale experiments.&lt;/li>
&lt;li>If needed, you can add more details such as VPC, subnet, and Auto Scaling options.&lt;/li>
&lt;/ul>
&lt;h3 id="7-add-storage">7. &lt;strong>Add Storage&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>By default, AWS allocates a root volume, but for machine learning workloads, you might need more storage for datasets.&lt;/li>
&lt;li>Increase the storage size (e.g., 100 GB or more) if you&amp;rsquo;re working with large datasets.&lt;/li>
&lt;li>Ensure that the storage type is SSD (gp2 or gp3), which provides better performance.&lt;/li>
&lt;/ul>
&lt;h3 id="8-configure-security-group">8. &lt;strong>Configure Security Group&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>Create or select a security group to allow SSH access.&lt;/li>
&lt;li>Open port &lt;strong>22&lt;/strong> for SSH if you want to connect to the instance.&lt;/li>
&lt;li>If you plan to use Jupyter Notebooks on the instance, you will also need to open port &lt;strong>8888&lt;/strong> for HTTP access.&lt;/li>
&lt;/ul>
&lt;h3 id="9-launch-the-instance">9. &lt;strong>Launch the Instance&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>Review your configuration and click on &lt;strong>Launch&lt;/strong>.&lt;/li>
&lt;li>AWS will prompt you to select a key pair. Create a new key pair if you don&amp;rsquo;t have one, and download it (this is required to SSH into your instance).&lt;/li>
&lt;li>Click &lt;strong>Launch Instances&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3 id="10-connect-to-your-ec2-instance">10. &lt;strong>Connect to Your EC2 Instance&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>After launching the instance, go to the &lt;strong>Instances&lt;/strong> page, find your instance, and click &lt;strong>Connect&lt;/strong>.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/linux-utils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/linux-utils/</guid><description>&lt;h1 id="delete-all-directories">delete all directories&lt;/h1>
&lt;p>To &lt;strong>delete all directories&lt;/strong> named &lt;code>.terraform&lt;/code> found using &lt;code>find . -type d -name .terraform&lt;/code>, you can use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>find . -type d -name .terraform -exec rm -rf &lt;span style="color:#f92672">{}&lt;/span> +
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="explanation">&lt;strong>Explanation:&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;code>find .&lt;/code> – Start searching from the current directory (&lt;code>.&lt;/code>).&lt;/li>
&lt;li>&lt;code>-type d&lt;/code> – Search for directories only.&lt;/li>
&lt;li>&lt;code>-name .terraform&lt;/code> – Match directories with the name &lt;code>.terraform&lt;/code>.&lt;/li>
&lt;li>&lt;code>-exec&lt;/code> – Execute a command on the found results.&lt;/li>
&lt;li>&lt;code>rm -rf {}&lt;/code> – Remove the found directories and their contents recursively.
&lt;ul>
&lt;li>&lt;code>r&lt;/code> – Recursive deletion.&lt;/li>
&lt;li>&lt;code>f&lt;/code> – Force deletion without prompting for confirmation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>+&lt;/code> – Optimizes the deletion by passing multiple directories at once to &lt;code>rm&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="important-notes">&lt;strong>Important Notes:&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Backup&lt;/strong>: Double-check that you want to delete these directories, as this command &lt;strong>cannot be undone&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Dry-run (Optional)&lt;/strong>: To see what will be deleted without actually deleting, run:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>find . -type d -name .terraform
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>This will list all &lt;code>.terraform&lt;/code> directories.&lt;/li>
&lt;/ol>
&lt;p>Let me know if you&amp;rsquo;d like additional safety measures or scripts! 😊&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/outlook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/outlook/</guid><description>&lt;h1 id="find-and-replace">Find and Replace&lt;/h1>
&lt;p>Outlook 메시지에서 &lt;strong>Find and Replace&lt;/strong> 기능을 사용하려면 아래 단계를 따르세요. 이 기능은 일반적으로 &lt;strong>작성 중인 메시지&lt;/strong>에서 작동하며, 이미 보낸 메시지나 받은 메시지에는 적용되지 않습니다.&lt;/p>
&lt;hr>
&lt;h3 id="outlook에서-find-and-replace-사용하기-windows-기준">&lt;strong>Outlook에서 Find and Replace 사용하기 (Windows 기준)&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>새 이메일 작성&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Outlook에서 새 메시지를 작성하거나 기존 메시지 초안을 엽니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Find (찾기) 열기&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>메시지 본문에서 &lt;strong>Ctrl + F&lt;/strong>를 누르면 &amp;ldquo;이메일 전달&amp;quot;이 실행되므로, &amp;ldquo;찾기&amp;quot;를 열려면:
&lt;ul>
&lt;li>메뉴에서 &lt;strong>홈&lt;/strong> 탭 또는 &lt;strong>메시지&lt;/strong> 탭을 클릭합니다.&lt;/li>
&lt;li>오른쪽 상단의 돋보기 모양(찾기)을 클릭하거나, 키보드 단축키 &lt;strong>Ctrl + H&lt;/strong>를 누릅니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Find and Replace 창 열기&lt;/strong>&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/performance-self-assessment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/performance-self-assessment/</guid><description>&lt;h1 id="performance-self-assessment">Performance Self Assessment&lt;/h1>
&lt;p>Below is a revised English version of your self-assessment. I have elevated the language and tone so it reflects a more impactful contribution and a higher level of professionalism.&lt;/p>
&lt;hr>
&lt;h3 id="1-what-are-1-2-examples-of-how-you-have-impacted-the-success-of-your-teamdepartmentorganization-over-fiscal-year-2024">1. What are 1-2 examples of how you have impacted the success of your team/department/organization over fiscal year 2024?&lt;/h3>
&lt;p>&lt;strong>• Comprehensive Support for SRM Cases in APnJ&lt;/strong>&lt;br>
I took sole responsibility for every SRM case opened in the APnJ region. Despite limited team resources, I successfully provided support for this new product (SRM), ensuring seamless operations and achieving cost savings from a resource management perspective. By efficiently managing these cases on my own, I helped the team meet critical support demands while minimizing additional staffing expenses.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/srm/srm-logback/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/srm/srm-logback/</guid><description>&lt;h1 id="obfuscated-장단점">Obfuscated 장단점&lt;/h1>
&lt;h3 id="장점">&lt;strong>장점&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 민감한 클래스나 패키지 이름을 숨겨 시스템 구조 노출 방지.&lt;/li>
&lt;li>&lt;strong>외부 노출 방지&lt;/strong>: 로그에서 내부 구현 세부사항 은닉.&lt;/li>
&lt;/ol>
&lt;h3 id="단점">&lt;strong>단점&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>가독성 저하&lt;/strong>: 디버깅과 문제 해결이 복잡해짐.&lt;/li>
&lt;li>&lt;strong>유지보수 부담&lt;/strong>: 난독화된 이름 관리 및 매핑 필요.&lt;/li>
&lt;/ol>
&lt;h3 id="결론">&lt;strong>결론&lt;/strong>&lt;/h3>
&lt;p>보안이 중요한 경우 유용하지만, 디버깅이 어렵고 관리가 복잡해질 수 있어 상황에 맞게 사용해야 합니다.&lt;/p>
&lt;h1 id="obfuscated난독화된-이름을-사용">Obfuscated(난독화된) 이름을 사용&lt;/h1>
&lt;p>Akka 프레임워크와 Logback을 사용하는 프로그램에서 &lt;code>logback.xml&lt;/code>에 Obfuscated(난독화된) 이름을 사용하는 것은 특정 시나리오에서 유용하거나 부정적인 영향을 미칠 수 있습니다. 아래는 주요 &lt;strong>장점&lt;/strong>과 &lt;strong>단점&lt;/strong>을 정리한 내용입니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/srm/srm-mariadb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/srm/srm-mariadb/</guid><description>&lt;h1 id="database-크기가-중가하는지-체크하는-스크립트">database 크기가 중가하는지 체크하는 스크립트&lt;/h1>
&lt;p>MySQL에서 데이터베이스 크기를 주기적으로 확인하고 증가 여부를 체크하는 스크립트를 작성하려면, 데이터베이스의 크기를 측정하여 로그 파일에 기록하거나 다른 방식으로 저장해야 합니다. 아래는 MySQL에서 데이터베이스 크기를 확인하는 스크립트 예제입니다.&lt;/p>
&lt;h3 id="1-mysql에서-데이터베이스-크기-조회">1. MySQL에서 데이터베이스 크기 조회&lt;/h3>
&lt;p>MySQL에서 특정 데이터베이스의 크기를 확인하려면 다음 SQL 쿼리를 사용할 수 있습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> table_schema &lt;span style="color:#66d9ef">AS&lt;/span> &lt;span style="color:#f92672">`&lt;/span>&lt;span style="color:#66d9ef">Database&lt;/span>&lt;span style="color:#f92672">`&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ROUND(&lt;span style="color:#66d9ef">SUM&lt;/span>(data_length &lt;span style="color:#f92672">+&lt;/span> index_length) &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">1024&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">1024&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">AS&lt;/span> &lt;span style="color:#f92672">`&lt;/span>&lt;span style="color:#66d9ef">Size&lt;/span> (MB)&lt;span style="color:#f92672">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span> information_schema.tables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WHERE&lt;/span> table_schema &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;your_database_name&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">GROUP&lt;/span> &lt;span style="color:#66d9ef">BY&lt;/span> table_schema;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>여기서 &lt;code>'your_database_name'&lt;/code>을 모니터링하고 싶은 데이터베이스 이름으로 변경하세요.&lt;/p>
&lt;h3 id="2-bash-스크립트-예제">2. Bash 스크립트 예제&lt;/h3>
&lt;p>아래는 Linux 환경에서 데이터베이스 크기를 주기적으로 체크하여 로그 파일에 기록하는 Bash 스크립트 예제입니다:&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/srm/trouble-shooting-call/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/srm/trouble-shooting-call/</guid><description>&lt;p>WEBVTT&lt;/p>
&lt;p>9f30d60e-e160-4571-80eb-7a69413b5cb2/13-0
00:00:06.037 &amp;ndash;&amp;gt; 00:00:06.677
&lt;!-- raw HTML omitted -->Hi everyone.&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>9f30d60e-e160-4571-80eb-7a69413b5cb2/16-0
00:00:07.987 &amp;ndash;&amp;gt; 00:00:09.147
&lt;!-- raw HTML omitted -->Oh yeah. Hi.&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>9f30d60e-e160-4571-80eb-7a69413b5cb2/33-0
00:00:13.817 &amp;ndash;&amp;gt; 00:00:19.153
&lt;!-- raw HTML omitted -->And yeah, the, you know,
last May we are asking some additional 2&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>9f30d60e-e160-4571-80eb-7a69413b5cb2/33-1
00:00:19.153 &amp;ndash;&amp;gt; 00:00:21.417
&lt;!-- raw HTML omitted -->test auditional work around.&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/technical-support-job/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/technical-support-job/</guid><description>&lt;h1 id="기술지원-엔지니어가-일을-잘-하려면">기술지원 엔지니어가 일을 잘 하려면&lt;/h1>
&lt;p>기술지원 엔지니어가 일을 잘 하려면 몇 가지 핵심 역량과 태도가 필요합니다. 다음은 이를 위한 중요한 요소들입니다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>기술적 전문성&lt;/strong>: 기술지원 엔지니어는 다양한 문제를 해결할 수 있는 깊이 있는 기술 지식을 가져야 합니다. 지속적인 학습을 통해 최신 기술 트렌드와 관련 도구에 대해 이해하고 있어야 합니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>문제 해결 능력&lt;/strong>: 고객이 겪는 문제를 빠르고 효과적으로 분석하고 해결할 수 있어야 합니다. 논리적 사고와 창의적인 접근 방식을 통해 다양한 상황에서 최선의 솔루션을 제공하는 것이 중요합니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/windows-setting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/windows-setting/</guid><description>&lt;h1 id="sshfs가-인식되지-않는다는-오류">sshfs가 인식되지 않는다는 오류&lt;/h1>
&lt;p>&lt;code>sshfs&lt;/code>가 인식되지 않는다는 오류가 발생한 이유는 &lt;code>sshfs-win&lt;/code>이 설치되지 않았거나 &lt;code>sshfs&lt;/code> 명령어가 PowerShell에서 인식되지 않기 때문입니다.&lt;/p>
&lt;h3 id="해결-방법">해결 방법:&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>&lt;code>sshfs-win&lt;/code> 설치 확인&lt;/strong>&lt;br>
&lt;code>sshfs&lt;/code>를 사용하려면 &lt;code>WinFsp&lt;/code>와 &lt;code>SSHFS-Win&lt;/code>이 설치되어 있어야 합니다.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/winfsp/winfsp/releases">WinFsp 다운로드&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/billziss-gh/sshfs-win/releases">SSHFS-Win 다운로드&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>설치 후, PowerShell을 다시 실행하고 아래 명령어로 &lt;code>sshfs&lt;/code>가 인식되는지 확인하세요:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>sshfs --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>PowerShell에서 &lt;code>sshfs&lt;/code> 실행 가능하도록 경로 설정&lt;/strong>&lt;br>
&lt;code>sshfs.exe&lt;/code>가 &lt;code>C:\Program Files\SSHFS-Win\bin&lt;/code>에 위치해 있다면, 이를 &lt;code>PATH&lt;/code>에 추가해야 합니다.&lt;br>
PowerShell에서 다음 명령어를 실행하세요:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>$env:Path += &lt;span style="color:#e6db74">&amp;#34;;C:\Program Files\SSHFS-Win\bin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>수정된 스크립트&lt;/strong>&lt;br>
위 방법이 적용된 후, &lt;code>Mount-JonparkDrive&lt;/code> 함수를 수정하여 정상적으로 실행되도록 변경했습니다.&lt;/p></description></item><item><title/><link>https://jongyongpark.github.io/posts/technical-support/wsl-setting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/wsl-setting/</guid><description>&lt;h1 id="윈도우에서-wslwindows-subsystem-for-linux로-파일을-복사하는-방법">윈도우에서 WSL(Windows Subsystem for Linux)로 파일을 복사하는 방법&lt;/h1>
&lt;p>윈도우에서 WSL(Windows Subsystem for Linux)로 파일을 복사하는 방법에는 여러 가지가 있습니다. 아래에 대표적인 방법들을 단계별로 설명드리겠습니다.&lt;/p>
&lt;h3 id="1-파일-탐색기를-이용하는-방법">1. 파일 탐색기를 이용하는 방법&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>WSL 파일 시스템 접근하기:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>파일 탐색기를 열고 주소 표시줄에 &lt;code>\\wsl$\&lt;/code>을 입력한 후 Enter 키를 누릅니다.&lt;/li>
&lt;li>설치된 WSL 배포판 목록이 나타납니다. 예를 들어, &lt;code>Ubuntu&lt;/code>를 선택합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>파일 복사:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>복사하고자 하는 윈도우 파일을 선택하고 마우스 오른쪽 버튼을 클릭하여 &amp;ldquo;복사&amp;quot;를 선택합니다.&lt;/li>
&lt;li>WSL 배포판 내 원하는 디렉토리로 이동한 후 마우스 오른쪽 버튼을 클릭하여 &amp;ldquo;붙여넣기&amp;quot;를 선택합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="2-wsl-명령어를-이용하는-방법">2. WSL 명령어를 이용하는 방법&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>WSL 터미널 열기:&lt;/strong>&lt;/p></description></item></channel></rss>