<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Coverity on RyanLabs</title><link>https://jongyongpark.github.io/tags/coverity/</link><description>Recent content in Coverity on RyanLabs</description><generator>Hugo -- 0.142.0</generator><language>ko</language><lastBuildDate>Tue, 04 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jongyongpark.github.io/tags/coverity/index.xml" rel="self" type="application/rss+xml"/><item><title>Gcc Visibility</title><link>https://jongyongpark.github.io/posts/technical-support/coverity/cov-gcc-visibility/</link><pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/cov-gcc-visibility/</guid><description>&lt;h1 id="gcc-visibility">Gcc Visibility&lt;/h1>
&lt;p>전처리된 파일에서 보이는 &lt;code>basic_string&lt;/code> 함수의 속성과 컴파일러 옵션이 CIM 소스 창에서 이 함수들이 보이지 않는 이유에 대해 자세히 설명해 드리겠습니다.&lt;/p>
&lt;h2 id="가시성-속성-상세-설명">가시성 속성 상세 설명&lt;/h2>
&lt;p>다음 코드 라인을 살펴보겠습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">inline&lt;/span> __attribute__ ((__visibility__(&lt;span style="color:#e6db74">&amp;#34;hidden&amp;#34;&lt;/span>))) __attribute__ ((__exclude_from_explicit_instantiation__))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>이것은 함수에 두 가지 중요한 GCC/Clang 속성을 적용하고 있습니다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code>__attribute__ ((__visibility__(&amp;quot;hidden&amp;quot;)))&lt;/code> - 이 속성은 컴파일러에게 함수에 &amp;ldquo;hidden&amp;rdquo; 가시성을 부여하도록 지시합니다:&lt;/p>
&lt;ul>
&lt;li>이 심볼은 공유 라이브러리/실행 파일에서 내보내지지 않습니다&lt;/li>
&lt;li>다른 모듈에서 동적 링크를 통해 접근할 수 없습니다&lt;/li>
&lt;li>정의된 컴파일 단위나 라이브러리 내에서만 접근 가능합니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>__attribute__ ((__exclude_from_explicit_instantiation__))&lt;/code> - 이 속성은 컴파일러에게 이 함수를 어떤 명시적 템플릿 인스턴스화에도 포함시키지 말라고 지시합니다. 이는 코드 크기를 줄이고 중복 정의를 방지하는 데 도움이 됩니다.&lt;/p></description></item><item><title>SRM Coverity Tool Connector Issues</title><link>https://jongyongpark.github.io/posts/technical-support/srm/srm-coverity-tool-connector/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/srm/srm-coverity-tool-connector/</guid><description>&lt;h1 id="an-unexpected-error-occurred-while-validating-the-connection">An unexpected error occurred while validating the connection&lt;/h1>
&lt;p>01207318&lt;/p>
&lt;h3 id="-문제-요약-및-해결-방법">&lt;strong>🔍 문제 요약 및 해결 방법&lt;/strong>&lt;/h3>
&lt;h4 id="-문제-요약">✅ &lt;strong>문제 요약&lt;/strong>&lt;/h4>
&lt;p>고객이 **Coverity(HTTP, 8080 포트)**에 대한 툴 커넥터 설정 중 &lt;strong>&amp;ldquo;An unexpected error occurred while validating the connection&amp;rdquo;&lt;/strong> 오류가 발생했다고 보고함.&lt;br>
로그를 확인한 결과, 다음과 같은 문제가 발생함:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>오류 메시지:&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>ERROR - Creating a new NewHttpClient instance failed with: Response validation for [Coverity Session Cookie] encountered 1 error:
1. Expected a [COVJSESSIONID-build] cookie in the response, but it was missing.
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Coverity 서버의 응답에서 &lt;strong>&lt;code>COVJSESSIONID-build&lt;/code> 세션 쿠키가 누락됨&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>고객 확인 사항:&lt;/strong>&lt;/p></description></item><item><title>Coverity API SSL Issue</title><link>https://jongyongpark.github.io/posts/technical-support/coverity/cov-api-ssl/</link><pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/cov-api-ssl/</guid><description>&lt;h1 id="blackduck-api-호출-시-발생하는-ssl-인증서-문제를-해결하는-java-코드---disable-ssl">Blackduck API 호출 시 발생하는 SSL 인증서 문제를 해결하는 Java 코드 - disable SSL&lt;/h1>
&lt;p>Blackduck API 호출 시 발생하는 SSL 인증서 문제를 해결하는 Java 코드를 작성해드리겠습니다:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> javax.net.ssl.*;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.io.*;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.net.HttpURLConnection;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.net.URL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.security.cert.X509Certificate;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.nio.charset.StandardCharsets;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BlackDuckApiClient&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">disableSSLVerification&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TrustManager&lt;span style="color:#f92672">[]&lt;/span> trustAllCerts &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TrustManager&lt;span style="color:#f92672">[]&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> X509TrustManager() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> X509Certificate&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">getAcceptedIssuers&lt;/span>() { &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">checkClientTrusted&lt;/span>(X509Certificate&lt;span style="color:#f92672">[]&lt;/span> certs, String authType) { }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">checkServerTrusted&lt;/span>(X509Certificate&lt;span style="color:#f92672">[]&lt;/span> certs, String authType) { }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SSLContext sc &lt;span style="color:#f92672">=&lt;/span> SSLContext.&lt;span style="color:#a6e22e">getInstance&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SSL&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sc.&lt;span style="color:#a6e22e">init&lt;/span>(&lt;span style="color:#66d9ef">null&lt;/span>, trustAllCerts, &lt;span style="color:#66d9ef">new&lt;/span> java.&lt;span style="color:#a6e22e">security&lt;/span>.&lt;span style="color:#a6e22e">SecureRandom&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpsURLConnection.&lt;span style="color:#a6e22e">setDefaultSSLSocketFactory&lt;/span>(sc.&lt;span style="color:#a6e22e">getSocketFactory&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HostnameVerifier allHostsValid &lt;span style="color:#f92672">=&lt;/span> (hostname, session) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpsURLConnection.&lt;span style="color:#a6e22e">setDefaultHostnameVerifier&lt;/span>(allHostsValid);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String &lt;span style="color:#a6e22e">authenticate&lt;/span>(String baseUrl, String username, String password) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> URL url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL(baseUrl &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/api/tokens/authenticate&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpURLConnection conn &lt;span style="color:#f92672">=&lt;/span> (HttpURLConnection) url.&lt;span style="color:#a6e22e">openConnection&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 요청 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setRequestMethod&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;POST&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setRequestProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Accept&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;application/vnd.blackducksoftware.user-4+json&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setRequestProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Content-Type&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;application/json&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Basic Auth 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String auth &lt;span style="color:#f92672">=&lt;/span> username &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> password;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String encodedAuth &lt;span style="color:#f92672">=&lt;/span> java.&lt;span style="color:#a6e22e">util&lt;/span>.&lt;span style="color:#a6e22e">Base64&lt;/span>.&lt;span style="color:#a6e22e">getEncoder&lt;/span>().&lt;span style="color:#a6e22e">encodeToString&lt;/span>(auth.&lt;span style="color:#a6e22e">getBytes&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setRequestProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Authorization&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Basic &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> encodedAuth);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">setDoOutput&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 응답 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> responseCode &lt;span style="color:#f92672">=&lt;/span> conn.&lt;span style="color:#a6e22e">getResponseCode&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (responseCode &lt;span style="color:#f92672">==&lt;/span> HttpURLConnection.&lt;span style="color:#a6e22e">HTTP_OK&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BufferedReader in &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BufferedReader(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> InputStreamReader(conn.&lt;span style="color:#a6e22e">getInputStream&lt;/span>(), StandardCharsets.&lt;span style="color:#a6e22e">UTF_8&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String inputLine;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StringBuilder response &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuilder();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ((inputLine &lt;span style="color:#f92672">=&lt;/span> in.&lt;span style="color:#a6e22e">readLine&lt;/span>()) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response.&lt;span style="color:#a6e22e">append&lt;/span>(inputLine);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> in.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> response.&lt;span style="color:#a6e22e">toString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Response Code: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> responseCode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// SSL 검증 비활성화&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disableSSLVerification();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String baseUrl &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;https://your-blackduck-server&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;your-username&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;your-password&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String response &lt;span style="color:#f92672">=&lt;/span> authenticate(baseUrl, username, password);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Response: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> response);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>안전한 운영 환경을 위한 인증서 설정 방법:&lt;/p></description></item><item><title>Coverity Performance</title><link>https://jongyongpark.github.io/posts/technical-support/coverity/cov-performance/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/technical-support/coverity/cov-performance/</guid><description>&lt;h1 id="expected-a-covjsessionid-build-cookie-in-the-response-but-it-was-missing">Expected a [COVJSESSIONID-build] cookie in the response, but it was missing&lt;/h1>
&lt;p>추가 로그 분석을 통해 더 자세한 상황을 파악할 수 있습니다:&lt;/p>
&lt;p>원래 문제:&lt;/p>
&lt;pre tabindex="0">&lt;code>Expected a [COVJSESSIONID-build] cookie in the response, but it was missing
&lt;/code>&lt;/pre>&lt;p>추가 로그 분석:&lt;/p>
&lt;ol>
&lt;li>인증 상태:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>Authentication=CovUsernameAuthenticationToken [
Principal=admin (Admin User),
Authenticated=true,
RemoteIpAddress=10.2.150.57,
SessionId=69FB1C3437377E29D3B887C9FDFA5403,
Granted Authorities=[ROLE_AUTHENTICATED_USER]
]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>서버 측에서는 admin 사용자가 성공적으로 인증됨&lt;/li>
&lt;li>세션이 정상적으로 생성됨&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>백그라운드 프로세스:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>com.coverity.ces.service.GarbageCollectionServiceImpl.runGarbageCollection
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>GarbageCollection 서비스가 정상적으로 동작 중&lt;/li>
&lt;/ul>
&lt;p>수정된 해결 방안:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>세션 관련:&lt;/p></description></item></channel></rss>