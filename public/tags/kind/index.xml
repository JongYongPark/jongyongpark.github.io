<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>KinD on RyanLabs</title><link>https://jongyongpark.github.io/tags/kind/</link><description>Recent content in KinD on RyanLabs</description><generator>Hugo -- 0.142.0</generator><language>ko</language><lastBuildDate>Fri, 14 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jongyongpark.github.io/tags/kind/index.xml" rel="self" type="application/rss+xml"/><item><title>KinD for k8s</title><link>https://jongyongpark.github.io/posts/k8s_docker/k8s-kind/</link><pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate><guid>https://jongyongpark.github.io/posts/k8s_docker/k8s-kind/</guid><description>&lt;hr>
&lt;h1 id="kind로-3개의-worker-node를-포함한-클러스터를-만드는-bash-스크립트">KinD로 3개의 worker node를 포함한 클러스터를 만드는 Bash 스크립트&lt;/h1>
&lt;p>다음은 &lt;code>KinD&lt;/code>(Kubernetes in Docker)를 사용하여 프라이빗 클라우드를 생성하고, 3개의 worker node를 포함한 클러스터를 만드는 Bash 스크립트입니다. 이 스크립트는 필요한 유틸리티를 다운로드하고 설치하며, &lt;code>kind&lt;/code> 클러스터를 구성합니다.&lt;/p>
&lt;h3 id="bash-script-setup_kind_clustersh">&lt;strong>Bash Script: &lt;code>setup_kind_cluster.sh&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 스크립트 실행 중 오류 발생 시 중단&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 변수 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KIND_VERSION&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;v0.20.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KUBECTL_VERSION&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;v1.28.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DOCKER_COMPOSE_VERSION&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;v2.22.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 필요한 유틸리티 다운로드 및 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>install_utilities&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Docker 설치 (Docker가 설치되어 있지 않을 경우)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ! command -v docker &amp;amp;&amp;gt; /dev/null; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker를 설치 중입니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -fsSL https://get.docker.com | bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo usermod -aG docker $USER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker 설치 완료. 사용하려면 로그아웃 후 다시 로그인하세요.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker가 이미 설치되어 있습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># kind 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ! command -v kind &amp;amp;&amp;gt; /dev/null; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind를 설치 중입니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -Lo ./kind https://kind.sigs.k8s.io/dl/&lt;span style="color:#e6db74">${&lt;/span>KIND_VERSION&lt;span style="color:#e6db74">}&lt;/span>/kind-linux-amd64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chmod +x ./kind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo mv ./kind /usr/local/bin/kind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 설치 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind가 이미 설치되어 있습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># kubectl 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ! command -v kubectl &amp;amp;&amp;gt; /dev/null; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kubectl을 설치 중입니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -LO &lt;span style="color:#e6db74">&amp;#34;https://dl.k8s.io/release/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>KUBECTL_VERSION&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/bin/linux/amd64/kubectl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chmod +x ./kubectl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo mv ./kubectl /usr/local/bin/kubectl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kubectl 설치 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kubectl이 이미 설치되어 있습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Docker Compose 설치 (필요한 경우)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ! command -v docker-compose &amp;amp;&amp;gt; /dev/null; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker Compose를 설치 중입니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -L &lt;span style="color:#e6db74">&amp;#34;https://github.com/docker/compose/releases/download/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>DOCKER_COMPOSE_VERSION&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/docker-compose-&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>uname -s&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">-&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>uname -m&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -o /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chmod +x /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker Compose 설치 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Docker Compose가 이미 설치되어 있습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Kind 클러스터 설정 파일 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_kind_cluster_config&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 클러스터 설정 파일을 생성합니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF &amp;gt; kind-cluster-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">kind: Cluster
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">apiVersion: kind.x-k8s.io/v1alpha4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">nodes:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - role: control-plane
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - role: worker
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - role: worker
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - role: worker
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 클러스터 설정 파일 생성 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Kind 클러스터 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_kind_cluster&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 클러스터를 생성합니다...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kind create cluster --config kind-cluster-config.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Kind 클러스터 생성 완료.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 주요 함수 호출&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>install_utilities
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_kind_cluster_config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_kind_cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 클러스터 정보 출력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl get nodes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;3개의 worker 노드를 포함한 Kind 클러스터가 성공적으로 생성되었습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="스크립트-설명">&lt;strong>스크립트 설명&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>필수 유틸리티 설치&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>Docker&lt;/code>, &lt;code>kind&lt;/code>, &lt;code>kubectl&lt;/code>, &lt;code>docker-compose&lt;/code>가 설치되지 않은 경우 자동으로 다운로드하고 설치합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>클러스터 구성 파일&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>kind-cluster-config.yaml&lt;/code> 파일을 생성하며, 하나의 control-plane 노드와 3개의 worker 노드를 포함합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>클러스터 생성&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>kind&lt;/code>를 이용해 클러스터를 생성합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>kubectl로 클러스터 상태 확인&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>kubectl&lt;/code> 명령어를 통해 생성된 클러스터의 노드 상태를 확인할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="사용-방법">&lt;strong>사용 방법&lt;/strong>:&lt;/h3>
&lt;ol>
&lt;li>스크립트를 파일로 저장 (예: &lt;code>setup_kind_cluster.sh&lt;/code>).&lt;/li>
&lt;li>파일에 실행 권한을 부여:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chmod +x setup_kind_cluster.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>스크립트 실행:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./setup_kind_cluster.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>클러스터가 성공적으로 생성되면 &lt;code>kubectl get nodes&lt;/code> 명령을 통해 노드 상태를 확인할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;p>이 스크립트는 &lt;code>KinD&lt;/code>를 활용하여 간단하게 3개의 worker 노드가 있는 클러스터를 설정할 수 있도록 도와줍니다.&lt;/p></description></item></channel></rss>